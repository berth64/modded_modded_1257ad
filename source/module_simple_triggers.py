# -*- coding: utf-8 -*-
from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *
from header_music import *

from module_constants import *

####################################################################################################################
# Simple triggers are the alternative to old style triggers. They do not preserve state, and thus simpler to maintain.
#
#  Each simple trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Operation block: This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################



simple_triggers = [
	(ti_on_party_encounter,
		[]),

	(ti_simulate_battle,
		[]),

	(1.0,
		[
			(gt, "$auto_besiege_town", 0),
			(gt, "$g_player_besiege_town", 0),
			(ge, "$g_siege_method", 1),
			(store_current_hours, ":current_hours"),
			(eq, "$g_siege_force_wait", 0),
			(ge, ":current_hours", "$g_siege_method_finish_hours"),
			(neg|is_currently_night),
			(rest_for_hours, 0, 0, 0)
		]),

	(0.0,
		[
			(try_begin),
				(eq, "$bug_fix_version", 0),
				(disable_party, "p_test_scene"),
				(faction_set_note_available, "fac_player_faction", 0),
				(faction_set_note_available, "fac_no_faction", 0),
				(try_begin),
					(neg|check_quest_active, "qst_kidnapped_girl"),
					(party_remove_members, "p_main_party", "trp_kidnapped_girl", 1),
				(try_end),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_2_pretender"),
					(try_begin),
						(troop_slot_eq, ":troop", slot_troop_occupation, 0),
						(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
						(is_between, ":faction_of_troop_troop", "fac_kingdom_1", "fac_kingdoms_end"),
						(troop_set_slot, ":troop", slot_troop_occupation, 2),
					(try_end),
				(try_end),
				(call_script, "script_initialize_item_info"),
				(assign, "$bug_fix_version", 1),
			(try_end),
			(eq, "$g_player_is_captive", 1),
			(gt, "$capturer_party", 0),
			(party_is_active, "$capturer_party"),
			(party_relocate_near_party, "p_main_party", "$capturer_party", 0)
		]),

	(0.0,
		[
			(try_begin),
				(gt, "$g_last_rest_center", 0),
				(party_get_battle_opponent, ":battle_opponent_l_g_last_rest_center", "$g_last_rest_center"),
				(gt, ":battle_opponent_l_g_last_rest_center", 0),
				(store_faction_of_party, ":faction_of_party_g_last_rest_center", "$g_last_rest_center"),
				(store_relation, ":relation_faction_of_party_g_last_rest_center_player_supporters_faction", ":faction_of_party_g_last_rest_center", "fac_player_supporters_faction"),
				(store_faction_of_party, ":faction_of_party_battle_opponent_l_g_last_rest_center", ":battle_opponent_l_g_last_rest_center"),
				(store_relation, ":relation_faction_of_party_battle_opponent_l_g_last_rest_center_player_supporters_faction", ":faction_of_party_battle_opponent_l_g_last_rest_center", "fac_player_supporters_faction"),
				(ge, ":relation_faction_of_party_g_last_rest_center_player_supporters_faction", 0),
				(lt, ":relation_faction_of_party_battle_opponent_l_g_last_rest_center_player_supporters_faction", 0),
				(start_encounter, "$g_last_rest_center"),
				(rest_for_hours, 0, 0, 0),
			(else_try),
				(store_current_hours, ":current_hours"),
				(assign, ":value", 0),
				(try_begin),
					(neq, "$g_check_autos_at_hour", 0),
					(ge, ":current_hours", "$g_check_autos_at_hour"),
					(assign, ":value", 1),
					(assign, "$g_check_autos_at_hour", 0),
				(try_end),
				(this_or_next|eq, ":value", 1),
				(map_free),
				(try_begin),
					(ge, "$auto_menu", 1),
					(jump_to_menu, "$auto_menu"),
					(assign, "$auto_menu", -1),
				(else_try),
					(ge, "$auto_enter_town", 1),
					(start_encounter, "$auto_enter_town"),
				(else_try),
					(ge, "$auto_besiege_town", 1),
					(start_encounter, "$auto_besiege_town"),
				(else_try),
					(ge, "$g_camp_mode", 1),
					(assign, "$g_camp_mode", 0),
					(assign, "$g_infinite_camping", 0),
					(assign, "$g_player_icon_state", 0),
					(rest_for_hours, 0, 0, 0),
					(display_message, "@Breaking camp..."),
				(try_end),
			(try_end)
		]),

	(0.0,
		[
			(troop_slot_ge, "trp_notification_menu_types", 0, 1),
			(troop_get_slot, ":notification_menu_types_relations_begin", "trp_notification_menu_types", slot_troop_relations_begin),
			(troop_get_slot, "$g_notification_menu_var1", "trp_notification_menu_var1", slot_troop_relations_begin),
			(troop_get_slot, "$g_notification_menu_var2", "trp_notification_menu_var2", slot_troop_relations_begin),
			(jump_to_menu, ":notification_menu_types_relations_begin"),
			(assign, ":var_2", 2),
			(try_for_range, ":localvariable", 1, ":var_2"),
				(try_begin),
					(troop_slot_ge, "trp_notification_menu_types", ":localvariable", 1),
					(val_add, ":var_2", 1),
				(try_end),
				(store_sub, ":value", ":localvariable", 1),
				(troop_get_slot, ":notification_menu_types_localvariable", "trp_notification_menu_types", ":localvariable"),
				(troop_set_slot, "trp_notification_menu_types", ":value", ":notification_menu_types_localvariable"),
				(troop_get_slot, ":notification_menu_types_localvariable", "trp_notification_menu_var1", ":localvariable"),
				(troop_set_slot, "trp_notification_menu_var1", ":value", ":notification_menu_types_localvariable"),
				(troop_get_slot, ":notification_menu_types_localvariable", "trp_notification_menu_var2", ":localvariable"),
				(troop_set_slot, "trp_notification_menu_var2", ":value", ":notification_menu_types_localvariable"),
			(try_end)
		]),

	#Music,
	(3.0,
	[
       (map_free),
			(call_script, "script_music_set_situation_with_culture", mtf_sit_travel),
			#(display_message, "str_check_reg8_s4_reconciles_s5_and_s6_"),
	]),	
	#original script	
	#(3.0, #disable this piece of shit
	#	[
	#	##ALL overwolrd music tracks are handled by this """"simple"""" script, no need to call script_music_set_situation_with_culture situation travel
	#		(eq, 1, 0),
	#			(map_free),
	#				(assign, ":i", 0),
	#				(call_script, "script_get_closest_center", "p_main_party"),
	#				(party_get_slot, ":reg0_center_origina	l_faction", reg0, slot_center_original_faction),
	#				#(music_set_situation, mtf_sit_travel),
	#				(try_begin),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_20"),#Emirate of Granada
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_25"),#Mamluk Sultanate
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_28"),#Sultanat_al_Hafsi
	#					(eq, ":reg0_center_original_faction", "fac_kingdom_31"), #Marinid Dynasty
	#						(assign, ":i", 1),
	#						(music_set_culture, mtf_culture_4), #sandnigger
	#						(music_set_situation, mtf_sit_travel),
	#				(else_try),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_28"),#Sultanat_al_Hafsi
	#					(eq, ":reg0_center_original_faction", "fac_kingdom_31"),#Marinid Dynasty
	#						(assign, ":i", 2),
	#						(music_set_culture, mtf_culture_5), #slavic???????
	#						(music_set_situation, mtf_sit_travel),
	#				(else_try),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_3"), #Golden Horde
	#					(eq, ":reg0_center_original_faction", "fac_kingdom_27"), #Il-khanate 
	#						(assign, ":i", 3),
	#						(music_set_culture, mtf_culture_3), #mongols
	#						(music_set_situation, mtf_sit_travel),
	#				(else_try),
	#					#(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_4"), #Kingdom of Denmark
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_11"),  #Kingdom of Norway
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_2"), #Kingdom of Lithuania
	#					#(eq, ":reg0_center_original_faction", "fac_kingdom_14"), #Kingdom of Sweden
	#						(assign, ":i", 4),
	#						(music_set_culture, mtf_culture_2), #baltic
	#						(music_set_situation, mtf_sit_travel),
	#				#for roman emperah
	#				(else_try),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_38"),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_23"),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_24"),
	#					(this_or_next|eq, ":reg0_center_original_faction", "fac_kingdom_22"),
	#					(eq, ":reg0_center_original_faction", "fac_kingdom_26"),
	#						(assign, ":i", 5),
	#						(music_set_culture, mtf_culture_6), #roman
	#						(music_set_situation, mtf_sit_travel),
	#				(else_try),
	#					(assign, ":i", 0),
	#					(music_set_culture, mtf_culture_1), #yurop
	#					(music_set_situation, mtf_sit_travel),
	#				(try_end),
	#				(display_message, ":i", 0x00ff0000),
	#	]),

	(0.0,
		[
			(try_begin),
				(eq, "$caravan_escort_state", 1),
				(party_is_active, "$caravan_escort_party_id"),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_caravan_escort_destination_town_caravan_escort_party_id", "$caravan_escort_destination_town", "$caravan_escort_party_id"),
				(lt, ":distance_to_party_from_party_caravan_escort_destination_town_caravan_escort_party_id", 2),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_caravan_escort_party_id", "p_main_party", "$caravan_escort_party_id"),
				(lt, ":distance_to_party_from_party_main_party_caravan_escort_party_id", 5),
				(assign, "$talk_context", 2),
				(assign, "$g_encountered_party", "$caravan_escort_party_id"),
				(party_stack_get_troop_id, ":party_stack_troop_id_caravan_escort_party_id_0", "$caravan_escort_party_id", 0),
				(party_stack_get_troop_dna, ":party_stack_troop_dna_caravan_escort_party_id_0", "$caravan_escort_party_id", 0),
				(start_map_conversation, ":party_stack_troop_id_caravan_escort_party_id_0", ":party_stack_troop_dna_caravan_escort_party_id_0"),
			(try_end),
			(try_begin),
				(gt, "$g_reset_mission_participation", 1),
				(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
					(troop_set_slot, ":troop", slot_troop_mission_participation, 0),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 0),
			(faction_slot_eq, "fac_player_supporters_faction", slot_faction_ai_state, 6),
			(store_current_hours, ":current_hours"),
			(faction_get_slot, ":player_supporters_faction_ai_current_state_started", "fac_player_supporters_faction", slot_faction_ai_current_state_started),
			(val_sub, ":current_hours", ":player_supporters_faction_ai_current_state_started"),
			(gt, ":current_hours", 168),
			(call_script, "script_faction_conclude_feast", "fac_player_supporters_faction", 6),
			(display_message, "@Your kingdoms feast have concluded.")
		]),

	(4.0,
		[
			(try_for_range, ":troop", "trp_knight_1_1_wife", "trp_heroes_end"),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(call_script, "script_get_kingdom_lady_social_determinants", ":troop"),
				(assign, ":var_2", reg1),
				(troop_set_slot, ":troop", slot_troop_cur_center, ":var_2"),
			(try_end)
		]),

	(2.0,
		[]),

	(24.0,
		[
			(try_begin),
				(neg|check_quest_active, "qst_visit_lady"),
				(neg|troop_slot_ge, "trp_player", 8, 1),
				(neg|troop_slot_ge, "trp_player", 30, "trp_npc1"),
				(assign, ":value", -1),
				(assign, ":value_2", 120),
				(try_for_range, ":troop", "trp_knight_1_1_wife", "trp_heroes_end"),
					(troop_slot_ge, ":troop", 5, 2),
					(neg|troop_slot_eq, ":troop", slot_troop_met, 4),
					(troop_slot_eq, ":troop", slot_troop_love_interest_3, 0),
					(troop_slot_eq, ":troop", slot_troop_spouse, -1),
					(troop_get_slot, ":troop_cur_center", ":troop", slot_troop_cur_center),
					(is_between, ":troop_cur_center", "p_town_1_1", "p_village_1_1"),
					(call_script, "script_troop_get_relation_with_troop", "trp_player", ":troop"),
					(gt, reg0, 1),
					(store_current_hours, ":current_hours"),
					(troop_get_slot, ":troop_last_talk_time", ":troop", slot_troop_last_talk_time),
					(val_sub, ":current_hours", ":troop_last_talk_time"),
					(gt, ":current_hours", ":value_2"),
					(assign, ":value_2", ":current_hours"),
					(assign, ":value", ":troop"),
					(assign, ":var_7", ":troop_cur_center"),
				(try_end),
				(try_begin),
					(gt, ":value", 0),
					(call_script, "script_add_notification_menu", "mnu_notification_lady_requests_visit", ":value", ":var_7"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(ge, "$g_player_raiding_village", 1),
			(try_begin),
				(neq, "$g_player_is_captive", 0),
				(assign, "$g_player_raiding_village", 0),
			(else_try),
				(map_free),
				(assign, "$g_player_raiding_village", 0),
			(else_try),
				(this_or_next|party_slot_eq, "$g_player_raiding_village", slot_village_state, 2),
				(party_slot_eq, "$g_player_raiding_village", slot_village_state, 4),
				(start_encounter, "$g_player_raiding_village"),
				(rest_for_hours, 0),
				(assign, "$g_player_raiding_village", 0),
				(assign, "$g_player_raid_complete", 1),
			(else_try),
				(party_slot_eq, "$g_player_raiding_village", slot_village_state, 1),
				(rest_for_hours, 3, 3, 1),
			(else_try),
				(rest_for_hours, 0, 0, 0),
				(assign, "$g_player_raiding_village", 0),
				(assign, "$g_player_raid_complete", 0),
			(try_end)
		]),

	(168.0,
		[
			(assign, "$g_presentation_lines_to_display_begin", 0),
			(assign, "$g_presentation_lines_to_display_end", 15),
			(assign, "$g_apply_budget_report_to_gold", 1),
			(store_current_hours, "$g_last_payday"),
			(try_begin),
				(eq, "$g_infinite_camping", 0),
				(start_presentation, "prsnt_budget_report"),
				(try_begin),
					(gt, "$g_player_debt_to_party_members", 5000),
					(call_script, "script_add_notification_menu", "mnu_dplmc_deserters", 20, 0),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(le, "$auto_menu", 0),
			(gt, "$players_kingdom", 0),
			(neq, "$players_kingdom", "fac_player_supporters_faction"),
			(eq, "$player_has_homage", 0),
			(troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
			(assign, ":value", 0),
			(try_begin),
				(is_between, ":player_spouse", "trp_npc1", "trp_knight_1_1_wife"),
				(store_faction_of_troop, ":faction_of_troop_player_spouse", ":player_spouse"),
				(eq, ":faction_of_troop_player_spouse", "$players_kingdom"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 0),
			(store_current_day, ":current_day"),
			(gt, ":current_day", "$mercenary_service_next_renew_day"),
			(jump_to_menu, "mnu_oath_fulfilled")
		]),

	(180.0,
		[
			(val_sub, "$g_player_luck", 1),
			(val_max, "$g_player_luck", 0)
		]),

	(72.0,
		[
			(assign, "$lady_flirtation_location", 0)
		]),

	(4.0,
		[
			(assign, "$g_time_to_spare", 1),
			(try_begin),
				(troop_slot_ge, "trp_player", 30, "trp_npc1"),
				(assign, "$g_player_banner_granted", 1),
			(try_end)
		]),

	(24.0,
		[
			(eq, "$g_player_banner_granted", 1),
			(troop_slot_eq, "trp_player", slot_troop_banner_scene_prop, 0),
			(le, "$auto_menu", 0),
			(start_presentation, "prsnt_banner_selection")
		]),

	(24.0,
		[
			(call_script, "script_get_player_party_morale_values"),
			(assign, ":var_1", reg0),
			(party_get_morale, ":morale_main_party", "p_main_party"),
			(store_sub, ":value", ":var_1", ":morale_main_party"),
			(store_div, ":value_2", ":value", 5),
			(store_mul, ":value_3", ":value_2", 5),
			(try_begin),
				(neq, ":value_3", ":value"),
				(try_begin),
					(gt, ":value", 0),
					(val_add, ":value_2", 1),
				(else_try),
					(val_sub, ":value_2", 1),
				(try_end),
			(try_end),
			(val_add, ":morale_main_party", ":value_2"),
			(party_set_morale, "p_main_party", ":morale_main_party")
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_party", ":party"),
				(try_for_range_backwards, ":var_3", 0, ":num_prisoner_stacks_party"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_party_var_3", ":party", ":var_3"),
					(neg|troop_is_hero, ":party_prisoner_stack_troop_id_party_var_3"),
					(party_prisoner_stack_get_size, ":party_prisoner_stack_size_party_var_3", ":party", ":var_3"),
					(store_random_in_range, ":random_in_range_0_40", 0, 40),
					(val_mul, ":party_prisoner_stack_size_party_var_3", ":random_in_range_0_40"),
					(val_div, ":party_prisoner_stack_size_party_var_3", 100),
					(party_remove_prisoners, ":party", ":party_prisoner_stack_troop_id_party_var_3", ":party_prisoner_stack_size_party_var_3"),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_get_slot, ":troop_player_debt", ":troop", slot_troop_player_debt),
				(val_mul, ":troop_player_debt", 101),
				(val_div, ":troop_player_debt", 100),
				(troop_set_slot, ":troop", slot_troop_player_debt, ":troop_player_debt"),
				(call_script, "script_calculate_hero_weekly_net_income_and_add_to_wealth", ":troop"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_is_active, ":troop_leaded_party"),
				(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
				(is_between, ":attached_to_troop_leaded_party", "p_town_1_1", "p_salt_mine"),
				(party_slot_eq, ":attached_to_troop_leaded_party", slot_center_is_besieged_by, -1),
				(store_faction_of_party, ":faction_of_party_troop_leaded_party", ":troop_leaded_party"),
				(try_begin),
					(this_or_next|eq, ":faction_of_party_troop_leaded_party", "fac_player_supporters_faction"),
					(eq, ":faction_of_party_troop_leaded_party", "$players_kingdom"),
					(assign, ":value", 1),
					(store_random_in_range, ":random_in_range_0_2", 0, 2),
					(val_add, ":value", ":random_in_range_0_2"),
				(else_try),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value", 3),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 1),
						(assign, ":value", 2),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value", 1),
					(try_end),
				(try_end),
				(try_begin),
					(faction_slot_eq, ":faction_of_party_troop_leaded_party", slot_faction_marshall, ":troop"),
					(val_add, ":value", 1),
				(try_end),
				(try_for_range, ":unused", 0, ":value"),
					(call_script, "script_hire_men_to_kingdom_hero_party", ":troop"),
				(try_end),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(neg|party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(party_set_slot, ":party", 700, 0),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(party_slot_ge, ":party", 7, 0),
				(party_slot_eq, ":party", slot_center_is_besieged_by, -1),
				(party_slot_eq, ":party", 700, 0),
				(assign, ":value_2", 300),
				(try_begin),
					(is_between, ":party", "p_town_1_1", "p_castle_1_1"),
					(assign, ":value_2", 500),
				(try_end),
				(party_get_num_companions, ":num_companions_party", ":party"),
				(try_begin),
					(lt, ":num_companions_party", ":value_2"),
					(call_script, "script_cf_reinforce_party", ":party"),
				(try_end),
			(try_end)
		]),

	(360.0,
		[]),

	(6.0,
		[
			(store_current_day, ":current_day"),
			(try_begin),
				(neq, ":current_day", "$g_last_half_payment_check_day"),
				(assign, "$g_last_half_payment_check_day", ":current_day"),
				(try_begin),
					(eq, "$g_half_payment_checkpoint", 1),
					(val_add, "$g_cur_week_half_daily_wage_payments", 1),
				(try_end),
				(assign, "$g_half_payment_checkpoint", 1),
			(try_end),
			(assign, ":value", 0),
			(try_begin),
				(neg|map_free),
				(ge, "$g_last_rest_center", 0),
				(this_or_next|party_slot_eq, "$g_last_rest_center", slot_center_has_manor, 1),
				(is_between, "$g_last_rest_center", "p_town_1_1", "p_village_1_1"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 0),
			(assign, "$g_half_payment_checkpoint", 0)
		]),

	(2.0,
		[
			(store_current_hours, ":current_hours"),
			(try_begin),
				(gt, ":current_hours", 168),
				(call_script, "script_randomly_start_war_peace_new", 1),
			(try_end),
			(store_sub, ":value", "fac_kingdoms_end", 1),
			(try_begin),
				(ge, "$g_diplo_kingdom", ":value"),
				(try_begin),
					(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 0),
					(assign, "$g_diplo_kingdom", "fac_player_supporters_faction"),
				(else_try),
					(assign, "$g_diplo_kingdom", "fac_kingdom_1"),
				(try_end),
			(else_try),
				(val_add, "$g_diplo_kingdom", 1),
			(try_end)
		]),

	(24.0,
		[
			(try_begin),
				(call_script, "script_raf_create_incidents"),
				(assign, ":var_1", reg0),
				(assign, ":var_2", reg1),
				(gt, ":var_1", 0),
				(gt, ":var_2", 0),
				(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
				(store_faction_of_party, ":faction_of_party_var_2", ":var_2"),
				(neq, ":var_1", ":var_2"),
				(neq, ":faction_of_party_var_1", ":faction_of_party_var_2"),
				(call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction_of_party_var_2", ":faction_of_party_var_1"),
				(eq, reg0, 0),
				(try_begin),
					(party_slot_eq, ":var_1", slot_center_original_faction, ":faction_of_party_var_2"),
					(call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var_1", -1),
				(else_try),
					(party_slot_eq, ":var_1", slot_center_ex_faction, ":faction_of_party_var_2"),
					(call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var_1", -1),
				(else_try),
					(set_fixed_point_multiplier, 1),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_2", ":var_1", ":var_2"),
					(lt, ":distance_to_party_from_party_var_1_var_2", 25),
					(call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var_1", ":var_2"),
				(try_end),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(try_for_range, ":faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(neq, ":faction", ":faction_2"),
					(faction_slot_eq, ":faction_2", slot_faction_state, 0),
					(store_add, ":value", ":faction_2", 120),
					(val_sub, ":value", "fac_player_supporters_faction"),
					(faction_get_slot, ":faction_value", ":faction", ":value"),
					(try_begin),
						(ge, ":faction_value", 1),
						(try_begin),
							(eq, ":faction_value", 1),
							(call_script, "script_update_faction_notes", ":faction"),
							(lt, ":faction", ":faction_2"),
							(call_script, "script_add_notification_menu", "mnu_notification_truce_expired", ":faction", ":faction_2"),
						(try_end),
						(val_sub, ":faction_value", 1),
						(faction_set_slot, ":faction", ":value", ":faction_value"),
					(try_end),
					(store_add, ":value_2", ":faction_2", 170),
					(val_sub, ":value_2", "fac_player_supporters_faction"),
					(faction_get_slot, ":faction_value_2", ":faction", ":value_2"),
					(try_begin),
						(ge, ":faction_value_2", 1),
						(try_begin),
							(store_relation, ":relation_faction_faction_2", ":faction", ":faction_2"),
							(lt, ":relation_faction_faction_2", 0),
							(faction_set_slot, ":faction", ":value_2", 0),
						(else_try),
							(eq, ":faction_value_2", 1),
							(call_script, "script_add_notification_menu", "mnu_notification_casus_belli_expired", ":faction", ":faction_2"),
							(faction_set_slot, ":faction", ":value_2", 0),
						(else_try),
							(val_sub, ":faction_value_2", 1),
							(faction_set_slot, ":faction", ":value_2", ":faction_value_2"),
						(try_end),
					(try_end),
					(try_begin),
						(store_relation, ":relation_faction_faction_2", ":faction", ":faction_2"),
						(lt, ":relation_faction_faction_2", 0),
						(store_add, ":value_3", ":faction_2", 220),
						(val_sub, ":value_3", "fac_player_supporters_faction"),
						(faction_get_slot, ":faction_value_3", ":faction", ":value_3"),
						(val_add, ":faction_value_3", 1),
						(faction_set_slot, ":faction", ":value_3", ":faction_value_3"),
					(try_end),
				(try_end),
				(call_script, "script_update_faction_notes", ":faction"),
			(try_end)
		]),

	(48.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(gt, ":troop_leaded_party", "p_salt_mine"),
				(party_is_active, ":troop_leaded_party"),
				(store_skill_level, ":skill_level_17_troop", 17, ":troop"),
				(val_add, ":skill_level_17_troop", 3),
				(store_mul, ":value", ":skill_level_17_troop", 500),
				(assign, ":value_2", 30),
				(try_begin),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(neq, ":faction_of_troop_troop", "$players_kingdom"),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value_2", 35),
						(val_mul, ":value", 3),
						(val_div, ":value", 2),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value_2", 25),
						(val_div, ":value", 2),
					(try_end),
				(try_end),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(le, ":random_in_range_0_100", ":value_2"),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(neq, ":party_town_lord", "trp_player"),
				(assign, ":value", 3000),
				(assign, ":value_2", 30),
				(try_begin),
					(assign, ":var_11", -1),
					(try_begin),
						(ge, ":party_town_lord", 0),
						(store_faction_of_troop, ":var_11", ":party_town_lord"),
					(try_end),
					(neq, ":var_11", "$players_kingdom"),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value_2", 35),
						(val_mul, ":value", 3),
						(val_div, ":value", 2),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value_2", 25),
						(val_div, ":value", 2),
					(try_end),
				(try_end),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(le, ":random_in_range_0_100", ":value_2"),
			(try_end)
		]),

	(24.0,
		[
			(call_script, "script_process_sieges")
		]),

	(2.0,
		[
			(call_script, "script_process_village_raids")
		]),

	(7.0,
		[
			(call_script, "script_init_ai_calculation"),
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(call_script, "script_calculate_troop_ai", ":troop"),
			(try_end)
		]),

	(24.0,
		[
			(assign, "$men_are_pleased", 0)
		]),

	(24.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_get_slot, ":troop_intrigue_impatience", ":troop", slot_troop_intrigue_impatience),
				(val_sub, ":troop_intrigue_impatience", 5),
				(val_max, ":troop_intrigue_impatience", 0),
				(troop_set_slot, ":troop", slot_troop_intrigue_impatience, ":troop_intrigue_impatience"),
			(try_end),
			(store_random_in_range, ":random_in_range_1_3", 1, 3),
			(val_min, ":random_in_range_1_3", 2),
			(try_for_range, ":troop_2", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_get_slot, ":troop_2_days_on_mission", ":troop_2", slot_troop_days_on_mission),
				(ge, ":troop_2_days_on_mission", 1),
				(val_sub, ":troop_2_days_on_mission", ":random_in_range_1_3"),
				(val_max, ":troop_2_days_on_mission", 0),
				(troop_set_slot, ":troop_2", slot_troop_days_on_mission, ":troop_2_days_on_mission"),
			(try_end),
			(troop_get_slot, ":troop_2_days_on_mission", "trp_player", slot_troop_days_on_mission),
			(val_sub, ":troop_2_days_on_mission", ":random_in_range_1_3"),
			(val_max, ":troop_2_days_on_mission", 0),
			(troop_set_slot, "trp_player", slot_troop_days_on_mission, ":troop_2_days_on_mission")
		]),

	(6.0,
		[
			(call_script, "script_cf_random_political_event"),
			(call_script, "script_cf_random_political_event")
		]),

	(0.5,
		[
			(val_add, "$g_lord_long_term_count", 1),
			(try_begin),
				(neg|is_between, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin", "trp_knight_1_1_wife"),
				(assign, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin"),
			(try_end),
			(assign, ":value", "$g_lord_long_term_count"),
			(try_begin),
				(eq, ":value", "trp_kingdom_heroes_including_player_begin"),
				(assign, ":value", "trp_player"),
			(try_end),
			(try_begin),
				(eq, "$cheat_mode", 1),
				(str_store_troop_name, 9, ":value"),
				(display_message, "@{!}DEBUG -- Doing political calculations for {s9}"),
			(try_end),
			(try_begin),
				(troop_slot_eq, ":value", slot_troop_occupation, 2),
				(neq, ":value", "trp_player"),
				(assign, ":value_2", -1),
				(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
					(party_slot_eq, ":party", slot_town_lord, ":value"),
					(assign, ":value_2", ":party"),
				(try_end),
				(try_begin),
					(eq, ":value_2", -1),
					(store_faction_of_troop, ":faction_of_troop_value", ":value"),
					(faction_get_slot, ":faction_of_troop_value_leader", ":faction_of_troop_value", slot_faction_leader),
					(troop_get_slot, ":value_lord_reputation_type", ":value", slot_lord_reputation_type),
					(try_begin),
						(neq, ":faction_of_troop_value_leader", ":value"),
						(try_begin),
							(this_or_next|eq, ":value_lord_reputation_type", 2),
							(this_or_next|eq, ":value_lord_reputation_type", 3),
							(this_or_next|eq, ":value_lord_reputation_type", 4),
							(eq, ":value_lord_reputation_type", 5),
							(call_script, "script_troop_change_relation_with_troop", ":value", ":faction_of_troop_value_leader", -4),
							(val_add, "$total_no_fief_changes", -4),
						(else_try),
							(eq, ":value_lord_reputation_type", 1),
							(call_script, "script_troop_change_relation_with_troop", ":value", ":faction_of_troop_value_leader", -2),
							(val_add, "$total_no_fief_changes", -2),
						(try_end),
					(try_end),
				(try_end),
			(try_end),
			(try_begin),
				(this_or_next|troop_slot_eq, ":value", slot_troop_occupation, 2),
				(eq, ":value", "trp_player"),
				(try_begin),
					(eq, ":value", "trp_player"),
					(assign, ":var_7", "$players_kingdom"),
				(else_try),
					(store_faction_of_troop, ":var_7", ":value"),
				(try_end),
				(faction_get_slot, ":faction_of_troop_value_leader", ":var_7", slot_faction_leader),
				(neq, ":value", ":faction_of_troop_value_leader"),
				(neg|is_between, ":value", "trp_kingdom_1_lord", "trp_knight_1_1"),
				(neg|is_between, ":value", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
				(assign, ":var_8", 0),
				(try_for_range, ":party_2", "p_town_1_1", "p_village_1_1"),
					(store_faction_of_party, ":faction_of_party_party_2", ":party_2"),
					(eq, ":faction_of_party_party_2", ":var_7"),
					(val_add, ":var_8", 1),
				(try_end),
				(try_begin),
					(this_or_next|eq, ":var_7", "$players_kingdom"),
					(eq, ":var_7", "fac_player_supporters_faction"),
					(val_add, ":var_8", 1),
				(try_end),
				(call_script, "script_troop_get_relation_with_troop", ":value", ":faction_of_troop_value_leader"),
				(this_or_next|le, reg0, -50),
				(eq, ":var_8", 0),
				(call_script, "script_cf_troop_can_intrigue", ":value", 0),
				(store_random_in_range, ":random_in_range_0_2", 0, 2),
				(try_begin),
					(this_or_next|eq, ":var_8", 0),
					(neq, ":random_in_range_0_2", 0),
					(neq, ":value", "trp_player"),
					(try_begin),
						(neq, ":var_8", 0),
						(assign, "$g_give_advantage_to_original_faction", 1),
					(try_end),
					(store_faction_of_troop, ":faction_of_troop_value_2", ":value"),
					(call_script, "script_lord_find_alternative_faction", ":value"),
					(assign, ":var_13", reg0),
					(assign, "$g_give_advantage_to_original_faction", 0),
					(try_begin),
						(neq, ":var_13", ":faction_of_troop_value_2"),
						(is_between, ":var_13", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(str_store_troop_name_link, 1, ":value"),
						(str_store_faction_name_link, 2, ":var_13"),
						(str_store_faction_name_link, 3, ":var_7"),
						(call_script, "script_change_troop_faction", ":value", ":var_13"),
						(try_begin),
							(ge, "$cheat_mode", 1),
							(str_store_troop_name, 4, ":value"),
							(display_message, "@{!}DEBUG - {s4} faction changed in defection"),
						(try_end),
						(troop_get_type, reg4, ":value"),
						(str_store_string, 4, "str_lord_defects_ordinary"),
						(display_log_message, "@{!}{s4}"),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(this_or_next|eq, ":var_13", "$players_kingdom"),
							(eq, ":var_7", "$players_kingdom"),
							(call_script, "script_add_notification_menu", "mnu_notification_lord_defects", ":value", ":var_7"),
						(try_end),
					(try_end),
				(else_try),
					(neq, ":faction_of_troop_value_leader", "trp_player"),
					(call_script, "script_troop_get_relation_with_troop", ":value", ":faction_of_troop_value_leader"),
					(le, reg0, -50),
					(call_script, "script_indict_lord_for_treason", ":value", ":var_7"),
				(try_end),
			(else_try),
				(neq, ":value", "trp_player"),
				(store_faction_of_troop, ":var_7", ":value"),
				(faction_slot_ge, ":var_7", 64, 1),
				(neg|troop_slot_ge, ":value", 154, 1),
				(this_or_next|troop_slot_eq, ":value", slot_troop_stance_on_faction_issue, -1),
				(neq, "$players_kingdom", ":var_7"),
				(troop_slot_eq, ":value", slot_troop_occupation, 2),
				(call_script, "script_npc_decision_checklist_take_stand_on_issue", ":value"),
				(troop_set_slot, ":value", slot_troop_stance_on_faction_issue, reg0),
			(try_end),
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(call_script, "script_troop_get_relation_with_troop", ":value", ":troop"),
				(lt, reg0, 0),
				(assign, ":var_15", reg0),
				(store_sub, ":value_3", 0, ":var_15"),
				(store_random_in_range, ":random_in_range_0_300", 0, 300),
				(lt, ":random_in_range_0_300", ":value_3"),
				(call_script, "script_troop_change_relation_with_troop", ":value", ":troop", 1),
				(val_add, "$total_relation_changes_through_convergence", 1),
			(try_end)
		]),

	(3.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(try_begin),
					(this_or_next|party_slot_ge, ":party", 54, 0),
					(party_slot_eq, ":party", slot_village_state, 1),
					(party_slot_eq, ":party", slot_center_last_spotted_enemy, -1),
					(call_script, "script_process_alarms_new", ":party"),
				(else_try),
					(this_or_next|neg|party_slot_ge, ":party", 54, 0),
					(neg|party_slot_eq, ":party", slot_village_state, 1),
					(party_set_slot, ":party", slot_center_last_spotted_enemy, -1),
					(party_set_slot, ":party", slot_center_sortie_strength, 0),
					(party_set_slot, ":party", slot_center_sortie_enemy_strength, 0),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(call_script, "script_allow_vassals_to_join_indoor_battle"),
			(call_script, "script_process_kingdom_parties_ai")
		]),

	(3.0,
		[
			(store_current_hours, ":current_hours"),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(party_get_slot, ":party_center_is_besieged_by", ":party", slot_center_is_besieged_by),
				(gt, ":party_center_is_besieged_by", 0),
				(party_is_active, ":party_center_is_besieged_by"),
				(store_faction_of_party, ":faction_of_party_party_center_is_besieged_by", ":party_center_is_besieged_by"),
				(party_slot_ge, ":party", 54, 1),
				(party_get_slot, ":party_center_siege_begin_hours", ":party", slot_center_siege_begin_hours),
				(store_sub, ":party_center_siege_begin_hours", ":current_hours", ":party_center_siege_begin_hours"),
				(assign, ":value", 0),
				(assign, ":value_2", 0),
				(assign, ":var_8", 0),
				(assign, ":value_3", 0),
				(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
					(troop_slot_eq, ":troop", slot_troop_occupation, 2),
					(neg|troop_slot_ge, ":troop", 8, 0),
					(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
					(gt, ":troop_leaded_party", 0),
					(party_is_active, ":troop_leaded_party"),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(eq, ":faction_of_troop_troop", ":faction_of_party_party_center_is_besieged_by"),
					(assign, ":value_4", 0),
					(try_begin),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 1),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_object, ":party"),
						(assign, ":value_4", 1),
					(else_try),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 11),
						(party_get_slot, ":troop_leaded_party_ai_object", ":troop_leaded_party", slot_party_ai_object),
						(gt, ":troop_leaded_party_ai_object", 0),
						(party_is_active, ":troop_leaded_party_ai_object"),
						(party_slot_eq, ":troop_leaded_party_ai_object", slot_party_ai_state, 1),
						(party_slot_eq, ":troop_leaded_party_ai_object", slot_party_ai_object, ":party"),
						(assign, ":value_4", 1),
					(try_end),
					(eq, ":value_4", 1),
					(party_get_battle_opponent, ":battle_opponent_troop_leaded_party", ":troop_leaded_party"),
					(this_or_next|lt, ":battle_opponent_troop_leaded_party", 0),
					(eq, ":battle_opponent_troop_leaded_party", ":party"),
					(try_begin),
						(faction_slot_eq, ":faction_of_party_party_center_is_besieged_by", slot_faction_marshall, ":troop"),
						(assign, ":value_3", 1),
					(try_end),
					(call_script, "script_party_calculate_regular_strength", ":troop_leaded_party"),
					(val_add, ":var_8", reg0),
				(try_end),
				(try_begin),
					(gt, ":var_8", 0),
					(party_collect_attachments_to_party, ":party", "p_collective_enemy"),
					(call_script, "script_party_calculate_regular_strength", "p_collective_enemy"),
					(assign, ":var_16", reg0),
					(try_begin),
						(eq, "$auto_enter_town", ":party"),
						(eq, "$g_player_is_captive", 0),
						(call_script, "script_party_calculate_regular_strength", "p_main_party"),
						(val_add, ":var_16", reg0),
						(val_mul, ":var_8", 2),
					(try_end),
					(party_get_slot, ":party_center_siege_hardness", ":party", slot_center_siege_hardness),
					(val_add, ":party_center_siege_hardness", 100),
					(val_mul, ":var_16", ":party_center_siege_hardness"),
					(val_div, ":var_16", 100),
					(val_max, ":var_16", 1),
					(try_begin),
						(eq, ":value_3", 1),
						(eq, ":faction_of_party_party_center_is_besieged_by", "$players_kingdom"),
						(check_quest_active, "qst_follow_army"),
						(val_mul, ":var_8", 2),
					(try_end),
					(store_mul, ":value_5", ":var_8", 100),
					(val_div, ":value_5", ":var_16"),
					(store_sub, ":value_6", ":value_5", 240),
					(try_begin),
						(gt, ":value_6", -100),
						(store_div, ":value_7", ":party_center_siege_begin_hours", 2),
						(val_add, ":value_6", ":value_7"),
					(try_end),
					(val_div, ":value_6", 5),
					(val_max, ":value_6", 0),
					(store_sub, ":value_8", 175, ":value_5"),
					(val_max, ":value_8", 0),
					(try_begin),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", ":value_6"),
						(gt, ":party_center_siege_begin_hours", 24),
						(assign, ":value", 1),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", ":value_8"),
						(assign, ":value_2", 1),
					(try_end),
				(else_try),
					(assign, ":value_2", 1),
				(try_end),
				(try_begin),
					(eq, ":value", 1),
					(call_script, "script_begin_assault_on_center", ":party"),
				(else_try),
					(eq, ":value_2", 1),
					(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
						(troop_slot_eq, ":troop", slot_troop_occupation, 2),
						(neg|troop_slot_ge, ":troop", 8, 0),
						(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
						(gt, ":troop_leaded_party", 0),
						(party_is_active, ":troop_leaded_party"),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 1),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_object, ":party"),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_substate, 1),
						(call_script, "script_party_set_ai_state", ":troop_leaded_party", -1, -1),
						(call_script, "script_party_set_ai_state", ":troop_leaded_party", 1, ":party"),
						(party_set_slot, ":party", slot_center_siege_begin_hours, ":current_hours"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(call_script, "script_recalculate_ais"),
			(val_add, "$g_ai_kingdom", 1),
			(try_begin),
				(ge, "$g_ai_kingdom", "fac_kingdoms_end"),
				(assign, "$g_ai_kingdom", "fac_player_supporters_faction"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(call_script, "script_faction_recalculate_strength", ":faction"),
			(try_end),
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_ai_state, 0),
				(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_ai_state, 6),
				(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_ai_state, 1),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(party_is_active, ":troop_leaded_party"),
				(val_add, "$total_vassal_days_on_campaign", 1),
				(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 11),
				(val_add, "$total_vassal_days_responding_to_campaign", 1),
			(try_end)
		]),

	(36.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_set_slot, ":troop", slot_troop_does_not_give_quest, 0),
			(try_end),
			(try_for_range, ":troop", "trp_village_1_elder", "trp_merchants_end"),
				(troop_set_slot, ":troop", slot_troop_does_not_give_quest, 0),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(call_script, "script_refresh_village_merchant_inventory", ":party"),
			(try_end)
		]),

	(48.0,
		[
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(call_script, "script_refresh_village_defenders", ":party"),
				(party_set_slot, ":party", slot_village_player_can_not_steal_cattle, 0),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(neg|is_between, ":party", "p_castle_1_1", "p_village_1_1"),
				(party_get_slot, ":party_village_number_of_cattle", ":party", slot_village_number_of_cattle),
				(party_get_slot, ":party_center_head_sheep", ":party", slot_center_head_sheep),
				(party_get_slot, ":party_center_acres_pasture", ":party", slot_center_acres_pasture),
				(val_max, ":party_center_acres_pasture", 1),
				(store_mul, ":value", ":party_village_number_of_cattle", 400),
				(store_mul, ":value_2", ":party_center_head_sheep", 200),
				(val_add, ":value", ":value_2"),
				(val_div, ":value", ":party_center_acres_pasture"),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(try_begin),
					(eq, ":random_in_range_0_100", 0),
					(val_min, ":party_village_number_of_cattle", 10),
				(else_try),
					(gt, ":value", 100),
					(val_mul, ":party_center_head_sheep", 90),
					(val_div, ":party_center_head_sheep", 100),
					(val_mul, ":party_village_number_of_cattle", 90),
					(val_div, ":party_village_number_of_cattle", 100),
				(else_try),
					(lt, ":value", 30),
					(val_mul, ":party_village_number_of_cattle", 120),
					(val_div, ":party_village_number_of_cattle", 100),
					(val_add, ":party_village_number_of_cattle", 1),
					(val_mul, ":party_center_head_sheep", 120),
					(val_div, ":party_center_head_sheep", 100),
					(val_add, ":party_center_head_sheep", 1),
				(else_try),
					(lt, ":value", 60),
					(val_mul, ":party_village_number_of_cattle", 110),
					(val_div, ":party_village_number_of_cattle", 100),
					(val_add, ":party_village_number_of_cattle", 1),
					(val_mul, ":party_center_head_sheep", 110),
					(val_div, ":party_center_head_sheep", 100),
					(val_add, ":party_center_head_sheep", 1),
				(else_try),
					(lt, ":value", 100),
					(lt, ":random_in_range_0_100", 50),
					(val_mul, ":party_village_number_of_cattle", 105),
					(val_div, ":party_village_number_of_cattle", 100),
					(try_begin),
						(le, ":party_village_number_of_cattle", 20),
						(val_add, ":party_village_number_of_cattle", 1),
					(try_end),
					(val_mul, ":party_center_head_sheep", 105),
					(val_div, ":party_center_head_sheep", 100),
					(try_begin),
						(le, ":party_center_head_sheep", 20),
						(val_add, ":party_center_head_sheep", 1),
					(try_end),
				(try_end),
				(party_set_slot, ":party", slot_village_number_of_cattle, ":party_village_number_of_cattle"),
				(party_set_slot, ":party", slot_center_head_sheep, ":party_center_head_sheep"),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(try_begin),
					(party_slot_ge, ":party", 7, 0),
					(party_get_slot, ":party_center_accumulated_rents", ":party", slot_center_accumulated_rents),
					(assign, ":value", 800),
					(try_begin),
						(party_slot_eq, ":party", slot_party_type, 4),
						(try_begin),
							(party_slot_eq, ":party", slot_village_state, 0),
							(assign, ":value", 3000),
						(try_end),
					(else_try),
						(party_slot_eq, ":party", slot_party_type, 2),
						(assign, ":value", 6000),
					(else_try),
						(party_slot_eq, ":party", slot_party_type, 3),
						(assign, ":value", 10000),
					(try_end),
					(party_get_slot, ":party_town_prosperity", ":party", slot_town_prosperity),
					(store_add, ":value_2", 35, ":party_town_prosperity"),
					(val_mul, ":value", ":value_2"),
					(val_div, ":value", 135),
					(try_begin),
						(party_slot_eq, ":party", slot_town_lord, "trp_player"),
						(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
						(try_begin),
							(eq, ":game_reduce_campaign_ai", 0),
							(val_mul, ":value", 3),
							(val_div, ":value", 4),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 1),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 2),
							(val_mul, ":value", 4),
							(val_div, ":value", 3),
						(try_end),
					(try_end),
					(party_get_slot, ":party_400", ":party", 400),
					(store_mul, ":value_3", ":value", ":party_400"),
					(val_div, ":value_3", 100),
					(val_add, ":party_center_accumulated_rents", ":value_3"),
					(val_add, ":party_center_accumulated_rents", ":value"),
					(party_set_slot, ":party", slot_center_accumulated_rents, ":party_center_accumulated_rents"),
				(try_end),
			(try_end)
		]),

	(32.0,
		[
			(eq, "$players_kingdom", 0),
			(le, "$g_invite_faction", 0),
			(eq, "$g_player_is_captive", 0),
			(troop_get_type, ":type_player", "trp_player"),
			(try_begin),
				(eq, ":type_player", 1),
				(eq, "$npc_with_sisterly_advice", 0),
				(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
					(main_party_has_troop, ":troop"),
					(troop_get_type, ":type_troop", ":troop"),
					(eq, ":type_troop", 1),
					(troop_slot_ge, "trp_player", 7, 150),
					(troop_slot_ge, ":troop", 139, 1),
					(assign, "$npc_with_sisterly_advice", ":troop"),
				(try_end),
			(else_try),
				(store_random_in_range, ":random_in_range_kingdom_1_kingdoms_end", "fac_kingdom_1", "fac_kingdoms_end"),
				(assign, ":var_5", 999999),
				(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(eq, ":faction_of_party_party", ":random_in_range_kingdom_1_kingdoms_end"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_party", "p_main_party", ":party"),
					(val_min, ":var_5", ":distance_to_party_from_party_main_party_party"),
				(try_end),
				(lt, ":var_5", 30),
				(store_relation, ":relation_random_in_range_kingdom_1_kingdoms_end_player_supporters_faction", ":random_in_range_kingdom_1_kingdoms_end", "fac_player_supporters_faction"),
				(faction_get_slot, ":random_in_range_kingdom_1_kingdoms_end_leader", ":random_in_range_kingdom_1_kingdoms_end", slot_faction_leader),
				(call_script, "script_troop_get_player_relation", ":random_in_range_kingdom_1_kingdoms_end_leader"),
				(assign, ":var_11", reg0),
				(call_script, "script_get_number_of_hero_centers", "trp_player"),
				(assign, ":var_12", reg0),
				(eq, "$g_infinite_camping", 0),
				(assign, ":value", 0),
				(try_begin),
					(ge, "p_main_party", 0),
					(store_party_size_wo_prisoners, ":value", "p_main_party"),
				(try_end),
				(try_begin),
					(eq, ":var_12", 0),
					(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
					(ge, ":player_renown", 160),
					(ge, ":relation_random_in_range_kingdom_1_kingdoms_end_player_supporters_faction", 0),
					(ge, ":var_11", 0),
					(ge, ":value", 45),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 50),
					(call_script, "script_get_poorest_village_of_faction", ":random_in_range_kingdom_1_kingdoms_end"),
					(assign, "$g_invite_offered_center", reg0),
					(ge, "$g_invite_offered_center", 0),
					(assign, "$g_invite_faction", ":random_in_range_kingdom_1_kingdoms_end"),
					(jump_to_menu, "mnu_invite_player_to_faction"),
				(else_try),
					(gt, ":var_12", 0),
					(neq, "$players_oath_renounced_against_kingdom", ":random_in_range_kingdom_1_kingdoms_end"),
					(ge, ":relation_random_in_range_kingdom_1_kingdoms_end_player_supporters_faction", -40),
					(ge, ":var_11", -20),
					(ge, ":value", 30),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 20),
					(assign, "$g_invite_faction", ":random_in_range_kingdom_1_kingdoms_end"),
					(assign, "$g_invite_offered_center", -1),
					(jump_to_menu, "mnu_invite_player_to_faction_without_center"),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(assign, ":var_1", 0),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(try_for_range, ":faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(faction_slot_eq, ":faction_2", slot_faction_state, 0),
					(neq, ":faction_2", ":faction"),
					(store_relation, ":relation_faction_faction_2", ":faction", ":faction_2"),
					(lt, ":relation_faction_faction_2", 0),
					(val_add, ":var_1", 1),
				(try_end),
				(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(eq, ":faction_of_troop_troop", ":faction"),
					(try_begin),
						(eq, ":var_1", 2),
						(store_random_in_range, ":random_in_range_3000_9999", 3000, 9999),
					(else_try),
						(gt, ":var_1", 3),
						(store_random_in_range, ":random_in_range_3000_9999", 7000, 9999),
					(else_try),
						(store_random_in_range, ":random_in_range_3000_9999", 0, 9999),
					(try_end),
					(troop_set_slot, ":troop", slot_troop_temp_decision_seed, ":random_in_range_3000_9999"),
				(try_end),
			(try_end)
		]),

	(0.3,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_is_active, ":troop_leaded_party"),
				(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
				(lt, ":attached_to_troop_leaded_party", 1),
				(party_get_cur_town, ":cur_town_troop_leaded_party", ":troop_leaded_party"),
				(is_between, ":cur_town_troop_leaded_party", "p_town_1_1", "p_salt_mine"),
				(call_script, "script_get_relation_between_parties", ":cur_town_troop_leaded_party", ":troop_leaded_party"),
				(try_begin),
					(ge, reg0, 0),
					(party_attach_to_party, ":troop_leaded_party", ":cur_town_troop_leaded_party"),
				(else_try),
					(party_set_ai_behavior, ":troop_leaded_party", 0),
				(try_end),
				(try_begin),
					(this_or_next|party_slot_eq, ":cur_town_troop_leaded_party", slot_party_type, 3),
					(party_slot_eq, ":cur_town_troop_leaded_party", slot_party_type, 2),
					(store_faction_of_party, ":faction_of_party_troop_leaded_party", ":troop_leaded_party"),
					(store_faction_of_party, ":faction_of_party_cur_town_troop_leaded_party", ":cur_town_troop_leaded_party"),
					(eq, ":faction_of_party_troop_leaded_party", ":faction_of_party_cur_town_troop_leaded_party"),
					(party_get_num_prisoner_stacks, ":num_prisoner_stacks_troop_leaded_party", ":troop_leaded_party"),
					(gt, ":num_prisoner_stacks_troop_leaded_party", 0),
					(assign, "$g_move_heroes", 1),
					(call_script, "script_party_prisoners_add_party_prisoners", ":cur_town_troop_leaded_party", ":troop_leaded_party"),
					(assign, "$g_move_heroes", 1),
					(call_script, "script_party_remove_all_prisoners", ":troop_leaded_party"),
				(try_end),
			(try_end),
			(try_for_parties, ":var_8"),
				(gt, ":var_8", "p_spawn_points_end"),
				(party_get_template_id, ":template_id_var_8", ":var_8"),
				(ge, ":template_id_var_8", "pt_steppe_bandit_lair"),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_var_8", "p_main_party", ":var_8"),
				(lt, ":distance_to_party_from_party_main_party_var_8", 3),
				(party_set_flags, ":var_8", 256, 0),
				(party_set_flags, ":var_8", 16384, 1),
			(try_end)
		]),

	(48.0,
		[
			(call_script, "script_randomly_make_prisoner_heroes_escape_from_party", "p_main_party", 50),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(assign, ":value", 30),
				(try_begin),
					(party_slot_eq, ":party", slot_center_has_prisoner_tower, 1),
					(assign, ":value", 5),
				(try_end),
				(call_script, "script_randomly_make_prisoner_heroes_escape_from_party", ":party", ":value"),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(neg|troop_slot_ge, ":troop", 10, 1),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(try_begin),
					(eq, ":faction_of_troop_troop", "fac_outlaws"),
				(else_try),
					(try_begin),
						(eq, "$cheat_mode", 2),
						(str_store_troop_name, 4, ":troop"),
						(display_message, "str_debug__attempting_to_spawn_s4"),
					(try_end),
					(call_script, "script_cf_select_random_walled_center_with_faction_and_owner_priority_no_siege", ":faction_of_troop_troop", ":troop"),
					(assign, ":var_3", reg0),
					(try_begin),
						(eq, "$cheat_mode", 2),
						(assign, reg7, ":var_3"),
						(str_store_party_name, 7, ":var_3"),
						(display_message, "str_debug__s0_is_spawning_around_party__s7"),
					(try_end),
					(call_script, "script_create_kingdom_hero_party", ":troop", ":var_3"),
					(try_begin),
						(eq, "$g_there_is_no_avaliable_centers", 0),
						(party_attach_to_party, "$pout_party", ":var_3"),
					(try_end),
					(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
					(call_script, "script_party_set_ai_state", ":troop_leaded_party", 7, ":var_3"),
				(else_try),
					(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_state, 0),
					(try_begin),
						(is_between, ":troop", "trp_kingdom_1_lord", "trp_knight_1_1"),
						(troop_set_slot, ":troop", slot_troop_change_to_faction, "fac_commoners"),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", 10),
						(call_script, "script_cf_get_random_active_faction_except_player_faction_and_faction", ":faction_of_troop_troop"),
						(troop_set_slot, ":troop", slot_troop_change_to_faction, reg0),
					(try_end),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(party_slot_eq, ":party", slot_village_state, 0),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(lt, ":random_in_range_0_100", 60),
				(party_get_slot, ":party_village_market_town", ":party", slot_village_market_town),
				(party_slot_eq, ":party_village_market_town", slot_center_is_besieged_by, -1),
				(call_script, "script_do_villager_center_trade", ":party", ":party_village_market_town"),
				(assign, ":var_4", reg0),
				(call_script, "script_do_villager_center_trade", ":party_village_market_town", ":party"),
				(party_get_slot, ":party_village_market_town_center_accumulated_tariffs", ":party_village_market_town", slot_center_accumulated_tariffs),
				(party_get_slot, ":party_village_market_town_town_prosperity", ":party_village_market_town", slot_town_prosperity),
				(assign, ":var_7", ":var_4"),
				(val_mul, ":var_7", ":party_village_market_town_town_prosperity"),
				(val_div, ":var_7", 100),
				(val_div, ":var_7", 20),
				(val_add, ":party_village_market_town_center_accumulated_tariffs", ":var_7"),
				(party_set_slot, ":party_village_market_town", slot_center_accumulated_tariffs, ":party_village_market_town_center_accumulated_tariffs"),
				(party_get_slot, ":party_village_market_town_food_store", ":party_village_market_town", slot_party_food_store),
				(call_script, "script_center_get_food_store_limit", ":party_village_market_town"),
				(assign, ":var_9", reg0),
				(val_add, ":party_village_market_town_food_store", 1000),
				(val_min, ":party_village_market_town_food_store", ":var_9"),
				(party_set_slot, ":party_village_market_town", slot_party_food_store, ":party_village_market_town_food_store"),
			(try_end)
		]),

	(72.0,
		[
			(call_script, "script_update_trade_good_prices"),
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(party_get_slot, ":party_town_player_odds", ":party", slot_town_player_odds),
				(try_begin),
					(gt, ":party_town_player_odds", 1000),
					(val_mul, ":party_town_player_odds", 95),
					(val_div, ":party_town_player_odds", 100),
					(val_max, ":party_town_player_odds", 1000),
				(else_try),
					(lt, ":party_town_player_odds", 1000),
					(val_mul, ":party_town_player_odds", 105),
					(val_div, ":party_town_player_odds", 100),
					(val_min, ":party_town_player_odds", 1000),
				(try_end),
				(party_set_slot, ":party", slot_town_player_odds, ":party_town_player_odds"),
			(try_end)
		]),

	(8.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 11),
				(party_is_in_any_town, ":var_1"),
				(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
				(faction_get_slot, ":faction_of_party_var_1_num_towns", ":faction_of_party_var_1", slot_faction_num_towns),
				(try_begin),
					(le, ":faction_of_party_var_1_num_towns", 0),
					(remove_party, ":var_1"),
				(else_try),
					(party_get_cur_town, ":cur_town_var_1", ":var_1"),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(try_begin),
						(party_slot_eq, ":cur_town_var_1", slot_town_lord, "trp_player"),
						(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
						(try_begin),
							(eq, ":game_reduce_campaign_ai", 0),
							(assign, ":value", 35),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 1),
							(assign, ":value", 45),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 2),
							(assign, ":value", 60),
						(try_end),
					(else_try),
						(assign, ":value", 45),
					(try_end),
					(lt, ":random_in_range_0_100", ":value"),
					(assign, ":value_2", 1),
					(try_begin),
						(is_between, ":cur_town_var_1", "p_town_1_1", "p_village_1_1"),
						(neg|party_slot_eq, ":cur_town_var_1", slot_center_is_besieged_by, -1),
						(assign, ":value_2", 0),
					(try_end),
					(eq, ":value_2", 1),
					(assign, ":value_3", 0),
					(try_begin),
						(party_get_slot, ":var_1_ai_state", ":var_1", slot_party_ai_state),
						(eq, ":var_1_ai_state", 13),
						(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
						(eq, ":cur_town_var_1", ":var_1_ai_object"),
						(assign, ":value_3", 1),
					(try_end),
					(assign, ":value_4", -1),
					(try_begin),
						(eq, "$caravan_escort_party_id", ":var_1"),
						(neg|party_is_in_town, ":var_1", "$caravan_escort_destination_town"),
						(assign, ":value_4", "$caravan_escort_destination_town"),
					(else_try),
						(call_script, "script_cf_select_most_profitable_town_at_peace_with_faction_in_trade_route", ":cur_town_var_1", ":faction_of_party_var_1"),
						(assign, ":value_4", reg0),
					(try_end),
					(is_between, ":value_4", "p_town_1_1", "p_castle_1_1"),
					(neg|party_is_in_town, ":var_1", ":value_4"),
					(try_begin),
						(eq, ":value_3", 1),
						(str_store_party_name, 7, ":cur_town_var_1"),
						(call_script, "script_do_merchant_town_trade", ":var_1", ":cur_town_var_1"),
					(try_end),
					(party_set_ai_behavior, ":var_1", 1),
					(party_set_ai_object, ":var_1", ":value_4"),
					(party_set_flags, ":var_1", 65536, 0),
					(party_set_slot, ":var_1", slot_party_ai_state, 13),
					(party_set_slot, ":var_1", slot_party_ai_object, ":value_4"),
				(try_end),
			(try_end)
		]),

	(8.0,
		[
			(eq, 0, 1),
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 15),
				(party_is_in_any_town, ":var_1"),
				(party_get_slot, ":var_1_home_center", ":var_1", slot_party_home_center),
				(party_get_cur_town, ":cur_town_var_1", ":var_1"),
				(assign, ":value", 1),
				(try_begin),
					(is_between, ":cur_town_var_1", "p_town_1_1", "p_village_1_1"),
					(neg|party_slot_eq, ":cur_town_var_1", slot_center_is_besieged_by, -1),
					(assign, ":value", 0),
				(try_end),
				(eq, ":value", 1),
				(try_begin),
					(eq, ":cur_town_var_1", ":var_1_home_center"),
					(call_script, "script_do_party_center_trade", ":var_1", ":var_1_home_center", 25),
					(store_faction_of_party, ":faction_of_party_cur_town_var_1", ":cur_town_var_1"),
					(party_set_faction, ":var_1", ":faction_of_party_cur_town_var_1"),
					(party_get_slot, ":var_1_home_center_village_market_town", ":var_1_home_center", slot_village_market_town),
					(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_home_center_village_market_town"),
					(party_set_slot, ":var_1", slot_party_ai_state, 13),
					(party_set_ai_behavior, ":var_1", 1),
					(party_set_ai_object, ":var_1", ":var_1_home_center_village_market_town"),
				(else_try),
					(try_begin),
						(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
						(eq, ":cur_town_var_1", ":var_1_ai_object"),
						(call_script, "script_do_party_center_trade", ":var_1", ":var_1_ai_object", 25),
						(assign, ":var_8", reg0),
						(party_get_slot, ":var_1_ai_object_center_accumulated_tariffs", ":var_1_ai_object", slot_center_accumulated_tariffs),
						(party_get_slot, ":var_1_ai_object_town_prosperity", ":var_1_ai_object", slot_town_prosperity),
						(assign, ":var_11", ":var_8"),
						(val_mul, ":var_11", ":var_1_ai_object_town_prosperity"),
						(val_div, ":var_11", 100),
						(val_div, ":var_11", 20),
						(val_add, ":var_1_ai_object_center_accumulated_tariffs", ":var_11"),
						(try_begin),
							(ge, "$cheat_mode", 3),
							(assign, reg4, ":var_11"),
							(str_store_party_name, 4, ":var_1_ai_object"),
							(assign, reg5, ":var_1_ai_object_center_accumulated_tariffs"),
							(display_message, "@{!}New tariffs at {s4} = {reg4}, total = {reg5}"),
						(try_end),
						(party_set_slot, ":var_1_ai_object", slot_center_accumulated_tariffs, ":var_1_ai_object_center_accumulated_tariffs"),
						(party_get_slot, ":var_1_ai_object_food_store", ":var_1_ai_object", slot_party_food_store),
						(call_script, "script_center_get_food_store_limit", ":var_1_ai_object"),
						(assign, ":var_13", reg0),
						(val_add, ":var_1_ai_object_food_store", 1000),
						(val_min, ":var_1_ai_object_food_store", ":var_13"),
						(party_set_slot, ":var_1_ai_object", slot_party_food_store, ":var_1_ai_object_food_store"),
						(try_begin),
							(store_random_in_range, ":random_in_range_0_100", 0, 100),
							(lt, ":random_in_range_0_100", 35),
							(call_script, "script_change_center_prosperity", ":var_1_home_center", 1),
							(val_add, "$newglob_total_prosperity_from_village_trade", 1),
						(try_end),
					(try_end),
					(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_home_center"),
					(party_set_slot, ":var_1", slot_party_ai_state, 13),
					(party_set_ai_behavior, ":var_1", 1),
					(party_set_ai_object, ":var_1", ":var_1_home_center"),
				(try_end),
			(try_end)
		]),

	(2.0,
		[
			(try_for_range, ":party", "p_castle_1_1", "p_village_1_1"),
				(party_slot_eq, ":party", slot_center_is_besieged_by, -1),
				(party_get_slot, ":party_food_store", ":party", slot_party_food_store),
				(val_add, ":party_food_store", 100),
				(call_script, "script_center_get_food_store_limit", ":party"),
				(assign, ":var_3", reg0),
				(val_min, ":party_food_store", ":var_3"),
				(party_set_slot, ":party", slot_party_food_store, ":party_food_store"),
			(try_end)
		]),

	(0.2,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(gt, ":troop_leaded_party", 0),
				(try_begin),
					(party_is_active, ":troop_leaded_party"),
					(try_begin),
						(get_party_ai_current_behavior, ":party_ai_current_behavior_troop_leaded_party", ":troop_leaded_party"),
						(eq, ":party_ai_current_behavior_troop_leaded_party", 5),
						(assign, ":value", 1),
						(try_begin),
							(this_or_next|troop_slot_eq, ":troop", slot_lord_reputation_type, 7),
							(troop_slot_eq, ":troop", slot_lord_reputation_type, 1),
							(get_party_ai_current_object, ":party_ai_current_object_troop_leaded_party", ":troop_leaded_party"),
							(party_is_active, ":party_ai_current_object_troop_leaded_party"),
							(party_get_battle_opponent, ":battle_opponent_party_ai_current_object_troop_leaded_party", ":party_ai_current_object_troop_leaded_party"),
							(party_is_active, ":battle_opponent_party_ai_current_object_troop_leaded_party"),
							(assign, ":value", 0),
						(try_end),
						(eq, ":value", 1),
						(store_faction_of_party, ":faction_of_party_troop_leaded_party", ":troop_leaded_party"),
						(party_get_slot, ":troop_leaded_party_commander_party", ":troop_leaded_party", slot_party_commander_party),
						(faction_get_slot, ":faction_of_party_troop_leaded_party_marshall", ":faction_of_party_troop_leaded_party", slot_faction_marshall),
						(neq, ":faction_of_party_troop_leaded_party_marshall", ":troop"),
						(assign, ":value", 1),
						(try_begin),
							(ge, ":faction_of_party_troop_leaded_party_marshall", 0),
							(troop_get_slot, ":faction_of_party_troop_leaded_party_marshall_leaded_party", ":faction_of_party_troop_leaded_party_marshall", slot_troop_leaded_party),
							(party_is_active, ":faction_of_party_troop_leaded_party_marshall_leaded_party", 0),
							(eq, ":troop_leaded_party_commander_party", ":faction_of_party_troop_leaded_party_marshall_leaded_party"),
							(assign, ":value", 0),
						(try_end),
						(eq, ":value", 1),
						(assign, ":value_2", 0),
						(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
							(eq, ":value_2", 0),
							(party_slot_eq, ":party", slot_center_is_besieged_by, -1),
							(store_faction_of_party, ":faction_of_party_party", ":party"),
							(store_relation, ":relation_faction_of_party_party_faction_of_party_troop_leaded_party", ":faction_of_party_party", ":faction_of_party_troop_leaded_party"),
							(gt, ":relation_faction_of_party_party_faction_of_party_troop_leaded_party", 0),
							(store_distance_to_party_from_party, ":distance_to_party_from_party_troop_leaded_party_party", ":troop_leaded_party", ":party"),
							(lt, ":distance_to_party_from_party_troop_leaded_party_party", 20),
							(party_get_position, 1, ":troop_leaded_party"),
							(party_get_position, 2, ":party"),
							(neg|position_is_behind_position, 2, 1),
							(call_script, "script_party_set_ai_state", ":troop_leaded_party", 14, ":party"),
							(assign, ":value_2", 1),
						(try_end),
					(try_end),
				(else_try),
					(troop_set_slot, ":troop", slot_troop_leaded_party, -1),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(store_current_hours, ":current_hours"),
			(store_mod, ":value", ":current_hours", 11),
			(store_sub, ":value_2", ":current_hours", 5),
			(party_get_num_companions, ":num_companions_main_party", "p_main_party"),
			(party_get_num_prisoners, ":num_prisoners_main_party", "p_main_party"),
			(val_add, ":num_companions_main_party", ":num_prisoners_main_party"),
			(convert_to_fixed_point, ":num_companions_main_party"),
			(store_sqrt, ":value_3", ":num_companions_main_party"),
			(convert_from_fixed_point, ":value_3"),
			(try_begin),
				(eq, ":value", 0),
				(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(faction_get_slot, ":faction_player_alarm", ":faction", slot_faction_player_alarm),
					(val_sub, ":faction_player_alarm", 1),
					(val_max, ":faction_player_alarm", 0),
					(faction_set_slot, ":faction", slot_faction_player_alarm, ":faction_player_alarm"),
				(try_end),
			(try_end),
			(eq, "$g_player_is_captive", 0),
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(store_faction_of_party, ":faction", ":party"),
				(store_relation, ":relation_faction_player_supporters_faction", ":faction", "fac_player_supporters_faction"),
				(lt, ":relation_faction_player_supporters_faction", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_party", "p_main_party", ":party"),
				(lt, ":distance_to_party_from_party_main_party_party", 5),
				(store_mul, ":value_4", ":distance_to_party_from_party_main_party_party", ":distance_to_party_from_party_main_party_party"),
				(store_sub, ":value_5", 20, ":value_4"),
				(store_sub, ":value_6", 20, ":relation_faction_player_supporters_faction"),
				(store_mul, ":value_7", ":value_5", ":value_6"),
				(val_mul, ":value_7", ":value_3"),
				(store_div, ":value_8", ":value_7", 10),
				(store_random_in_range, ":random_in_range_0_1000", 0, 1000),
				(lt, ":random_in_range_0_1000", ":value_8"),
				(faction_get_slot, ":faction_player_alarm", ":faction", slot_faction_player_alarm),
				(val_add, ":faction_player_alarm", 1),
				(val_min, ":faction_player_alarm", 100),
				(faction_set_slot, ":faction", slot_faction_player_alarm, ":faction_player_alarm"),
				(try_begin),
					(neg|party_slot_ge, ":party", 42, ":value_2"),
					(str_store_party_name_link, 1, ":party"),
					(display_message, "@Your party is spotted by {s1}."),
					(party_set_slot, ":party", slot_center_last_player_alarm_hour, ":current_hours"),
				(try_end),
			(try_end)
		]),

	(14.0,
		[
			(eq, "$g_player_is_captive", 0),
			(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
			(assign, ":var_2", 0),
			(try_for_range, ":localvariable", 0, ":num_companion_stacks_main_party"),
				(party_stack_get_size, ":party_stack_size_main_party_localvariable", "p_main_party", ":localvariable"),
				(val_add, ":var_2", ":party_stack_size_main_party_localvariable"),
			(try_end),
			(val_div, ":var_2", 3),
			(try_begin),
				(eq, ":var_2", 0),
				(val_add, ":var_2", 1),
			(try_end),
			(try_begin),
				(assign, ":var_5", 0),
				(try_for_range, ":item", "itm_smoked_fish", "itm_siege_supply"),
					(call_script, "script_cf_player_has_item_without_modifier", ":item", 41),
					(val_add, ":var_5", 1),
				(try_end),
			(try_end),
			(assign, ":var_7", ":var_2"),
			(assign, ":value", 0),
			(try_for_range, ":unused", 0, ":var_7"),
				(assign, ":var_10", 0),
				(try_for_range, ":item_2", "itm_smoked_fish", "itm_siege_supply"),
					(item_set_slot, ":item_2", slot_item_is_checked, 0),
					(call_script, "script_cf_player_has_item_without_modifier", ":item_2", 41),
					(val_add, ":var_10", 1),
				(try_end),
				(try_begin),
					(gt, ":var_10", 0),
					(store_random_in_range, ":random_in_range_0_var_10", 0, ":var_10"),
					(call_script, "script_consume_food", ":random_in_range_0_var_10"),
				(else_try),
					(eq, ":value", 0),
					(display_message, "@Party has nothing to eat!", 0x00ff0000),
					(call_script, "script_change_player_party_morale", -3),
					(assign, ":value", 1),
					(try_begin),
						(call_script, "script_party_count_fit_regulars", "p_main_party"),
						(gt, reg0, 0),
						(call_script, "script_objectionable_action", 2, "str_men_hungry"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":localvariable", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_localvariable", "trp_player", ":localvariable"),
				(this_or_next|eq, ":inventory_slot_player_localvariable", "itm_cattle_meat"),
				(this_or_next|eq, ":inventory_slot_player_localvariable", "itm_chicken"),
				(eq, ":inventory_slot_player_localvariable", "itm_pork"),
				(troop_get_inventory_slot_modifier, ":inventory_slot_modifier_player_localvariable", "trp_player", ":localvariable"),
				(try_begin),
					(ge, ":inventory_slot_modifier_player_localvariable", 37),
					(lt, ":inventory_slot_modifier_player_localvariable", 41),
					(val_add, ":inventory_slot_modifier_player_localvariable", 1),
					(troop_set_inventory_slot_modifier, "trp_player", ":localvariable", ":inventory_slot_modifier_player_localvariable"),
				(else_try),
					(lt, ":inventory_slot_modifier_player_localvariable", 37),
					(troop_set_inventory_slot_modifier, "trp_player", ":localvariable", 37),
				(try_end),
			(try_end)
		]),

	(72.0,
		[]),

	(0.0,
		[
			(troop_get_inventory_slot, ":inventory_slot_player_8", "trp_player", 8),
			(assign, ":value", -1),
			(try_begin),
				(eq, "$g_player_icon_state", 0),
				(try_begin),
					(ge, ":inventory_slot_player_8", 0),
					(assign, ":value", "icon_player_horseman"),
				(else_try),
					(assign, ":value", "icon_player"),
				(try_end),
			(else_try),
				(eq, "$g_player_icon_state", 1),
				(assign, ":value", "icon_camp"),
			(else_try),
				(eq, "$g_player_icon_state", 2),
				(assign, ":value", "icon_ship"),
			(try_end),
			(try_begin),
				(call_script, "script_cf_is_party_on_water", "p_main_party"),
				(assign, ":value", "icon_longship"),
			(try_end),
			(neq, ":value", "$g_player_party_icon"),
			(assign, "$g_player_party_icon", ":value"),
			(party_set_icon, "p_main_party", ":value")
		]),

	(4.0,
		[
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(store_div, ":value", ":troop_gold_player", 100),
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":localvariable", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_localvariable", "trp_player", ":localvariable"),
				(ge, ":inventory_slot_player_localvariable", 0),
				(try_begin),
					(is_between, ":inventory_slot_player_localvariable", "itm_spice", "itm_siege_supply"),
					(store_item_value, ":item_value_inventory_slot_player_localvariable", ":inventory_slot_player_localvariable"),
					(val_add, ":troop_gold_player", ":item_value_inventory_slot_player_localvariable"),
				(try_end),
			(try_end),
			(val_clamp, ":value", 0, 100),
			(party_set_bandit_attraction, "p_main_party", ":value")
		]),

	(3.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 2),
				(store_faction_of_party, ":faction_of_party_party", ":party"),
				(eq, ":faction_of_party_party", "fac_player_supporters_faction"),
				(call_script, "script_activate_player_faction", "trp_player"),
			(try_end)
		]),

	(6.0,
		[
			(gt, "$g_prisoner_recruit_troop_id", 0),
			(gt, "$g_prisoner_recruit_size", 0),
			(gt, "$g_prisoner_recruit_last_time", 0),
			(is_currently_night),
			(try_begin),
				(store_skill_level, ":skill_level_leadership_player", "skl_leadership", "trp_player"),
				(val_mul, ":skill_level_leadership_player", 5),
				(store_sub, ":value", 66, ":skill_level_leadership_player"),
				(gt, ":value", 0),
				(assign, ":value_2", 0),
				(try_for_range, ":unused", 0, "$g_prisoner_recruit_size"),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", ":value"),
					(val_add, ":value_2", 1),
				(try_end),
				(party_remove_members, "p_main_party", "$g_prisoner_recruit_troop_id", ":value_2"),
				(assign, ":value_2", reg0),
				(gt, ":value_2", 0),
				(try_begin),
					(gt, ":value_2", 1),
					(assign, reg2, 1),
				(else_try),
					(assign, reg2, 0),
				(try_end),
				(assign, reg1, ":value_2"),
				(str_store_troop_name_by_count, 1, "$g_prisoner_recruit_troop_id", ":value_2"),
				(display_log_message, "@{reg1} {s1} {reg2?have:has} escaped from your party during the night."),
			(try_end),
			(assign, "$g_prisoner_recruit_troop_id", 0),
			(assign, "$g_prisoner_recruit_size", 0)
		]),

	(24.0,
		[
			(neq, "$g_ransom_offer_rejected", 1),
			(call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", "p_main_party"),
			(eq, reg0, 0),
			(assign, ":value", "p_village_1_1"),
			(try_for_range, ":party", "p_town_1_1", ":value"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", ":party"),
				(eq, reg0, 1),
				(assign, ":value", 0),
			(try_end)
		]),

	(72.0,
		[
			(assign, "$g_ransom_offer_rejected", 0),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(gt, ":party_town_lord", 0),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_party", ":party"),
				(try_for_range_backwards, ":var_4", 0, ":num_prisoner_stacks_party"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_party_var_4", ":party", ":var_4"),
					(troop_is_hero, ":party_prisoner_stack_troop_id_party_var_4"),
					(troop_slot_eq, ":party_prisoner_stack_troop_id_party_var_4", slot_troop_occupation, 2),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(try_begin),
						(le, ":random_in_range_0_100", 10),
						(call_script, "script_calculate_ransom_amount_for_troop", ":party_prisoner_stack_troop_id_party_var_4"),
						(assign, ":var_7", reg0),
						(troop_get_slot, ":party_town_lord_wealth", ":party_town_lord", slot_troop_wealth),
						(val_add, ":party_town_lord_wealth", ":var_7"),
						(troop_set_slot, ":party_town_lord", slot_troop_wealth, ":party_town_lord_wealth"),
						(party_remove_prisoners, ":party", ":party_prisoner_stack_troop_id_party_var_4", 1),
						(call_script, "script_remove_troop_from_prison", ":party_prisoner_stack_troop_id_party_var_4"),
						(store_faction_of_troop, ":faction_of_troop_party_town_lord", ":party_town_lord"),
						(store_faction_of_troop, ":faction_of_troop_party_prisoner_stack_troop_id_party_var_4", ":party_prisoner_stack_troop_id_party_var_4"),
						(str_store_troop_name, 1, ":party_prisoner_stack_troop_id_party_var_4"),
						(str_store_faction_name, 2, ":faction_of_troop_party_town_lord"),
						(str_store_faction_name, 3, ":faction_of_troop_party_prisoner_stack_troop_id_party_var_4"),
						(store_relation, ":relation_faction_of_troop_party_prisoner_stack_troop_id_party_var_4_players_kingdom", ":faction_of_troop_party_prisoner_stack_troop_id_party_var_4", "$players_kingdom"),
						(try_begin),
							(this_or_next|lt, ":relation_faction_of_troop_party_prisoner_stack_troop_id_party_var_4_players_kingdom", 0),
							(eq, ":faction_of_troop_party_prisoner_stack_troop_id_party_var_4", "$players_kingdom"),
							(display_log_message, "@{s1} of {s3} has been released from captivity."),
						(try_end),
					(try_end),
				(try_end),
			(try_end)
		]),

	(72.0,
		[
			(call_script, "script_update_mercenary_units_of_towns"),
			(call_script, "script_update_ransom_brokers"),
			(call_script, "script_update_tavern_travellers"),
			(call_script, "script_update_tavern_minstrels"),
			(call_script, "script_update_booksellers"),
			(call_script, "script_update_villages_infested_by_bandits"),
			(call_script, "script_update_manor_infested_by_bandits"),
			(eq, "$use_feudal_lance", 0),
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(call_script, "script_update_volunteer_troops_in_village", ":party"),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_castle_1_1"),
				(call_script, "script_update_volunteer_troops_in_village", ":party"),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end),
			(try_for_range, ":party", "p_castle_1_1", "p_village_1_1"),
				(call_script, "script_update_volunteer_troops_in_village", ":party"),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end)
		]),

	(24.0,
		[
			(call_script, "script_update_other_taverngoers")
		]),

	(36.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(this_or_next|party_slot_eq, ":party", slot_party_type, 3),
				(party_slot_eq, ":party", slot_party_type, 4),
				(call_script, "script_center_remove_walker_type_from_walkers", ":party", 1),
				(call_script, "script_center_remove_walker_type_from_walkers", ":party", 2),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(try_begin),
					(lt, ":random_in_range_0_100", 70),
					(neg|party_slot_ge, ":party", 50, 60),
					(call_script, "script_cf_center_get_free_walker", ":party"),
					(call_script, "script_center_set_walker_to_type", ":party", reg0, 1),
				(try_end),
			(try_end)
		]),

	(12.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(party_get_slot, ":party_center_current_improvement", ":party", slot_center_current_improvement),
				(gt, ":party_center_current_improvement", 0),
				(party_get_slot, ":party_center_improvement_end_hour", ":party", slot_center_improvement_end_hour),
				(store_current_hours, ":current_hours"),
				(ge, ":current_hours", ":party_center_improvement_end_hour"),
				(party_set_slot, ":party", ":party_center_current_improvement", 1),
				(party_set_slot, ":party", slot_center_current_improvement, 0),
				(call_script, "script_get_improvement_details", ":party_center_current_improvement"),
				(try_begin),
					(party_slot_eq, ":party", slot_town_lord, "trp_player"),
					(str_store_party_name, 4, ":party"),
					(display_log_message, "@Building of {s0} in {s4} has been completed."),
				(try_end),
				(try_begin),
					(is_between, ":party", "p_village_1_1", "p_salt_mine"),
					(eq, ":party_center_current_improvement", 131),
					(call_script, "script_change_center_prosperity", ":party", 5),
				(try_end),
				(try_begin),
					(is_between, ":party", "p_village_1_1", "p_salt_mine"),
					(eq, ":party_center_current_improvement", 248),
					(party_get_slot, ":party_village_bound_center", ":party", slot_village_bound_center),
					(party_get_position, 0, ":party_village_bound_center"),
					(map_get_land_position_around_position, 1, 0, 3),
					(party_set_position, "p_village_player", 1),
					(party_set_flags, "p_village_player", 256, 0),
					(str_store_party_name, 10, ":party_village_bound_center"),
					(str_store_string, 11, "@{s10} Village"),
					(party_set_name, "p_village_player", 11),
					(party_set_flags, "p_village_player", 256, 0),
					(party_set_slot, "p_village_player", slot_village_bound_center, ":party_village_bound_center"),
					(party_get_slot, ":party_town_center", ":party", slot_town_center),
					(party_set_slot, "p_village_player", slot_town_center, ":party_town_center"),
					(party_get_position, 0, ":party"),
					(map_get_land_position_around_position, 1, 0, 3),
					(party_set_position, "p_castle_player", 1),
					(party_set_flags, "p_castle_player", 256, 0),
					(str_store_party_name, 10, ":party"),
					(str_store_string, 11, "@{s10} Castle"),
					(party_set_name, "p_castle_player", 11),
					(party_set_slot, ":party", slot_village_bound_center, "p_castle_player"),
					(party_set_slot, "p_castle_player", slot_party_type, 2),
					(party_set_slot, "p_village_player", slot_party_type, 4),
					(call_script, "script_give_center_to_faction_aux", "p_castle_player", "$players_kingdom"),
					(call_script, "script_give_center_to_faction_aux", "p_village_player", "$players_kingdom"),
					(try_begin),
						(call_script, "script_cf_get_random_lord_except_king_with_faction", "$players_kingdom"),
						(call_script, "script_give_center_to_lord", "p_village_player", reg0, 0),
					(else_try),
						(call_script, "script_give_center_to_lord", "p_village_player", "trp_player", 0),
					(try_end),
					(call_script, "script_give_center_to_lord", "p_castle_player", "trp_player", 0),
					(call_script, "script_give_center_to_lord", ":party", "trp_player", 0),
					(call_script, "script_update_village_market_towns"),
					(party_get_slot, ":party_center_culture", ":party", slot_center_culture),
					(party_get_slot, ":party_center_original_faction", ":party", slot_center_original_faction),
					(party_set_slot, "p_castle_player", slot_center_culture, ":party_center_culture"),
					(party_set_slot, "p_castle_player", slot_center_original_faction, ":party_center_original_faction"),
					(party_set_slot, "p_village_player", slot_center_culture, ":party_center_culture"),
					(party_set_slot, "p_village_player", slot_center_original_faction, ":party_center_original_faction"),
					(party_get_current_terrain, ":current_terrain_castle_player", "p_castle_player"),
					(try_begin),
						(this_or_next|eq, ":current_terrain_castle_player", 5),
						(eq, ":current_terrain_castle_player", 13),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_desert_tier1"),
						(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
					(else_try),
						(this_or_next|eq, ":current_terrain_castle_player", 4),
						(eq, ":current_terrain_castle_player", 12),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_castle_player_nordic_1"),
						(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
					(else_try),
						(eq, "fac_kingdom_10", "$players_kingdom"),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_french_tier1"),
						(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 1),
					(else_try),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_central_europe_tier1"),
						(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
					(try_end),
					(party_set_slot, "p_village_player", slot_town_center, "scn_village_eastern"),
					(party_set_slot, "p_castle_player", slot_town_castle, "scn_interior_moscow"),
					(party_set_slot, "p_castle_player", slot_town_prison, "scn_castle_prison_eastern"),
					(party_set_slot, "p_village_player", slot_center_original_faction, "$players_kingdom"),
					(party_set_slot, "p_castle_player", slot_center_original_faction, "$players_kingdom"),
					(party_set_slot, "p_village_player", slot_center_accumulated_rents, 0),
					(party_set_slot, "p_village_player", slot_center_accumulated_tariffs, 0),
					(party_set_slot, "p_castle_player", slot_center_accumulated_rents, 0),
					(party_set_slot, "p_castle_player", slot_center_accumulated_tariffs, 0),
					(try_begin),
						(party_clear, "p_castle_player"),
						(remove_member_from_party, "trp_temp_lord", "p_castle_player"),
					(try_end),
				(try_end),
				(party_get_current_terrain, ":current_terrain_castle_player", "p_castle_player"),
				(try_begin),
					(this_or_next|eq, ":current_terrain_castle_player", 5),
					(eq, ":current_terrain_castle_player", 13),
					(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
					(try_begin),
						(eq, ":party_center_current_improvement", 252),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_desert_tier2"),
					(else_try),
						(eq, ":party_center_current_improvement", 253),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_desert_tier3"),
					(try_end),
				(else_try),
					(this_or_next|eq, ":current_terrain_castle_player", 4),
					(eq, ":current_terrain_castle_player", 12),
					(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
					(try_begin),
						(eq, ":party_center_current_improvement", 252),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_castle_player_nordic_2"),
					(else_try),
						(eq, ":party_center_current_improvement", 253),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_castle_player_nordic_3"),
					(try_end),
				(else_try),
					(eq, "fac_kingdom_10", "$players_kingdom"),
					(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 1),
					(try_begin),
						(eq, ":party_center_current_improvement", 252),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_french_tier2"),
					(else_try),
						(eq, ":party_center_current_improvement", 253),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_french_tier3"),
					(try_end),
				(else_try),
					(party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
					(try_begin),
						(eq, ":party_center_current_improvement", 252),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_central_europe_tier2"),
					(else_try),
						(eq, ":party_center_current_improvement", 253),
						(party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_central_europe_tier3"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(assign, ":var_1", 0),
			(try_for_range, ":party", "p_town_1_1", "p_castle_1_1"),
				(party_get_slot, ":party_town_has_tournament", ":party", slot_town_has_tournament),
				(try_begin),
					(eq, ":party_town_has_tournament", 1),
					(call_script, "script_fill_tournament_participants_troop", ":party", 0),
					(call_script, "script_sort_tournament_participant_troops"),
					(call_script, "script_get_num_tournament_participants"),
					(store_sub, ":value", reg0, 1),
					(call_script, "script_remove_tournament_participants_randomly", ":value"),
					(call_script, "script_sort_tournament_participant_troops"),
					(troop_get_slot, ":tournament_participants_relations_begin", "trp_tournament_participants", slot_troop_relations_begin),
					(try_begin),
						(is_between, ":tournament_participants_relations_begin", "trp_npc1", "trp_knight_1_1_wife"),
						(str_store_troop_name_link, 1, ":tournament_participants_relations_begin"),
						(str_store_party_name_link, 2, ":party"),
						(display_message, "@{s1} has won the tournament at {s2}."),
						(call_script, "script_change_troop_renown", ":tournament_participants_relations_begin", 20),
					(try_end),
				(try_end),
				(val_sub, ":party_town_has_tournament", 1),
				(val_max, ":party_town_has_tournament", 0),
				(party_set_slot, ":party", slot_town_has_tournament, ":party_town_has_tournament"),
				(try_begin),
					(gt, ":party_town_has_tournament", 0),
					(val_add, ":var_1", 1),
				(try_end),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(this_or_next|party_slot_eq, ":party", slot_party_type, 3),
				(party_slot_eq, ":party", slot_party_type, 4),
				(party_get_slot, ":party_center_has_bandits", ":party", slot_center_has_bandits),
				(try_begin),
					(le, ":party_center_has_bandits", 0),
					(assign, ":value_2", 0),
					(try_begin),
						(check_quest_active, "qst_deal_with_night_bandits"),
						(quest_slot_eq, "qst_deal_with_night_bandits", slot_quest_target_center, ":party"),
						(neg|check_quest_succeeded, "qst_deal_with_night_bandits"),
						(assign, ":value_2", 1),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", 3),
						(assign, ":value_2", 1),
					(try_end),
					(try_begin),
						(eq, ":value_2", 1),
						(store_random_in_range, ":random_in_range_0_100", 0, 3),
						(try_begin),
							(eq, ":random_in_range_0_100", 0),
							(assign, ":value_3", "trp_bandit"),
						(else_try),
							(eq, ":random_in_range_0_100", 1),
							(assign, ":value_3", "trp_mountain_bandit"),
						(else_try),
							(assign, ":value_3", "trp_forest_bandit"),
						(try_end),
						(party_set_slot, ":party", slot_center_has_bandits, ":value_3"),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(str_store_party_name, 1, ":party"),
							(display_message, "@{!}{s1} is infested by bandits (at night)."),
						(try_end),
					(try_end),
				(else_try),
					(try_begin),
						(assign, ":value_4", 40),
						(try_begin),
							(party_slot_eq, ":party", slot_party_type, 3),
							(assign, ":value_4", 20),
						(try_end),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", ":value_4"),
						(party_set_slot, ":party", slot_center_has_bandits, 0),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(str_store_party_name, 1, ":party"),
							(display_message, "@{s1} is no longer infested by bandits (at night)."),
						(try_end),
					(try_end),
				(try_end),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_ai_state, 6),
				(faction_get_slot, ":faction_ai_object", ":faction", slot_faction_ai_object),
				(is_between, ":faction_ai_object", "p_town_1_1", "p_castle_1_1"),
				(party_slot_ge, ":faction_ai_object", 156, 1),
				(party_set_slot, ":faction_ai_object", slot_town_has_tournament, 2),
			(try_end),
			(try_begin),
				(lt, ":var_1", 3),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(lt, ":random_in_range_0_100", 5),
				(store_random_in_range, ":random_in_range_town_1_1_castle_1_1", "p_town_1_1", "p_castle_1_1"),
				(store_random_in_range, ":random_in_range_12_15", 12, 15),
				(party_set_slot, ":random_in_range_town_1_1_castle_1_1", slot_town_has_tournament, ":random_in_range_12_15"),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(str_store_party_name, 1, ":random_in_range_town_1_1_castle_1_1"),
					(display_message, "@{!}{s1} is holding a tournament."),
				(try_end),
			(try_end)
		]),

	(3.0,
		[
			(assign, "$g_player_tournament_placement", 0)
		]),

	(8.0,
		[]),

	(1.0,
		[
			(neg|map_free),
			(is_currently_night),
			(is_between, "$g_last_rest_center", "p_town_1_1", "p_salt_mine"),
			(neg|party_slot_eq, "$g_last_rest_center", slot_town_lord, "trp_player"),
			(store_faction_of_party, ":faction_of_party_g_last_rest_center", "$g_last_rest_center"),
			(neq, ":faction_of_party_g_last_rest_center", "fac_player_supporters_faction"),
			(store_current_hours, ":current_hours"),
			(ge, ":current_hours", "$g_last_rest_payment_until"),
			(store_add, "$g_last_rest_payment_until", ":current_hours", 24),
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(party_get_num_companions, ":num_companions_main_party", "p_main_party"),
			(store_div, ":value", ":num_companions_main_party", 4),
			(val_add, ":value", 1),
			(try_begin),
				(ge, ":troop_gold_player", ":value"),
				(display_message, "@You pay for accommodation."),
				(troop_remove_gold, "trp_player", ":value"),
			(else_try),
				(gt, ":troop_gold_player", 0),
				(troop_remove_gold, "trp_player", ":troop_gold_player"),
			(try_end)
		]),

	(36.0,
		[
			(call_script, "script_spawn_bandits"),
			(call_script, "script_spawn_balts"),
			(call_script, "script_spawn_peasant_rebels"),
			(try_begin),
				(call_script, "script_cf_spawn_crusaders_and_jihadists"),
			(try_end)
		]),

	(24.0,
		[
			(call_script, "script_update_party_creation_random_limits")
		]),

	(24.0,
		[
			(assign, ":var_1", 0),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_set_slot, ":faction", slot_faction_number_of_parties, 0),
			(try_end),
			(try_for_parties, ":value"),
				(store_faction_of_party, ":faction_of_party_value", ":value"),
				(is_between, ":faction_of_party_value", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(this_or_next|is_between, ":value", "p_town_1_1", "p_salt_mine"),
				(party_slot_eq, ":value", slot_party_type, 13),
				(faction_get_slot, ":faction_of_party_value_number_of_parties", ":faction_of_party_value", slot_faction_number_of_parties),
				(val_add, ":faction_of_party_value_number_of_parties", 1),
				(faction_set_slot, ":faction_of_party_value", slot_faction_number_of_parties, ":faction_of_party_value_number_of_parties"),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(val_add, ":var_1", 1),
				(faction_slot_eq, ":faction", slot_faction_number_of_parties, 0),
				(assign, ":value_2", 0),
				(try_begin),
					(eq, ":faction", "fac_player_supporters_faction"),
					(try_begin),
						(le, "$supported_pretender", 0),
						(faction_set_slot, ":faction", slot_faction_state, 2),
						(assign, ":value_2", 1),
					(try_end),
				(else_try),
					(neq, "$players_kingdom", ":faction"),
					(faction_set_slot, ":faction", slot_faction_state, 1),
					(try_for_parties, ":value"),
						(store_faction_of_party, ":faction_of_party_value", ":value"),
						(eq, ":faction_of_party_value", ":faction"),
						(party_get_slot, ":value_home_center", ":value", slot_party_home_center),
						(store_faction_of_party, ":faction_of_party_value_home_center", ":value_home_center"),
						(party_set_faction, ":value", ":faction_of_party_value_home_center"),
					(try_end),
					(assign, ":value_3", -1),
					(try_for_range, ":troop", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
						(troop_slot_eq, ":troop", slot_troop_original_faction, ":faction"),
						(assign, ":value_3", ":troop"),
					(try_end),
					(try_begin),
						(is_between, ":value_3", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
						(neq, ":value_3", "$supported_pretender"),
						(troop_set_slot, ":value_3", slot_troop_cur_center, 0),
					(try_end),
					(assign, ":value_2", 1),
					(try_begin),
						(eq, "$players_oath_renounced_against_kingdom", ":faction"),
						(assign, "$players_oath_renounced_against_kingdom", 0),
						(assign, "$players_oath_renounced_given_center", 0),
						(assign, "$players_oath_renounced_begin_time", 0),
						(call_script, "script_add_notification_menu", "mnu_notification_oath_renounced_faction_defeated", ":faction", 0),
					(try_end),
					(call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", ":faction", 0),
				(try_end),
				(try_begin),
					(eq, ":value_2", 1),
					(val_sub, ":var_1", 1),
				(try_end),
				(try_for_range, ":faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(call_script, "script_update_faction_notes", ":faction_2"),
				(try_end),
			(try_end),
			(try_begin),
				(eq, ":var_1", 1),
				(eq, "$g_one_faction_left_notification_shown", 0),
				(assign, "$g_one_faction_left_notification_shown", 1),
				(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(faction_slot_eq, ":faction", slot_faction_state, 0),
					(call_script, "script_add_notification_menu", "mnu_notification_one_faction_left", ":faction", 0),
				(try_end),
			(try_end)
		]),

	(3.0,
		[
			(try_begin),
				(is_between, "$g_player_court", "p_town_1_1", "p_salt_mine"),
				(party_slot_eq, "$g_player_court", slot_village_infested_by_bandits, "trp_peasant_woman"),
				(call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
			(else_try),
				(is_between, "$g_player_court", "p_town_1_1", "p_salt_mine"),
				(store_faction_of_party, ":faction_of_party_g_player_court", "$g_player_court"),
				(neq, ":faction_of_party_g_player_court", "fac_player_supporters_faction"),
				(call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
			(else_try),
				(lt, "$g_player_court", "p_town_1_1"),
				(this_or_next|faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
				(gt, "$g_player_minister", 0),
				(assign, ":value", 0),
				(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
					(eq, ":value", 0),
					(store_faction_of_party, ":faction_of_party_g_player_court", ":party"),
					(eq, ":faction_of_party_g_player_court", "fac_player_supporters_faction"),
					(assign, ":value", ":party"),
				(try_end),
				(ge, ":value", 1),
				(call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
			(try_end),
			(try_for_parties, ":var_4"),
				(gt, ":var_4", "p_spawn_points_end"),
				(party_get_template_id, ":template_id_var_4", ":var_4"),
				(is_between, ":template_id_var_4", "pt_steppe_bandits", "pt_deserters"),
				(party_template_get_slot, ":party_template_slot_template_id_var_4_party_template_lair_party", ":template_id_var_4", slot_party_template_lair_party),
				(try_begin),
					(gt, ":party_template_slot_template_id_var_4_party_template_lair_party", "p_spawn_points_end"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_4_party_template_slot_template_id_var_4_party_template_lair_party", ":var_4", ":party_template_slot_template_id_var_4_party_template_lair_party"),
					(gt, ":distance_to_party_from_party_var_4_party_template_slot_template_id_var_4_party_template_lair_party", 30),
					(lt, ":distance_to_party_from_party_var_4_party_template_slot_template_id_var_4_party_template_lair_party", 35),
					(party_set_ai_behavior, ":var_4", 6),
					(party_get_position, 5, ":party_template_slot_template_id_var_4_party_template_lair_party"),
					(party_set_ai_target_position, ":var_4", 5),
				(else_try),
					(get_party_ai_behavior, ":party_ai_behavior_var_4", ":var_4"),
					(eq, ":party_ai_behavior_var_4", 6),
					(try_begin),
						(gt, ":party_template_slot_template_id_var_4_party_template_lair_party", "p_spawn_points_end"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_var_4_party_template_slot_template_id_var_4_party_template_lair_party", ":var_4", ":party_template_slot_template_id_var_4_party_template_lair_party"),
						(lt, ":distance_to_party_from_party_var_4_party_template_slot_template_id_var_4_party_template_lair_party", 3),
						(party_set_ai_behavior, ":var_4", 3),
						(party_template_get_slot, ":party_template_slot_template_id_var_4_party_template_lair_spawnpoint", ":template_id_var_4", slot_party_template_lair_spawnpoint),
						(party_set_ai_object, ":var_4", ":party_template_slot_template_id_var_4_party_template_lair_spawnpoint"),
						(party_set_ai_patrol_radius, ":var_4", 45),
					(else_try),
						(lt, ":party_template_slot_template_id_var_4_party_template_lair_party", "p_spawn_points_end"),
						(party_set_ai_behavior, ":var_4", 3),
						(party_template_get_slot, ":party_template_slot_template_id_var_4_party_template_lair_spawnpoint", ":template_id_var_4", slot_party_template_lair_spawnpoint),
						(party_set_ai_object, ":var_4", ":party_template_slot_template_id_var_4_party_template_lair_spawnpoint"),
						(party_set_ai_patrol_radius, ":var_4", 45),
					(try_end),
				(try_end),
			(try_end),
			(try_begin),
				(troop_get_slot, ":player_betrothed", "trp_player", slot_troop_betrothed),
				(gt, ":player_betrothed", 0),
				(neg|check_quest_active, "qst_wed_betrothed"),
				(neg|check_quest_active, "qst_wed_betrothed_female"),
				(str_store_troop_name, 5, ":player_betrothed"),
				(display_message, "@Betrothal to {s5} expires"),
				(troop_set_slot, "trp_player", slot_troop_betrothed, -1),
				(troop_set_slot, ":player_betrothed", slot_troop_betrothed, -1),
			(try_end)
		]),

	(168.0,
		[
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(store_div, ":value", ":player_renown", 200),
			(val_sub, ":player_renown", ":value"),
			(troop_set_slot, "trp_player", slot_troop_renown, ":player_renown")
		]),

	(1.0,
		[
			(neg|map_free),
			(gt, "$g_player_reading_book", 0),
			(player_has_item, "$g_player_reading_book"),
			(store_attribute_level, ":attribute_level_player_2", "trp_player", 2),
			(item_get_slot, ":g_player_reading_book_intelligence_requirement", "$g_player_reading_book", slot_item_intelligence_requirement),
			(le, ":g_player_reading_book_intelligence_requirement", ":attribute_level_player_2"),
			(item_get_slot, ":g_player_reading_book_book_reading_progress", "$g_player_reading_book", slot_item_book_reading_progress),
			(item_get_slot, ":g_player_reading_book_book_read", "$g_player_reading_book", slot_item_book_read),
			(eq, ":g_player_reading_book_book_read", 0),
			(val_add, ":g_player_reading_book_book_reading_progress", 7),
			(item_set_slot, "$g_player_reading_book", slot_item_book_reading_progress, ":g_player_reading_book_book_reading_progress"),
			(ge, ":g_player_reading_book_book_reading_progress", 1000),
			(item_set_slot, "$g_player_reading_book", slot_item_book_read, 1),
			(str_store_item_name, 1, "$g_player_reading_book"),
			(str_clear, 2),
			(try_begin),
				(eq, "$g_player_reading_book", "itm_book_tactics"),
				(troop_raise_skill, "trp_player", "skl_tactics", 1),
				(str_store_string, 2, "@ Your tactics skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_persuasion"),
				(troop_raise_skill, "trp_player", "skl_persuasion", 1),
				(str_store_string, 2, "@ Your persuasion skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_leadership"),
				(troop_raise_skill, "trp_player", "skl_leadership", 1),
				(str_store_string, 2, "@ Your leadership skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_intelligence"),
				(troop_raise_attribute, "trp_player", 2, 1),
				(str_store_string, 2, "@ Your intelligence has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_trade"),
				(troop_raise_skill, "trp_player", "skl_trade", 1),
				(str_store_string, 2, "@ Your trade skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_weapon_mastery"),
				(troop_raise_skill, "trp_player", "skl_weapon_master", 1),
				(str_store_string, 2, "@ Your weapon master skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_engineering"),
				(troop_raise_skill, "trp_player", "skl_engineer", 1),
				(str_store_string, 2, "@ Your engineer skill has increased by 1."),
			(try_end),
			(unlock_achievement, 37),
			(try_begin),
				(eq, "$g_infinite_camping", 0),
				(dialog_box, "@You have finished reading {s1}.{s2}", "@Book Read"),
			(try_end),
			(assign, "$g_player_reading_book", 0)
		]),

	(12.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 17),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_main_party", ":var_1", "p_main_party"),
				(try_begin),
					(gt, ":distance_to_party_from_party_var_1_main_party", 30),
					(remove_party, ":var_1"),
					(try_begin),
						(check_quest_active, "qst_move_cattle_herd"),
						(neg|check_quest_concluded, "qst_move_cattle_herd"),
						(quest_slot_eq, "qst_move_cattle_herd", slot_quest_target_party, ":var_1"),
						(call_script, "script_fail_quest", "qst_move_cattle_herd"),
					(try_end),
				(else_try),
					(gt, ":distance_to_party_from_party_var_1_main_party", 10),
					(party_set_slot, ":var_1", slot_town_lord, 0),
					(party_set_ai_behavior, ":var_1", 0),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(party_slot_eq, ":party", slot_center_has_school, 1),
				(party_get_slot, ":party_center_player_relation", ":party", slot_center_player_relation),
				(val_add, ":party_center_player_relation", 1),
				(val_min, ":party_center_player_relation", 100),
				(party_set_slot, ":party", slot_center_player_relation, ":party_center_player_relation"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":quest", 0, "qst_quests_end"),
				(try_begin),
					(check_quest_active, ":quest"),
					(try_begin),
						(neg|check_quest_concluded, ":quest"),
						(quest_slot_ge, ":quest", 23, 1),
						(quest_get_slot, ":quest_expiration_days", ":quest", slot_quest_expiration_days),
						(val_sub, ":quest_expiration_days", 1),
						(try_begin),
							(eq, ":quest_expiration_days", 0),
							(call_script, "script_abort_quest", ":quest", 1),
						(else_try),
							(quest_set_slot, ":quest", slot_quest_expiration_days, ":quest_expiration_days"),
							(assign, reg0, ":quest_expiration_days"),
							(add_quest_note_from_sreg, ":quest", 7, "@You have {reg0} days to finish this quest.", 0),
						(try_end),
					(try_end),
				(else_try),
					(quest_slot_ge, ":quest", 25, 1),
					(quest_get_slot, ":quest_dont_give_again_remaining_days", ":quest", slot_quest_dont_give_again_remaining_days),
					(val_sub, ":quest_dont_give_again_remaining_days", 1),
					(quest_set_slot, ":quest", slot_quest_dont_give_again_remaining_days, ":quest_dont_give_again_remaining_days"),
				(try_end),
			(try_end)
		]),

	(2.0,
		[
			(eq, "$g_infinite_camping", 0),
			(eq, "$g_player_crusading", 0),
			(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
			(eq, "$g_player_is_captive", 0),
			(try_begin),
				(check_quest_active, "qst_report_to_army"),
				(faction_slot_eq, "$players_kingdom", slot_faction_marshall, -1),
				(call_script, "script_abort_quest", "qst_report_to_army", 0),
			(try_end),
			(faction_get_slot, ":players_kingdom_ai_object", "$players_kingdom", slot_faction_ai_object),
			(neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 0),
			(neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 6),
			(assign, ":value", 1),
			(try_begin),
				(this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 5),
				(this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
				(faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 3),
				(neg|is_between, ":players_kingdom_ai_object", "p_town_1_1", "p_village_1_1"),
				(assign, ":value", 0),
			(try_end),
			(eq, ":value", 1),
			(assign, ":value_2", 0),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, ":faction", "$players_kingdom"),
				(store_relation, ":relation_faction_players_kingdom", ":faction", "$players_kingdom"),
				(lt, ":relation_faction_players_kingdom", 0),
				(assign, ":value_2", 1),
			(try_end),
			(eq, ":value_2", 1),
			(neg|check_quest_active, "qst_report_to_army"),
			(neg|check_quest_active, "qst_follow_army"),
			(neg|quest_slot_ge, "qst_report_to_army", 25, 1),
			(faction_get_slot, ":players_kingdom_marshall", "$players_kingdom", slot_faction_marshall),
			(gt, ":players_kingdom_marshall", 0),
			(troop_get_slot, ":players_kingdom_marshall_leaded_party", ":players_kingdom_marshall", slot_troop_leaded_party),
			(gt, ":players_kingdom_marshall_leaded_party", 0),
			(party_is_active, ":players_kingdom_marshall_leaded_party"),
			(store_distance_to_party_from_party, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", ":players_kingdom_marshall_leaded_party", "p_main_party"),
			(le, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", 96),
			(assign, ":value_3", 1),
			(try_for_range, ":quest", "qst_deliver_message", "qst_follow_army"),
				(check_quest_active, ":quest"),
				(quest_slot_eq, ":quest", slot_quest_giver_troop, ":players_kingdom_marshall"),
				(assign, ":value_3", 0),
			(try_end),
			(eq, ":value_3", 1),
			(try_for_range, ":quest", "qst_destroy_bandit_lair", "qst_blank_quest_2"),
				(check_quest_active, ":quest"),
				(quest_slot_eq, ":quest", slot_quest_giver_troop, ":players_kingdom_marshall"),
				(assign, ":value_3", 0),
			(try_end),
			(eq, ":value_3", 1),
			(try_for_range, ":quest", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
				(check_quest_active, ":quest"),
				(assign, ":value_3", 0),
			(try_end),
			(eq, ":value_3", 1),
			(store_character_level, ":character_level_player", "trp_player"),
			(ge, ":character_level_player", 8),
			(assign, ":var_12", 2),
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(try_begin),
					(party_slot_eq, ":party", slot_party_type, 3),
					(val_add, ":var_12", 3),
				(else_try),
					(party_slot_eq, ":party", slot_party_type, 2),
					(val_add, ":var_12", 1),
				(else_try),
					(val_add, ":var_12", 1),
				(try_end),
			(try_end),
			(val_mul, ":var_12", 4),
			(val_min, ":var_12", 60),
			(quest_set_slot, "qst_report_to_army", slot_quest_giver_troop, ":players_kingdom_marshall"),
			(quest_set_slot, "qst_report_to_army", slot_quest_target_troop, ":players_kingdom_marshall"),
			(quest_set_slot, "qst_report_to_army", slot_quest_target_amount, ":var_12"),
			(quest_set_slot, "qst_report_to_army", slot_quest_expiration_days, 4),
			(quest_set_slot, "qst_report_to_army", slot_quest_dont_give_again_period, 15),
			(jump_to_menu, "mnu_kingdom_army_quest_report_to_army")
		]),

	(3.0,
		[
			(assign, "$g_random_army_quest", -1),
			(check_quest_active, "qst_follow_army", 1),
			(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
			(neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 0),
			(faction_get_slot, ":players_kingdom_marshall", "$players_kingdom", slot_faction_marshall),
			(neq, ":players_kingdom_marshall", "trp_player"),
			(gt, ":players_kingdom_marshall", 0),
			(troop_get_slot, ":players_kingdom_marshall_leaded_party", ":players_kingdom_marshall", slot_troop_leaded_party),
			(gt, ":players_kingdom_marshall_leaded_party", 0),
			(party_is_active, ":players_kingdom_marshall_leaded_party"),
			(store_distance_to_party_from_party, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", ":players_kingdom_marshall_leaded_party", "p_main_party"),
			(try_begin),
				(lt, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", 15),
				(assign, "$g_player_follow_army_warnings", 0),
				(store_current_hours, ":current_hours"),
				(faction_get_slot, ":players_kingdom_ai_last_offensive_time", "$players_kingdom", slot_faction_ai_last_offensive_time),
				(store_sub, ":value", ":current_hours", ":players_kingdom_ai_last_offensive_time"),
				(assign, ":value_2", -1),
				(try_begin),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 30),
					(troop_slot_eq, ":players_kingdom_marshall", slot_troop_does_not_give_quest, 0),
					(try_for_range, ":unused", 0, 20),
						(eq, ":value_2", -1),
						(store_random_in_range, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
						(neg|quest_slot_ge, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", 25, 1),
						(try_begin),
							(eq, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_deliver_cattle_to_army"),
							(try_begin),
								(faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
								(gt, ":value", 120),
								(store_random_in_range, ":random_in_range_5_10", 5, 10),
								(assign, ":value_2", "qst_deliver_cattle_to_army"),
								(quest_set_slot, ":value_2", slot_quest_target_amount, ":random_in_range_5_10"),
								(quest_set_slot, ":value_2", slot_quest_expiration_days, 10),
								(quest_set_slot, ":value_2", slot_quest_dont_give_again_period, 30),
							(try_end),
						(else_try),
							(eq, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_join_siege_with_army"),
							(eq, 1, 0),
							(try_begin),
								(faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
								(faction_get_slot, ":players_kingdom_ai_object", "$players_kingdom", slot_faction_ai_object),
								(is_between, ":players_kingdom_ai_object", "p_town_1_1", "p_village_1_1"),
								(party_get_battle_opponent, ":battle_opponent_players_kingdom_marshall_leaded_party", ":players_kingdom_marshall_leaded_party"),
								(eq, ":battle_opponent_players_kingdom_marshall_leaded_party", ":players_kingdom_ai_object"),
								(assign, ":value_2", ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace"),
								(quest_set_slot, ":value_2", slot_quest_target_center, ":players_kingdom_ai_object"),
								(quest_set_slot, ":value_2", slot_quest_expiration_days, 2),
								(quest_set_slot, ":value_2", slot_quest_dont_give_again_period, 15),
							(try_end),
						(else_try),
							(eq, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_scout_waypoints"),
							(try_begin),
								(assign, ":value_3", 100),
								(assign, "$qst_scout_waypoints_wp_1", -1),
								(assign, "$qst_scout_waypoints_wp_2", -1),
								(assign, "$qst_scout_waypoints_wp_3", -1),
								(assign, ":value_4", 0),
								(try_for_range, ":unused", 0, ":value_3"),
									(try_begin),
										(lt, "$qst_scout_waypoints_wp_1", 0),
										(call_script, "script_cf_get_random_enemy_center_within_range", ":players_kingdom_marshall_leaded_party", 50),
										(assign, "$qst_scout_waypoints_wp_1", reg0),
									(try_end),
									(try_begin),
										(lt, "$qst_scout_waypoints_wp_2", 0),
										(call_script, "script_cf_get_random_enemy_center_within_range", ":players_kingdom_marshall_leaded_party", 50),
										(neq, "$qst_scout_waypoints_wp_1", reg0),
										(assign, "$qst_scout_waypoints_wp_2", reg0),
									(try_end),
									(try_begin),
										(lt, "$qst_scout_waypoints_wp_3", 0),
										(call_script, "script_cf_get_random_enemy_center_within_range", ":players_kingdom_marshall_leaded_party", 50),
										(neq, "$qst_scout_waypoints_wp_1", reg0),
										(neq, "$qst_scout_waypoints_wp_2", reg0),
										(assign, "$qst_scout_waypoints_wp_3", reg0),
									(try_end),
									(neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
									(neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
									(neq, "$qst_scout_waypoints_wp_2", "$qst_scout_waypoints_wp_3"),
									(ge, "$qst_scout_waypoints_wp_1", 0),
									(ge, "$qst_scout_waypoints_wp_2", 0),
									(ge, "$qst_scout_waypoints_wp_3", 0),
									(assign, ":value_3", 0),
									(assign, ":value_4", 1),
								(try_end),
								(eq, ":value_4", 1),
								(assign, "$qst_scout_waypoints_wp_1_visited", 0),
								(assign, "$qst_scout_waypoints_wp_2_visited", 0),
								(assign, "$qst_scout_waypoints_wp_3_visited", 0),
								(assign, ":value_2", "qst_scout_waypoints"),
								(quest_set_slot, ":value_2", slot_quest_expiration_days, 7),
								(quest_set_slot, ":value_2", slot_quest_dont_give_again_period, 25),
							(try_end),
						(try_end),
					(try_end),
					(try_begin),
						(neq, ":value_2", -1),
						(quest_set_slot, ":value_2", slot_quest_current_state, 0),
						(quest_set_slot, ":value_2", slot_quest_giver_troop, ":players_kingdom_marshall"),
						(try_begin),
							(eq, ":value_2", "qst_join_siege_with_army"),
							(jump_to_menu, "mnu_kingdom_army_quest_join_siege_order"),
						(else_try),
							(assign, "$g_random_army_quest", ":value_2"),
							(quest_set_slot, "$g_random_army_quest", slot_quest_giver_troop, ":players_kingdom_marshall"),
							(jump_to_menu, "mnu_kingdom_army_quest_messenger"),
						(try_end),
					(try_end),
				(try_end),
			(else_try),
				(val_add, "$g_player_follow_army_warnings", 1),
				(try_begin),
					(lt, "$g_player_follow_army_warnings", 15),
					(try_begin),
						(store_mod, ":value_5", "$g_player_follow_army_warnings", 3),
						(eq, ":value_5", 0),
						(str_store_troop_name_link, 1, ":players_kingdom_marshall"),
						(try_begin),
							(lt, "$g_player_follow_army_warnings", 8),
						(else_try),
							(display_message, "str_marshal_warning"),
						(try_end),
					(try_end),
				(else_try),
					(jump_to_menu, "mnu_kingdom_army_follow_failed"),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(check_quest_active, "qst_move_cattle_herd"),
			(neg|check_quest_concluded, "qst_move_cattle_herd"),
			(quest_get_slot, ":move_cattle_herd_target_party", "qst_move_cattle_herd", slot_quest_target_party),
			(quest_get_slot, ":move_cattle_herd_target_center", "qst_move_cattle_herd", slot_quest_target_center),
			(store_distance_to_party_from_party, ":distance_to_party_from_party_move_cattle_herd_target_party_move_cattle_herd_target_center", ":move_cattle_herd_target_party", ":move_cattle_herd_target_center"),
			(lt, ":distance_to_party_from_party_move_cattle_herd_target_party_move_cattle_herd_target_center", 3),
			(remove_party, ":move_cattle_herd_target_party"),
			(call_script, "script_succeed_quest", "qst_move_cattle_herd")
		]),

	(2.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_is_active, ":troop_leaded_party"),
				(party_slot_eq, ":troop_leaded_party", slot_party_following_player, 1),
				(store_current_hours, ":current_hours"),
				(neg|party_slot_ge, ":troop_leaded_party", 32, ":current_hours"),
				(party_set_slot, ":troop_leaded_party", slot_party_commander_party, -1),
				(party_set_slot, ":troop_leaded_party", slot_party_following_player, 0),
				(assign, ":var_4", 200),
				(store_add, ":value", ":current_hours", ":var_4"),
				(party_set_slot, ":troop_leaded_party", slot_party_dont_follow_player_until_time, ":value"),
			(try_end)
		]),

	(0.5,
		[
			(try_begin),
				(check_quest_active, "qst_deliver_cattle"),
				(neg|check_quest_succeeded, "qst_deliver_cattle"),
				(quest_get_slot, ":deliver_cattle_target_center", "qst_deliver_cattle", slot_quest_target_center),
				(quest_get_slot, ":deliver_cattle_target_amount", "qst_deliver_cattle", slot_quest_target_amount),
				(quest_get_slot, ":deliver_cattle_current_state", "qst_deliver_cattle", slot_quest_current_state),
				(store_sub, ":value", ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
				(call_script, "script_remove_cattles_if_herd_is_close_to_party", ":deliver_cattle_target_center", ":value"),
				(val_add, ":deliver_cattle_current_state", reg0),
				(quest_set_slot, "qst_deliver_cattle", slot_quest_current_state, ":deliver_cattle_current_state"),
				(le, ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
				(call_script, "script_succeed_quest", "qst_deliver_cattle"),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_deliver_cattle_to_army"),
				(neg|check_quest_succeeded, "qst_deliver_cattle_to_army"),
				(quest_get_slot, ":deliver_cattle_to_army_giver_troop", "qst_deliver_cattle_to_army", slot_quest_giver_troop),
				(troop_get_slot, ":deliver_cattle_to_army_giver_troop_leaded_party", ":deliver_cattle_to_army_giver_troop", slot_troop_leaded_party),
				(try_begin),
					(gt, ":deliver_cattle_to_army_giver_troop_leaded_party", 0),
					(quest_get_slot, ":deliver_cattle_target_amount", "qst_deliver_cattle_to_army", slot_quest_target_amount),
					(quest_get_slot, ":deliver_cattle_current_state", "qst_deliver_cattle_to_army", slot_quest_current_state),
					(store_sub, ":value", ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
					(call_script, "script_remove_cattles_if_herd_is_close_to_party", ":deliver_cattle_to_army_giver_troop_leaded_party", ":value"),
					(val_add, ":deliver_cattle_current_state", reg0),
					(quest_set_slot, "qst_deliver_cattle_to_army", slot_quest_current_state, ":deliver_cattle_current_state"),
					(try_begin),
						(le, ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
						(call_script, "script_succeed_quest", "qst_deliver_cattle_to_army"),
					(try_end),
				(else_try),
					(call_script, "script_abort_quest", "qst_deliver_cattle_to_army", 0),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_train_peasants_against_bandits"),
			(neg|check_quest_concluded, "qst_train_peasants_against_bandits"),
			(eq, "$qst_train_peasants_against_bandits_currently_training", 1),
			(val_add, "$qst_train_peasants_against_bandits_num_hours_trained", 1),
			(call_script, "script_get_max_skill_of_player_party", "skl_trainer"),
			(assign, ":var_1", reg0),
			(store_sub, ":value", 20, ":var_1"),
			(val_mul, ":value", 3),
			(val_div, ":value", 5),
			(ge, "$qst_train_peasants_against_bandits_num_hours_trained", ":value"),
			(assign, "$qst_train_peasants_against_bandits_num_hours_trained", 0),
			(rest_for_hours, 0, 0, 0),
			(jump_to_menu, "mnu_train_peasants_against_bandits_ready")
		]),

	(1.0,
		[
			(check_quest_active, "qst_scout_waypoints"),
			(neg|check_quest_succeeded, "qst_scout_waypoints"),
			(try_begin),
				(eq, "$qst_scout_waypoints_wp_1_visited", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", "$qst_scout_waypoints_wp_1", "p_main_party"),
				(le, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", 3),
				(assign, "$qst_scout_waypoints_wp_1_visited", 1),
				(str_store_party_name_link, 1, "$qst_scout_waypoints_wp_1"),
				(display_message, "@{s1} is scouted."),
			(try_end),
			(try_begin),
				(eq, "$qst_scout_waypoints_wp_2_visited", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", "$qst_scout_waypoints_wp_2", "p_main_party"),
				(le, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", 3),
				(assign, "$qst_scout_waypoints_wp_2_visited", 1),
				(str_store_party_name_link, 1, "$qst_scout_waypoints_wp_2"),
				(display_message, "@{s1} is scouted."),
			(try_end),
			(try_begin),
				(eq, "$qst_scout_waypoints_wp_3_visited", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", "$qst_scout_waypoints_wp_3", "p_main_party"),
				(le, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", 3),
				(assign, "$qst_scout_waypoints_wp_3_visited", 1),
				(str_store_party_name_link, 1, "$qst_scout_waypoints_wp_3"),
				(display_message, "@{s1} is scouted."),
			(try_end),
			(eq, "$qst_scout_waypoints_wp_1_visited", 1),
			(eq, "$qst_scout_waypoints_wp_2_visited", 1),
			(eq, "$qst_scout_waypoints_wp_3_visited", 1),
			(call_script, "script_succeed_quest", "qst_scout_waypoints")
		]),

	(3.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_kill_local_merchant"),
			(quest_slot_eq, "qst_kill_local_merchant", slot_quest_current_state, 0),
			(quest_set_slot, "qst_kill_local_merchant", slot_quest_current_state, 1),
			(rest_for_hours, 0, 0, 0),
			(assign, "$auto_enter_town", "$qst_kill_local_merchant_center"),
			(assign, "$quest_auto_menu", "mnu_kill_local_merchant_begin")
		]),

	(1.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_collect_taxes"),
			(eq, "$g_player_is_captive", 0),
			(eq, "$qst_collect_taxes_currently_collecting", 1),
			(quest_get_slot, ":collect_taxes_current_state", "qst_collect_taxes", slot_quest_current_state),
			(this_or_next|eq, ":collect_taxes_current_state", 1),
			(this_or_next|eq, ":collect_taxes_current_state", 2),
			(eq, ":collect_taxes_current_state", 3),
			(quest_get_slot, ":collect_taxes_target_amount", "qst_collect_taxes", slot_quest_target_amount),
			(val_sub, ":collect_taxes_target_amount", 1),
			(quest_set_slot, "qst_collect_taxes", slot_quest_target_amount, ":collect_taxes_target_amount"),
			(call_script, "script_get_max_skill_of_player_party", "skl_trade"),
			(try_begin),
				(lt, ":collect_taxes_target_amount", 0),
				(assign, ":collect_taxes_current_state", 4),
				(quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 4),
				(rest_for_hours, 0, 0, 0),
				(jump_to_menu, "mnu_collect_taxes_complete"),
			(else_try),
				(assign, ":var_3", "$qst_collect_taxes_hourly_income"),
				(party_get_slot, ":g_encountered_party_town_prosperity", "$g_encountered_party", slot_town_prosperity),
				(store_add, ":value", 30, ":g_encountered_party_town_prosperity"),
				(val_mul, ":var_3", ":value"),
				(val_div, ":var_3", 80),
				(try_begin),
					(eq, "$qst_collect_taxes_halve_taxes", 1),
					(val_div, ":var_3", 2),
				(try_end),
				(val_max, ":var_3", 2),
				(store_random_in_range, ":random_in_range_1_var_3", 1, ":var_3"),
				(quest_get_slot, ":collect_taxes_gold_reward", "qst_collect_taxes", slot_quest_gold_reward),
				(val_add, ":collect_taxes_gold_reward", ":random_in_range_1_var_3"),
				(quest_set_slot, "qst_collect_taxes", slot_quest_gold_reward, ":collect_taxes_gold_reward"),
				(call_script, "script_troop_add_gold", "trp_player", ":random_in_range_1_var_3"),
			(try_end),
			(try_begin),
				(eq, ":collect_taxes_current_state", 1),
				(val_sub, "$qst_collect_taxes_menu_counter", 1),
				(le, "$qst_collect_taxes_menu_counter", 0),
				(quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 2),
				(jump_to_menu, "mnu_collect_taxes_revolt_warning"),
			(else_try),
				(eq, ":collect_taxes_current_state", 2),
				(val_sub, "$qst_collect_taxes_unrest_counter", 1),
				(le, "$qst_collect_taxes_unrest_counter", 0),
				(eq, "$qst_collect_taxes_halve_taxes", 0),
				(quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 3),
				(store_div, ":value_2", 10000, "$qst_collect_taxes_total_hours"),
				(val_add, ":value_2", 30),
				(store_random_in_range, ":random_in_range_0_1000", 0, 1000),
				(try_begin),
					(lt, ":random_in_range_0_1000", ":value_2"),
					(jump_to_menu, "mnu_collect_taxes_revolt"),
				(try_end),
			(try_end)
		]),

	(72.0,
		[
			(gt, "$g_force_peace_faction_1", 0),
			(gt, "$g_force_peace_faction_2", 0),
			(try_begin),
				(store_relation, ":relation_g_force_peace_faction_1_g_force_peace_faction_2", "$g_force_peace_faction_1", "$g_force_peace_faction_2"),
				(lt, ":relation_g_force_peace_faction_1_g_force_peace_faction_2", 0),
				(call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_force_peace_faction_1", "$g_force_peace_faction_2", 1),
			(try_end),
			(assign, "$g_force_peace_faction_1", 0),
			(assign, "$g_force_peace_faction_2", 0)
		]),

	(1.0,
		[
			(str_store_string, 51, "str_no_trigger_noted"),
			(try_begin),
				(gt, "$npc_to_rejoin_party", 0),
				(eq, "$g_infinite_camping", 0),
				(try_begin),
					(neg|main_party_has_troop, "$npc_to_rejoin_party"),
					(neq, "$g_player_is_captive", 1),
					(str_store_string, 51, "str_triggered_by_npc_to_rejoin_party"),
					(assign, "$npc_map_talk_context", 151),
					(start_map_conversation, "$npc_to_rejoin_party", -1),
				(else_try),
					(troop_set_slot, "$npc_to_rejoin_party", slot_troop_mission_object, 8),
					(assign, "$npc_to_rejoin_party", 0),
				(try_end),
			(else_try),
				(gt, "$npc_is_quitting", 0),
				(eq, "$g_infinite_camping", 0),
				(try_begin),
					(main_party_has_troop, "$npc_is_quitting"),
					(neq, "$g_player_is_captive", 1),
					(neg|troop_slot_eq, "trp_player", slot_troop_spouse, "$npc_is_quitting"),
					(neg|troop_slot_eq, "$npc_is_quitting", slot_troop_spouse, "trp_player"),
					(str_store_string, 51, "str_triggered_by_npc_is_quitting"),
					(start_map_conversation, "$npc_is_quitting", -1),
				(else_try),
					(assign, "$npc_is_quitting", 0),
				(try_end),
			(else_try),
				(gt, "$npc_with_grievance", 0),
				(eq, "$g_infinite_camping", 0),
				(eq, "$disable_npc_complaints", 0),
				(try_begin),
					(main_party_has_troop, "$npc_with_grievance"),
					(neq, "$g_player_is_captive", 1),
					(str_store_string, 51, "str_triggered_by_npc_has_grievance"),
					(assign, "$npc_map_talk_context", 61),
					(start_map_conversation, "$npc_with_grievance", -1),
				(else_try),
					(assign, "$npc_with_grievance", 0),
				(try_end),
			(else_try),
				(gt, "$npc_with_personality_clash", 0),
				(eq, "$g_infinite_camping", 0),
				(eq, "$disable_npc_complaints", 0),
				(troop_get_slot, ":npc_with_personality_clash_personalityclash_object", "$npc_with_personality_clash", slot_troop_personalityclash_object),
				(try_begin),
					(main_party_has_troop, "$npc_with_personality_clash"),
					(main_party_has_troop, ":npc_with_personality_clash_personalityclash_object"),
					(neq, "$g_player_is_captive", 1),
					(assign, "$npc_map_talk_context", 72),
					(str_store_string, 51, "str_triggered_by_npc_has_personality_clash"),
					(start_map_conversation, "$npc_with_personality_clash", -1),
				(else_try),
					(assign, "$npc_with_personality_clash", 0),
				(try_end),
			(else_try),
				(gt, "$npc_with_political_grievance", 0),
				(eq, "$g_infinite_camping", 0),
				(eq, "$disable_npc_complaints", 0),
				(try_begin),
					(main_party_has_troop, "$npc_with_political_grievance"),
					(neq, "$g_player_is_captive", 1),
					(str_store_string, 51, "str_triggered_by_npc_has_political_grievance"),
					(assign, "$npc_map_talk_context", 145),
					(start_map_conversation, "$npc_with_political_grievance", -1),
				(else_try),
					(assign, "$npc_with_political_grievance", 0),
				(try_end),
			(else_try),
				(eq, "$disable_sisterly_advice", 0),
				(eq, "$g_infinite_camping", 0),
				(gt, "$npc_with_sisterly_advice", 0),
				(try_begin),
					(main_party_has_troop, "$npc_with_sisterly_advice"),
					(neq, "$g_player_is_captive", 1),
					(troop_slot_ge, "$npc_with_sisterly_advice", 139, 1),
					(assign, "$npc_map_talk_context", 139),
					(start_map_conversation, "$npc_with_sisterly_advice", -1),
				(else_try),
					(assign, "$npc_with_sisterly_advice", 0),
				(try_end),
			(else_try),
				(eq, "$disable_local_histories", 0),
				(eq, "$g_infinite_camping", 0),
				(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
					(main_party_has_troop, ":troop"),
					(troop_slot_eq, ":troop", slot_troop_home_speech_delivered, 0),
					(troop_get_slot, ":troop_home", ":troop", slot_troop_home),
					(gt, ":troop_home", 0),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_troop_home_main_party", ":troop_home", "p_main_party"),
					(lt, ":distance_to_party_from_party_troop_home_main_party", 7),
					(assign, "$npc_map_talk_context", 60),
					(str_store_string, 51, "str_triggered_by_local_histories"),
					(start_map_conversation, ":troop", -1),
				(try_end),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_rebel_against_kingdom"),
				(is_between, "$supported_pretender", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
				(neg|main_party_has_troop, "$supported_pretender"),
				(neg|troop_slot_eq, "$supported_pretender", slot_troop_occupation, 2),
				(party_add_members, "p_main_party", "$supported_pretender", 1),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_rebel_against_kingdom"),
				(is_between, "$supported_pretender", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
				(main_party_has_troop, "$supported_pretender"),
				(neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_marshall, "trp_player"),
				(call_script, "script_appoint_faction_marshall", "fac_player_supporters_faction", "trp_player"),
			(try_end)
		]),

	(1.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_ge, ":troop", 55, 1),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(troop_get_slot, ":troop_change_to_faction", ":troop", slot_troop_change_to_faction),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(assign, ":value", 0),
				(try_begin),
					(le, ":troop_leaded_party", 0),
					(neg|troop_slot_ge, ":troop", 8, 0),
					(assign, ":value", 1),
				(else_try),
					(gt, ":troop_leaded_party", 0),
					(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
					(try_begin),
						(lt, ":attached_to_troop_leaded_party", 0),
						(party_get_cur_town, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
					(try_end),
					(this_or_next|neg|is_between, ":attached_to_troop_leaded_party", "p_town_1_1", "p_salt_mine"),
					(party_slot_eq, ":attached_to_troop_leaded_party", slot_town_lord, ":troop"),
					(assign, ":value_2", "trp_knight_1_1_wife"),
					(try_for_range, ":troop_2", "trp_npc1", ":value_2"),
						(troop_slot_eq, ":troop_2", slot_troop_occupation, 2),
						(troop_get_slot, ":troop_2_leaded_party", ":troop_2", slot_troop_leaded_party),
						(party_is_active, ":troop_2_leaded_party"),
						(store_faction_of_party, ":faction_of_party_troop_2_leaded_party", ":troop_2_leaded_party"),
						(eq, ":faction_of_party_troop_2_leaded_party", ":faction_of_troop_troop"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_troop_leaded_party_troop_2_leaded_party", ":troop_leaded_party", ":troop_2_leaded_party"),
						(lt, ":distance_to_party_from_party_troop_leaded_party_troop_2_leaded_party", 4),
						(assign, ":value_2", 0),
					(try_end),
					(neq, ":value_2", 0),
					(assign, ":value", 1),
				(try_end),
				(eq, ":value", 1),
				(try_begin),
					(ge, "$cheat_mode", 1),
					(str_store_troop_name, 4, ":troop"),
					(display_message, "@{!}DEBUG - {s4} faction changed from slot troop change to faction"),
				(try_end),
				(call_script, "script_change_troop_faction", ":troop", ":troop_change_to_faction"),
				(troop_set_slot, ":troop", slot_troop_change_to_faction, 0),
				(try_begin),
					(is_between, ":troop_change_to_faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(str_store_troop_name_link, 1, ":troop"),
					(str_store_faction_name_link, 2, ":faction_of_troop_troop"),
					(str_store_faction_name_link, 3, ":troop_change_to_faction"),
					(display_message, "@{s1} has switched from {s2} to {s3}."),
					(try_begin),
						(eq, ":faction_of_troop_troop", "$players_kingdom"),
						(call_script, "script_add_notification_menu", "mnu_notification_troop_left_players_faction", ":troop", ":troop_change_to_faction"),
					(else_try),
						(eq, ":troop_change_to_faction", "$players_kingdom"),
						(call_script, "script_add_notification_menu", "mnu_notification_troop_joined_players_faction", ":troop", ":faction_of_troop_troop"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(store_current_day, ":current_day"),
			(gt, ":current_day", "$g_last_report_control_day"),
			(store_time_of_day, ":time_of_day"),
			(ge, ":time_of_day", 18),
			(store_random_in_range, ":random_in_range_0_4", 0, 4),
			(this_or_next|ge, ":time_of_day", 22),
			(eq, ":random_in_range_0_4", 0),
			(assign, "$g_last_report_control_day", ":current_day"),
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(try_begin),
				(lt, ":troop_gold_player", 0),
				(store_sub, ":value", 0, ":troop_gold_player"),
				(troop_add_gold, "trp_player", ":value"),
			(try_end),
			(party_get_morale, ":morale_main_party", "p_main_party"),
			(try_begin),
				(str_store_string, 1, "str_party_morale_is_low"),
				(str_clear, 2),
				(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
				(assign, ":var_8", 0),
				(try_for_range_backwards, ":var_9", 0, ":num_companion_stacks_main_party"),
					(party_stack_get_troop_id, ":party_stack_troop_id_main_party_var_9", "p_main_party", ":var_9"),
					(neg|troop_is_hero, ":party_stack_troop_id_main_party_var_9"),
					(party_stack_get_size, ":party_stack_size_main_party_var_9", "p_main_party", ":var_9"),
					(store_faction_of_troop, ":faction_of_troop_party_stack_troop_id_main_party_var_9", ":party_stack_troop_id_main_party_var_9"),
					(assign, ":var_13", ":morale_main_party"),
					(try_begin),
						(ge, ":faction_of_troop_party_stack_troop_id_main_party_var_9", "fac_kingdom_1"),
						(lt, ":faction_of_troop_party_stack_troop_id_main_party_var_9", "fac_kingdoms_end"),
						(faction_get_slot, ":faction_of_troop_party_stack_troop_id_main_party_var_9_morale_of_player_troops", ":faction_of_troop_party_stack_troop_id_main_party_var_9", slot_faction_morale_of_player_troops),
						(val_div, ":faction_of_troop_party_stack_troop_id_main_party_var_9_morale_of_player_troops", 100),
						(val_add, ":var_13", ":faction_of_troop_party_stack_troop_id_main_party_var_9_morale_of_player_troops"),
					(try_end),
					(lt, ":var_13", 32),
					(store_sub, ":value_2", 36, ":var_13"),
					(val_div, ":value_2", 4),
					(assign, ":var_16", 0),
					(try_for_range, ":unused", 0, ":party_stack_size_main_party_var_9"),
						(store_random_in_range, ":random_in_range_0_4", 0, 100),
						(lt, ":random_in_range_0_4", ":value_2"),
						(val_add, ":var_16", 1),
						(remove_member_from_party, ":party_stack_troop_id_main_party_var_9", "p_main_party"),
					(try_end),
					(try_begin),
						(ge, ":var_16", 1),
						(str_store_troop_name, 2, ":party_stack_troop_id_main_party_var_9"),
						(assign, reg0, ":var_16"),
						(try_begin),
							(ge, ":var_8", 1),
							(str_store_string, 1, "str_s1_reg0_s2"),
						(else_try),
							(str_store_string, 3, 1),
							(str_store_string, 1, "str_s3_reg0_s2"),
						(try_end),
						(val_add, ":var_8", ":var_16"),
					(try_end),
				(try_end),
				(try_begin),
					(ge, ":var_8", 1),
					(try_begin),
						(ge, ":var_8", 2),
						(str_store_string, 2, "str_have_deserted_the_party"),
					(else_try),
						(str_store_string, 2, "str_has_deserted_the_party"),
					(try_end),
					(str_store_string, 1, "str_s1_s2"),
					(eq, "$g_infinite_camping", 0),
					(dialog_box, 1, "str_weekly_report"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[]),

	(1.0,
		[
			(try_begin),
				(eq, "$g_player_is_captive", 1),
				(neg|party_is_active, "$capturer_party"),
				(rest_for_hours, 0, 0, 0),
			(try_end),
			(assign, ":var_1", "$next_center_will_be_fired"),
			(party_get_slot, ":var_1_village_smoke_added", ":var_1", slot_village_smoke_added),
			(eq, ":var_1_village_smoke_added", 0),
			(try_begin),
				(party_get_slot, ":var_1_village_bound_center", ":var_1", slot_village_bound_center),
				(party_get_slot, ":var_1_village_bound_center_town_last_nearby_fire_time", ":var_1_village_bound_center", slot_town_last_nearby_fire_time),
				(store_current_hours, ":current_hours"),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(is_between, ":var_1", "p_town_1_1", "p_salt_mine"),
					(is_between, ":var_1_village_bound_center", "p_town_1_1", "p_salt_mine"),
					(str_store_party_name, 4, ":var_1"),
					(str_store_party_name, 5, ":var_1_village_bound_center"),
					(store_current_hours, reg3),
					(party_get_slot, reg4, ":var_1_village_bound_center", slot_town_last_nearby_fire_time),
					(display_message, "@{!}DEBUG - Checking fire at {s4} for {s5} - current time {reg3}, last nearby fire {reg4}"),
				(try_end),
				(eq, ":current_hours", ":var_1_village_bound_center_town_last_nearby_fire_time"),
				(party_add_particle_system, ":var_1", "psys_map_village_fire"),
				(party_add_particle_system, ":var_1", "psys_map_village_fire_smoke"),
			(else_try),
				(store_add, ":value", ":var_1_village_bound_center_town_last_nearby_fire_time", 4),
				(eq, ":value", ":current_hours"),
				(party_clear_particle_systems, ":var_1"),
			(try_end)
		]),

	(24.0,
		[
			(val_sub, "$g_dont_give_fief_to_player_days", 1),
			(val_max, "$g_dont_give_fief_to_player_days", -1),
			(val_sub, "$g_dont_give_marshalship_to_player_days", 1),
			(val_max, "$g_dont_give_marshalship_to_player_days", -1),
			(party_set_name, "p_steppe_bandit_spawn_point_1", "str_the_steppes"),
			(party_set_name, "p_taiga_bandit_spawn_point_1", "str_the_tundra"),
			(party_set_name, "p_forest_bandit_spawn_point_1", "str_the_forests"),
			(party_set_name, "p_forest_bandit_spawn_point_2", "str_the_forests"),
			(party_set_name, "p_mountain_bandit_spawn_point_1", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_2", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_3", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_4", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_5", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_6", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_7", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_8", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_9", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_10", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_11", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_12", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_13", "str_the_highlands"),
			(party_set_name, "p_mountain_bandit_spawn_point_14", "str_the_highlands"),
			(party_set_name, "p_sea_raider_spawn_point_1", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_2", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_3", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_4", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_5", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_6", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_7", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_8", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_9", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_10", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_11", "str_the_coast"),
			(party_set_name, "p_sea_raider_spawn_point_12", "str_the_coast"),
			(party_set_name, "p_desert_bandit_spawn_point_1", "str_the_deserts"),
			(party_set_name, "p_desert_bandit_spawn_point_2", "str_the_deserts"),
			(party_set_name, "p_desert_bandit_spawn_point_3", "str_the_deserts"),
			(try_begin),
				(check_quest_active, "qst_formal_marriage_proposal"),
				(check_quest_failed, "qst_formal_marriage_proposal"),
				(call_script, "script_end_quest", "qst_formal_marriage_proposal"),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_lend_companion"),
				(quest_get_slot, ":lend_companion_giver_troop", "qst_lend_companion", slot_quest_giver_troop),
				(store_faction_of_troop, ":faction_of_troop_lend_companion_giver_troop", ":lend_companion_giver_troop"),
				(store_relation, ":relation_faction_of_troop_lend_companion_giver_troop_players_kingdom", ":faction_of_troop_lend_companion_giver_troop", "$players_kingdom"),
				(this_or_next|lt, ":relation_faction_of_troop_lend_companion_giver_troop_players_kingdom", 0),
				(neg|is_between, ":faction_of_troop_lend_companion_giver_troop", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(call_script, "script_abort_quest", "qst_lend_companion", 0),
			(try_end),
			(try_begin),
				(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, "$players_kingdom", "fac_player_supporters_faction"),
				(faction_slot_eq, "$players_kingdom", slot_faction_marshall, "trp_player"),
				(val_add, "$g_player_days_as_marshal", 1),
			(else_try),
				(assign, "$g_player_days_as_marshal", 0),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_castle_1_1"),
				(party_get_slot, ":party_center_player_enterprise_consumption_order", ":party", slot_center_player_enterprise_consumption_order),
				(ge, ":party_center_player_enterprise_consumption_order", 1),
				(val_sub, ":party_center_player_enterprise_consumption_order", 1),
				(party_set_slot, ":party", slot_center_player_enterprise_consumption_order, ":party_center_player_enterprise_consumption_order"),
			(try_end)
		]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(12.0,
		[
			(eq, "$g_player_is_captive", 0),
			(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
			(assign, ":var_2", 0),
			(try_for_range, ":localvariable", 0, ":num_companion_stacks_main_party"),
				(party_stack_get_size, ":party_stack_size_main_party_localvariable", "p_main_party", ":localvariable"),
				(val_add, ":var_2", ":party_stack_size_main_party_localvariable"),
			(try_end),
			(val_div, ":var_2", 3),
			(try_begin),
				(eq, ":var_2", 0),
				(val_add, ":var_2", 1),
			(try_end),
			(assign, ":var_5", ":var_2"),
			(assign, ":var_6", 0),
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":localvariable_2", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_localvariable_2", "trp_player", ":localvariable_2"),
				(try_begin),
					(ge, ":inventory_slot_player_localvariable_2", 0),
					(try_begin),
						(is_between, ":inventory_slot_player_localvariable_2", "itm_smoked_fish", "itm_siege_supply"),
						(troop_inventory_slot_get_item_amount, ":troop_inventory_slot_item_amount_player_localvariable_2", "trp_player", ":localvariable_2"),
						(troop_get_inventory_slot_modifier, ":inventory_slot_modifier_player_localvariable_2", "trp_player", ":localvariable_2"),
						(neq, ":inventory_slot_modifier_player_localvariable_2", 41),
						(val_add, ":var_6", ":troop_inventory_slot_item_amount_player_localvariable_2"),
					(try_end),
				(try_end),
			(try_end),
			(store_mul, ":value", ":var_6", 14),
			(val_div, ":value", ":var_5"),
			(try_begin),
				(le, ":value", 48),
				(gt, ":value", 0),
				(display_message, "@Your party is low on food, less than 48 hours of food remaining", 0x00ff0000),
			(try_end)
		]),

	(3.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 24),
				(party_get_slot, ":var_1_orders_object", ":var_1", slot_party_orders_object),
				(party_get_slot, ":var_1_home_center", ":var_1", slot_party_home_center),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_orders_object", ":var_1", ":var_1_orders_object"),
				(try_begin),
					(le, ":distance_to_party_from_party_var_1_var_1_orders_object", 1),
					(try_begin),
						(neq, ":var_1_orders_object", ":var_1_home_center"),
						(try_begin),
							(is_between, ":var_1_orders_object", "p_village_1_1", "p_salt_mine"),
							(party_get_slot, ":var_1_orders_object_town_elder", ":var_1_orders_object", slot_town_elder),
						(else_try),
							(party_get_slot, ":var_1_orders_object_town_elder", ":var_1_orders_object", slot_town_merchant),
						(try_end),
						(troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
						(troop_get_slot, ":player_spouse_162", ":player_spouse", 162),
						(troop_remove_items, ":var_1_orders_object_town_elder", "itm_bread", ":player_spouse_162"),
						(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_home_center"),
						(party_set_ai_behavior, ":var_1", 1),
						(party_set_ai_object, ":var_1", ":var_1_home_center"),
						(troop_add_items, "trp_household_possessions", "itm_bread", ":player_spouse_162"),
					(else_try),
						(remove_party, ":var_1"),
						(troop_set_slot, ":player_spouse", slot_troop_cur_center, "$g_player_court"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(720.0,
		[
			(try_for_parties, ":value"),
				(party_slot_eq, ":value", slot_party_type, 22),
				(party_get_slot, ":value_production_sources_end", ":value", slot_production_sources_end),
				(party_get_num_companion_stacks, ":num_companion_stacks_value", ":value"),
				(assign, ":value_2", 1),
				(assign, ":value_3", 0),
				(try_for_range, ":localvariable", 0, ":num_companion_stacks_value"),
					(party_stack_get_troop_id, ":party_stack_troop_id_value_localvariable", ":value", ":localvariable"),
					(eq, ":party_stack_troop_id_value_localvariable", "trp_dplmc_recruiter"),
					(assign, ":value_2", 0),
				(try_end),
				(try_begin),
					(party_get_battle_opponent, ":battle_opponent_value", ":value"),
					(lt, ":battle_opponent_value", 0),
					(eq, ":value_2", 1),
					(party_get_slot, ":value_234", ":value", 234),
					(str_store_party_name_link, 13, ":value_234"),
					(assign, reg10, ":value_production_sources_end"),
					(display_log_message, "@Your recruiter who was commissioned to recruit {reg10} recruits to {s13} has been defeated!", 0x00ff0000),
					(remove_party, ":value"),
					(assign, ":value_3", 1),
				(try_end),
				(try_begin),
					(eq, ":value_3", 0),
					(party_get_slot, ":value_234", ":value", 234),
					(store_faction_of_party, ":faction_of_party_value_234", ":value_234"),
					(neq, ":faction_of_party_value_234", "$players_kingdom"),
					(str_store_party_name_link, 13, ":value_234"),
					(assign, reg10, ":value_production_sources_end"),
					(display_log_message, "@{s13} has been taken by the enemy and your recruiter who was commissioned to recruit {reg10} recruits vanished  without a trace!", 0x00ff0000),
					(remove_party, ":value"),
					(assign, ":value_3", 1),
				(try_end),
				(eq, ":value_3", 0),
				(party_get_num_companions, ":num_companions_value", ":value"),
				(val_sub, ":num_companions_value", 1),
				(party_get_slot, ":value_236", ":value", 236),
				(lt, ":num_companions_value", ":value_production_sources_end"),
				(try_begin),
					(get_party_ai_object, ":party_ai_object_value", ":value"),
					(get_party_ai_behavior, ":party_ai_behavior_value", ":value"),
					(try_begin),
						(neq, ":party_ai_behavior_value", 0),
						(neq, ":party_ai_object_value", -1),
						(party_set_slot, ":party_ai_object_value", 235, 0),
					(try_end),
					(assign, ":value_4", 999999),
					(assign, ":value_5", -1),
					(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_value_party", ":value", ":party"),
						(lt, ":distance_to_party_from_party_value_party", ":value_4"),
						(try_begin),
							(store_faction_of_party, ":faction_of_party_party", ":party"),
							(assign, ":value_6", 100),
							(try_begin),
								(neq, ":faction_of_party_party", "$players_kingdom"),
								(store_relation, ":value_6", "$players_kingdom", ":faction_of_party_party"),
							(try_end),
							(ge, ":value_6", 0),
							(party_get_slot, ":party_center_player_relation", ":party", slot_center_player_relation),
							(ge, ":party_center_player_relation", 0),
							(party_get_slot, ":party_center_volunteer_troop_amount", ":party", slot_center_volunteer_troop_amount),
							(gt, ":party_center_volunteer_troop_amount", 0),
							(party_get_slot, ":party_center_original_faction", ":party", slot_center_original_faction),
							(assign, ":value_7", 1),
							(try_begin),
								(eq, ":value_236", -1),
								(assign, ":value_7", 0),
							(else_try),
								(eq, ":party_center_original_faction", ":value_236"),
								(assign, ":value_7", 0),
							(try_end),
							(neq, ":value_7", 1),
							(neg|party_slot_eq, ":party", slot_village_state, 2),
							(neg|party_slot_eq, ":party", slot_village_state, 1),
							(neg|party_slot_ge, ":party", 39, 1),
							(neg|party_slot_eq, ":party", 235, 1),
							(assign, ":value_4", ":distance_to_party_from_party_value_party"),
							(assign, ":value_5", ":party"),
						(try_end),
					(try_end),
					(gt, ":value_5", -1),
					(party_set_ai_behavior, ":value", 1),
					(party_set_ai_object, ":value", ":value_5"),
					(party_set_slot, ":value", slot_party_ai_object, ":value_5"),
					(party_set_slot, ":value_5", 235, 1),
				(try_end),
				(party_get_slot, ":value_ai_object", ":value", slot_party_ai_object),
				(gt, ":value_ai_object", -1),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_value_value_ai_object", ":value", ":value_ai_object"),
				(try_begin),
					(store_faction_of_party, ":faction_of_party_value_ai_object", ":value_ai_object"),
					(assign, ":value_6", 100),
					(try_begin),
						(neq, ":faction_of_party_value_ai_object", "$players_kingdom"),
						(store_relation, ":value_6", "$players_kingdom", ":faction_of_party_value_ai_object"),
					(try_end),
					(ge, ":value_6", 0),
					(party_get_slot, ":value_ai_object_center_player_relation", ":value_ai_object", slot_center_player_relation),
					(ge, ":value_ai_object_center_player_relation", 0),
					(call_script, "script_raf_aor_faction_to_region", ":party_center_original_faction"),
					(assign, ":var_29", reg0),
					(assign, ":value_7", 1),
					(try_begin),
						(eq, ":value_236", -1),
						(assign, ":value_7", 0),
					(else_try),
						(eq, ":var_29", ":value_236"),
						(assign, ":value_7", 0),
					(try_end),
					(neq, ":value_7", 1),
					(neg|party_slot_eq, ":value_ai_object", slot_village_state, 2),
					(neg|party_slot_eq, ":value_ai_object", slot_village_state, 1),
					(neg|party_slot_ge, ":value_ai_object", 39, 1),
					(le, ":distance_to_party_from_party_value_value_ai_object", 0),
					(party_get_slot, ":value_ai_object_center_volunteer_troop_amount", ":value_ai_object", slot_center_volunteer_troop_amount),
					(party_get_slot, ":value_ai_object_center_volunteer_troop_type", ":value_ai_object", slot_center_volunteer_troop_type),
					(assign, ":var_32", ":value_production_sources_end"),
					(val_sub, ":var_32", ":num_companions_value"),
					(try_begin),
						(gt, ":value_ai_object_center_volunteer_troop_amount", ":var_32"),
						(assign, ":var_33", ":value_ai_object_center_volunteer_troop_amount"),
						(val_sub, ":var_33", ":var_32"),
						(assign, ":var_34", ":value_ai_object_center_volunteer_troop_amount"),
						(val_sub, ":var_34", ":var_33"),
						(assign, ":var_35", ":value_ai_object_center_volunteer_troop_amount"),
						(val_sub, ":var_35", ":var_34"),
						(party_set_slot, ":value_ai_object", slot_center_volunteer_troop_amount, ":var_35"),
						(party_add_members, ":value", ":value_ai_object_center_volunteer_troop_type", ":var_34"),
						(party_set_ai_behavior, ":value", 0),
						(party_set_slot, ":value_ai_object", 235, 0),
					(else_try),
						(le, ":value_ai_object_center_volunteer_troop_amount", ":var_32"),
						(gt, ":value_ai_object_center_volunteer_troop_amount", 0),
						(party_set_slot, ":value_ai_object", slot_center_volunteer_troop_amount, -1),
						(party_add_members, ":value", ":value_ai_object_center_volunteer_troop_type", ":value_ai_object_center_volunteer_troop_amount"),
						(party_set_ai_behavior, ":value", 0),
						(party_set_slot, ":value_ai_object", 235, 0),
					(else_try),
						(le, ":value_ai_object_center_volunteer_troop_amount", 0),
						(party_set_ai_behavior, ":value", 0),
						(party_set_slot, ":value_ai_object", 235, 0),
					(else_try),
						(display_message, "@ERROR IN THE RECRUITER KIT SIMPLE TRIGGERS!", 0x00ff2222),
						(party_set_slot, ":value_ai_object", 235, 0),
					(try_end),
				(try_end),
			(try_end),
			(try_for_parties, ":value"),
				(party_slot_eq, ":value", slot_party_type, 22),
				(party_get_num_companions, ":num_companions_value", ":value"),
				(val_sub, ":num_companions_value", 1),
				(party_get_slot, ":value_production_sources_end", ":value", slot_production_sources_end),
				(eq, ":num_companions_value", ":value_production_sources_end"),
				(party_get_slot, ":value_234", ":value", 234),
				(try_begin),
					(neg|party_slot_eq, ":value", slot_party_ai_object, ":value_234"),
					(party_set_slot, ":value", slot_party_ai_object, ":value_234"),
					(party_set_ai_behavior, ":value", 1),
					(party_set_ai_object, ":value", ":value_234"),
				(try_end),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_value_value_234", ":value", ":value_234"),
				(try_begin),
					(le, ":distance_to_party_from_party_value_value_234", 0),
					(party_get_num_companion_stacks, ":num_companion_stacks_value", ":value"),
					(try_for_range, ":localvariable", 1, ":num_companion_stacks_value"),
						(party_stack_get_size, ":party_stack_size_value_localvariable", ":value", ":localvariable"),
						(party_stack_get_troop_id, ":party_stack_troop_id_value_localvariable", ":value", ":localvariable"),
						(party_add_members, ":value_234", ":party_stack_troop_id_value_localvariable", ":party_stack_size_value_localvariable"),
					(try_end),
					(str_store_party_name_link, 13, ":value_234"),
					(assign, reg10, ":num_companions_value"),
					(display_log_message, "@A recruiter has brought {reg10} recruits to {s13}.", 0x0000ff00),
					(remove_party, ":value"),
				(try_end),
			(try_end)
		]),

	(12.0,
		[
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(party_set_slot, ":party", 235, 0),
			(try_end)
		]),

	(2.0,
		[
			(eq, "$g_player_chancellor", "trp_dplmc_chancellor"),
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 23),
				(party_is_active, ":var_1"),
				(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
				(party_get_slot, ":var_1_orders_object", ":var_1", slot_party_orders_object),
				(try_begin),
					(party_is_active, ":var_1_ai_object"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
					(str_store_party_name, 14, ":var_1"),
					(str_store_party_name, 15, ":var_1_ai_object"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(assign, reg0, ":distance_to_party_from_party_var_1_var_1_ai_object"),
						(display_message, "@Distance between {s14} and {s15}: {reg0}"),
					(try_end),
					(try_begin),
						(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
						(party_get_slot, ":var_1_300", ":var_1", 300),
						(str_store_item_name, 12, ":var_1_300"),
						(try_begin),
							(gt, ":var_1_orders_object", 0),
							(str_store_troop_name, 13, ":var_1_orders_object"),
						(else_try),
							(str_store_party_name, 13, ":var_1_ai_object"),
						(try_end),
						(display_log_message, "@Your caravan has brought {s12} to {s13}.", 0x0000ff00),
						(assign, ":value", 0),
						(store_faction_of_party, ":faction_of_party_var_1_ai_object", ":var_1_ai_object"),
						(try_begin),
							(gt, ":var_1_orders_object", 0),
							(faction_slot_eq, ":faction_of_party_var_1_ai_object", slot_faction_leader, ":var_1_orders_object"),
							(try_begin),
								(eq, ":var_1_300", "itm_wine"),
								(assign, ":value", 1),
							(else_try),
								(eq, ":var_1_300", "itm_oil"),
								(assign, ":value", 2),
							(try_end),
						(else_try),
							(store_random_in_range, ":random_in_range_1_3", 1, 3),
							(try_begin),
								(eq, ":var_1_300", "itm_ale"),
								(val_add, ":value", ":random_in_range_1_3"),
							(else_try),
								(eq, ":var_1_300", "itm_wine"),
								(store_add, ":value", 1, ":random_in_range_1_3"),
							(else_try),
								(eq, ":var_1_300", "itm_oil"),
								(store_add, ":value", 2, ":random_in_range_1_3"),
							(else_try),
								(eq, ":var_1_300", "itm_raw_dyes"),
								(val_add, ":value", 1),
							(else_try),
								(eq, ":var_1_300", "itm_raw_silk"),
								(val_add, ":value", 2),
							(else_try),
								(eq, ":var_1_300", "itm_velvet"),
								(val_add, ":value", 4),
							(else_try),
								(eq, ":var_1_300", "itm_smoked_fish"),
								(try_begin),
									(party_slot_eq, ":var_1_ai_object", slot_party_type, 4),
									(val_add, ":value", 1),
								(try_end),
							(else_try),
								(eq, ":var_1_300", "itm_cheese"),
								(val_add, ":value", 1),
								(try_begin),
									(party_slot_eq, ":var_1_ai_object", slot_party_type, 4),
									(val_add, ":value", 1),
								(try_end),
							(else_try),
								(eq, ":var_1_300", "itm_honey"),
								(val_add, ":value", 2),
								(try_begin),
									(party_slot_eq, ":var_1_ai_object", slot_party_type, 4),
									(val_add, ":value", 2),
								(try_end),
							(try_end),
						(try_end),
						(try_begin),
							(this_or_next|eq, ":faction_of_party_var_1_ai_object", "fac_player_supporters_faction"),
							(eq, ":faction_of_party_var_1_ai_object", "$players_kingdom"),
							(val_add, ":value", 1),
						(try_end),
						(try_begin),
							(gt, ":var_1_orders_object", 0),
							(call_script, "script_change_player_relation_with_troop", ":var_1_orders_object", ":value"),
						(else_try),
							(call_script, "script_change_player_relation_with_center", ":var_1_ai_object", ":value"),
						(try_end),
						(remove_party, ":var_1"),
					(try_end),
				(else_try),
					(display_log_message, "@Your caravan has lost its way and gave up your mission!", 0x00ff0000),
					(remove_party, ":var_1"),
				(try_end),
			(try_end)
		]),

	(2.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 25),
				(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
				(party_get_slot, ":var_1_orders_object", ":var_1", slot_party_orders_object),
				(try_begin),
					(party_is_active, ":var_1_ai_object"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
					(str_store_party_name, 14, ":var_1"),
					(str_store_party_name, 15, ":var_1_ai_object"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(assign, reg0, ":distance_to_party_from_party_var_1_var_1_ai_object"),
						(display_message, "@Distance between {s14} and {s15}: {reg0}"),
					(try_end),
					(try_begin),
						(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
						(try_begin),
							(eq, ":var_1_ai_object", "p_main_party"),
							(party_get_slot, ":var_1_orders_object_2", ":var_1", slot_party_orders_object),
							(party_get_slot, ":var_1_300", ":var_1", 300),
							(call_script, "script_add_notification_menu", "mnu_dplmc_messenger", ":var_1_orders_object_2", ":var_1_300"),
							(remove_party, ":var_1"),
						(else_try),
							(party_stack_get_troop_id, ":var_1_orders_object_2", ":var_1_ai_object", 0),
							(str_store_troop_name, 13, ":var_1_orders_object_2"),
							(try_begin),
								(eq, "$cheat_mode", 1),
								(display_log_message, "@Your messenger reached {s13}.", 0x0000ff00),
								(assign, "$g_talk_troop", ":var_1_orders_object_2"),
							(try_end),
							(party_get_slot, ":var_1_300_2", ":var_1", 300),
							(assign, ":var_1_300", 0),
							(try_begin),
								(party_set_slot, ":var_1_ai_object", slot_party_commander_party, "p_main_party"),
								(store_current_hours, ":current_hours"),
								(party_set_slot, ":var_1_ai_object", slot_party_following_orders_of_troop, "trp_kingdom_heroes_including_player_begin"),
								(party_set_slot, ":var_1_ai_object", slot_party_orders_object, ":var_1_orders_object"),
								(party_set_slot, ":var_1_ai_object", slot_party_orders_type, ":var_1_300_2"),
								(party_set_slot, ":var_1_ai_object", slot_party_orders_time, ":current_hours"),
								(call_script, "script_npc_decision_checklist_party_ai", ":var_1_orders_object_2"),
								(try_begin),
									(eq, "$cheat_mode", 1),
									(display_message, "@{s14}"),
								(try_end),
								(try_begin),
									(eq, reg0, ":var_1_300_2"),
									(eq, reg1, ":var_1_orders_object"),
									(assign, ":var_1_300", 1),
								(try_end),
								(call_script, "script_party_set_ai_state", ":var_1_ai_object", reg0, reg1),
							(try_end),
							(party_set_ai_behavior, ":var_1", 1),
							(party_set_ai_object, ":var_1", "p_main_party"),
							(party_set_slot, ":var_1", slot_party_ai_object, "p_main_party"),
							(party_set_slot, ":var_1", slot_party_orders_object, ":var_1_orders_object_2"),
							(party_set_slot, ":var_1", 300, ":var_1_300"),
						(try_end),
					(try_end),
				(else_try),
					(display_log_message, "@Your messenger has lost it's way and gave up your mission!", 0x00ff0000),
					(remove_party, ":var_1"),
				(try_end),
			(try_end)
		]),

	(168.0,
		[]),

	(2.0,
		[
			(try_for_parties, ":var_1"),
				(party_get_template_id, ":template_id_var_1", ":var_1"),
				(this_or_next|party_slot_eq, ":var_1", slot_party_type, 7),
				(this_or_next|eq, ":template_id_var_1", "pt_peasant_rebels_euro"),
				(this_or_next|eq, ":template_id_var_1", "pt_guelphs"),
				(this_or_next|eq, ":template_id_var_1", "pt_ghibellines"),
				(this_or_next|eq, ":template_id_var_1", "pt_prussians"),
				(this_or_next|eq, ":template_id_var_1", "pt_yotvingians"),
				(this_or_next|eq, ":template_id_var_1", "pt_curonians"),
				(this_or_next|eq, ":template_id_var_1", "pt_samogitians"),
				(this_or_next|eq, ":template_id_var_1", "pt_welsh"),
				(this_or_next|eq, ":template_id_var_1", "pt_mongolian_camp"),
				(this_or_next|eq, ":template_id_var_1", "pt_crusader_raiders"),
				(this_or_next|eq, ":template_id_var_1", "pt_jihadist_raiders"),
				(this_or_next|eq, ":template_id_var_1", "pt_teutonic_raiders"),
				(eq, ":template_id_var_1", "pt_sea_raiders"),
				(party_is_active, ":var_1"),
				(store_party_size_wo_prisoners, ":party_size_wo_prisoners_var_1", ":var_1"),
				(party_get_battle_opponent, ":battle_opponent_var_1", ":var_1"),
				(try_begin),
					(lt, ":battle_opponent_var_1", 0),
					(le, ":party_size_wo_prisoners_var_1", 10),
					(neq, ":template_id_var_1", "pt_sea_raiders"),
					(neq, ":template_id_var_1", "pt_mongolian_camp"),
					(remove_party, ":var_1"),
				(else_try),
					(lt, ":battle_opponent_var_1", 0),
					(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
					(gt, ":var_1_ai_object", 0),
					(party_is_active, ":var_1_ai_object"),
					(try_begin),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
						(gt, ":distance_to_party_from_party_var_1_var_1_ai_object", 15),
						(party_set_ai_behavior, ":var_1", 6),
						(party_get_position, 5, ":var_1_ai_object"),
						(party_set_ai_target_position, ":var_1", 5),
					(else_try),
						(get_party_ai_behavior, ":party_ai_behavior_var_1", ":var_1"),
						(eq, ":party_ai_behavior_var_1", 6),
						(try_begin),
							(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
							(lt, ":distance_to_party_from_party_var_1_var_1_ai_object", 3),
							(party_set_ai_behavior, ":var_1", 2),
							(party_set_ai_object, ":var_1", ":var_1_ai_object"),
							(party_set_ai_patrol_radius, ":var_1", 15),
							(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_ai_object"),
						(try_end),
					(try_end),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 26),
				(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
				(party_get_slot, ":var_1_orders_object", ":var_1", slot_party_orders_object),
				(troop_get_slot, ":var_1_orders_object_cur_center", ":var_1_orders_object", slot_troop_cur_center),
				(party_get_slot, ":var_1_home_center", ":var_1", slot_party_home_center),
				(party_get_slot, ":var_1_center_original_faction", ":var_1", slot_center_original_faction),
				(try_begin),
					(gt, "$players_kingdom", 0),
					(neq, "$players_kingdom", ":var_1_center_original_faction"),
					(party_set_faction, ":var_1", "$players_kingdom"),
					(party_set_slot, ":var_1", slot_center_original_faction, "$players_kingdom"),
				(else_try),
					(neq, "fac_player_faction", ":var_1_center_original_faction"),
					(le, "$players_kingdom", 0),
					(party_set_faction, ":var_1", "fac_player_faction"),
					(party_set_slot, ":var_1", slot_center_original_faction, "fac_player_faction"),
				(try_end),
				(try_begin),
					(neq, ":var_1_orders_object_cur_center", ":var_1_ai_object"),
					(neq, ":var_1_ai_object", ":var_1_home_center"),
					(party_set_ai_behavior, ":var_1", 1),
					(party_set_ai_object, ":var_1", ":var_1_orders_object_cur_center"),
					(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_orders_object_cur_center"),
				(else_try),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
					(try_begin),
						(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
						(neq, ":var_1_ai_object", ":var_1_home_center"),
						(str_store_party_name, 25, ":var_1_home_center"),
						(str_store_troop_name, 26, ":var_1_orders_object"),
						(display_message, "@Your messenger has delivered his message to {s26} and is on his way back to {s25}", 0x0000ff00),
						(party_add_members, ":var_1", ":var_1_orders_object", 1),
						(troop_set_slot, ":var_1_orders_object", slot_troop_cur_center, ":var_1"),
						(troop_set_slot, ":var_1_orders_object", 400, 1),
						(party_set_ai_behavior, ":var_1", 1),
						(party_set_ai_object, ":var_1", ":var_1_home_center"),
						(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_home_center"),
					(else_try),
						(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
						(eq, ":var_1_ai_object", ":var_1_home_center"),
						(troop_set_slot, ":var_1_orders_object", slot_troop_cur_center, ":var_1_home_center"),
						(str_store_party_name, 25, ":var_1_home_center"),
						(str_store_troop_name, 26, ":var_1_orders_object"),
						(display_message, "@{s26} has arrived in {s25} and is awaiting you there.", 0x0000ff00),
						(remove_party, ":var_1"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(0.0,
		[
			(eq, "$g_battle_preparation_phase", 2),
			(party_set_slot, "$g_battle_preparation", 251, 1),
			(try_for_parties, ":var_1"),
				(str_store_party_name, 20, ":var_1"),
				(neq, ":var_1", "$g_battle_preparation"),
				(neq, ":var_1", "p_main_party"),
				(neg|party_slot_eq, ":var_1", 251, 1),
				(this_or_next|party_slot_eq, ":var_1", slot_party_type, 7),
				(this_or_next|party_slot_eq, ":var_1", slot_party_type, 30),
				(party_slot_eq, ":var_1", slot_party_type, 13),
				(party_is_active, ":var_1"),
				(party_get_battle_opponent, ":battle_opponent_var_1", ":var_1"),
				(lt, ":battle_opponent_var_1", 0),
				(party_get_attached_to, ":attached_to_var_1", ":var_1"),
				(lt, ":attached_to_var_1", 0),
				(get_party_ai_behavior, ":party_ai_behavior_var_1", ":var_1"),
				(neq, ":party_ai_behavior_var_1", 8),
				(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
				(store_relation, ":relation_player_supporters_faction_faction_of_party_var_1", "fac_player_supporters_faction", ":faction_of_party_var_1"),
				(this_or_next|eq, ":faction_of_party_var_1", "$players_kingdom"),
				(lt, ":relation_player_supporters_faction_faction_of_party_var_1", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_main_party", ":var_1", "p_main_party"),
				(le, ":distance_to_party_from_party_var_1_main_party", 5),
				(party_set_slot, ":var_1", 251, 1),
			(try_end),
			(try_begin),
				(map_free),
				(rest_for_hours, 12, 3, 0),
			(try_end),
			(store_current_hours, ":current_hours"),
			(store_sub, ":value", ":current_hours", "$g_battle_preparation_start"),
			(ge, ":value", 12),
			(assign, "$g_battle_preparation_phase", 3),
			(assign, "$g_battle_preparation_start", ":current_hours")
		]),

	(0.0,
		[
			(is_between, "$g_player_sally_town", "p_town_1_1", "p_salt_mine"),
			(party_is_active, "$g_player_sallies"),
			(start_encounter, "$g_player_sallies")
		]),

	(4.0,
		[
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(try_begin),
				(this_or_next|eq, ":current_terrain_main_party", 4),
				(eq, ":current_terrain_main_party", 12),
				(assign, "$tom_sand_storm_chance", 20),
				(set_global_haze_amount, 0),
				(store_random_in_range, ":random_in_range_25_101", 25, 101),
				(set_global_cloud_amount, ":random_in_range_25_101"),
			(else_try),
				(this_or_next|eq, ":current_terrain_main_party", 3),
				(eq, ":current_terrain_main_party", 11),
				(assign, "$tom_sand_storm_chance", 15),
				(store_random_in_range, ":random_in_range_25_101", 0, 101),
				(set_global_haze_amount, ":random_in_range_25_101"),
				(store_random_in_range, ":random_in_range_25_101", 15, 100),
				(set_global_cloud_amount, ":random_in_range_25_101"),
			(else_try),
				(this_or_next|eq, ":current_terrain_main_party", 2),
				(eq, ":current_terrain_main_party", 10),
				(assign, "$tom_sand_storm_chance", 10),
				(store_random_in_range, ":random_in_range_25_101", 0, 50),
				(set_global_haze_amount, ":random_in_range_25_101"),
				(store_random_in_range, ":random_in_range_25_101", 0, 80),
				(set_global_cloud_amount, ":random_in_range_25_101"),
			(else_try),
				(this_or_next|eq, ":current_terrain_main_party", 5),
				(eq, ":current_terrain_main_party", 13),
				(assign, "$tom_sand_storm_chance", 25),
				(set_global_haze_amount, 0),
				(set_global_cloud_amount, 0),
			(else_try),
				(assign, "$tom_sand_storm_chance", 15),
				(store_random_in_range, ":random_in_range_25_101", 0, 101),
				(set_global_haze_amount, ":random_in_range_25_101"),
				(store_random_in_range, ":random_in_range_25_101", 0, 101),
				(set_global_cloud_amount, ":random_in_range_25_101"),
			(try_end)
		]),

	(168.0,
		[
			(eq, "$freelancer_state", 1),
			(troop_get_slot, ":player_signup", "trp_player", slot_troop_signup),
			(troop_get_xp, ":xp_player", "trp_player"),
			(store_sub, ":value", ":xp_player", ":player_signup"),
			(try_begin),
				(troop_get_upgrade_troop, ":upgrade_troop_player_cur_troop_0", "$player_cur_troop", 0),
				(gt, ":upgrade_troop_player_cur_troop_0", 1),
				(call_script, "script_game_get_upgrade_xp", "$player_cur_troop"),
				(assign, ":var_5", reg0),
				(ge, ":value", ":var_5"),
				(try_begin),
					(call_script, "script_cf_freelancer_player_can_upgrade", ":upgrade_troop_player_cur_troop_0"),
					(troop_set_slot, "trp_player", slot_troop_signup, ":xp_player"),
					(jump_to_menu, "mnu_upgrade_path"),
				(else_try),
					(assign, ":var_6", reg0),
					(try_begin),
						(eq, ":var_6", 0),
						(display_message, "@You are not strong enough to lift a weapon fit for your promotion!"),
					(else_try),
						(eq, ":var_6", 1),
						(display_message, "@You are not strong enough to hold all that weight required with promotion!."),
					(else_try),
						(eq, ":var_6", 2),
						(display_message, "@Your arms are to weak to advance in the artillary at this moment."),
					(else_try),
						(eq, ":var_6", 3),
						(display_message, "@You require more horse riding skills to fit your next poisition!"),
					(try_end),
				(try_end),
			(try_end),
			(try_begin),
				(eq, "$crusader_order_joined", 1),
				(troop_add_gold, "trp_player", 100),
				(troop_add_item, "trp_player", "itm_bread"),
				(call_script, "script_change_troop_renown", "trp_player", 1),
				(call_script, "script_change_player_honor", 1),
				(add_xp_to_troop, 70, "trp_player"),
			(else_try),
				(store_character_level, ":character_level_player_cur_troop", "$player_cur_troop"),
				(store_mul, ":value_2", 10, ":character_level_player_cur_troop"),
				(troop_add_gold, "trp_player", ":value_2"),
				(add_xp_to_troop, 70, "trp_player"),
				(play_sound, "snd_money_received", 0),
			(try_end)
		]),

	(1.0,
		[
			(eq, "$freelancer_state", 1),
			(set_camera_follow_party, "$enlisted_party"),
			(party_relocate_near_party, "p_main_party", "$enlisted_party", 1),
			(assign, ":var_1", 0),
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":localvariable", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_localvariable", "trp_player", ":localvariable"),
				(ge, ":inventory_slot_player_localvariable", 0),
				(is_between, ":inventory_slot_player_localvariable", "itm_smoked_fish", "itm_siege_supply"),
				(val_add, ":var_1", 1),
			(try_end),
			(try_begin),
				(lt, ":var_1", 2),
				(troop_add_item, "trp_player", "itm_bread"),
			(try_end)
		]),

	(168.0,
		[
			(troop_get_slot, ":manor_array_relations_begin", "trp_manor_array", slot_troop_relations_begin),
			(try_for_range, ":localvariable", 1, ":manor_array_relations_begin"),
				(troop_get_slot, ":manor_array_localvariable", "trp_manor_array", ":localvariable"),
				(party_get_slot, ":manor_array_localvariable_village_bound_center", ":manor_array_localvariable", slot_village_bound_center),
				(this_or_next|neg|party_slot_eq, ":manor_array_localvariable_village_bound_center", slot_village_state, 2),
				(party_slot_eq, ":manor_array_localvariable", 327, 1),
				(party_get_slot, ":manor_array_localvariable_village_bound_center_town_lord", ":manor_array_localvariable_village_bound_center", slot_town_lord),
				(party_get_slot, ":manor_array_localvariable_town_prosperity", ":manor_array_localvariable", slot_town_prosperity),
				(party_get_slot, ":manor_array_localvariable_342", ":manor_array_localvariable", 342),
				(party_get_slot, ":manor_array_localvariable_341", ":manor_array_localvariable", 341),
				(party_get_slot, ":manor_array_localvariable_367", ":manor_array_localvariable", 367),
				(assign, ":value", 0),
				(try_begin),
					(store_faction_of_party, ":faction_of_party_manor_array_localvariable_village_bound_center", ":manor_array_localvariable_village_bound_center"),
					(party_set_faction, ":manor_array_localvariable", ":faction_of_party_manor_array_localvariable_village_bound_center"),
					(party_set_slot, ":manor_array_localvariable", slot_town_lord, ":manor_array_localvariable_village_bound_center_town_lord"),
				(try_end),
				(assign, ":var_12", 0),
				(try_for_range, ":number", 303, 328),
					(party_slot_eq, ":manor_array_localvariable", ":number", 2),
					(party_set_slot, ":manor_array_localvariable", ":number", 1),
					(try_begin),
						(this_or_next|eq, ":number", 303),
						(this_or_next|eq, ":number", 306),
						(this_or_next|eq, ":number", 305),
						(eq, ":number", 304),
						(val_add, ":var_12", 15),
					(else_try),
						(eq, ":number", 307),
						(val_add, ":var_12", 10),
					(try_end),
					(try_begin),
						(eq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
						(try_begin),
							(eq, ":number", 305), #brothel
							(display_message, "@Peasants rejoice of your whorehouse in the regional manor. You gain fame!"),
							(call_script, "script_change_troop_renown", "trp_player", 5),
						(else_try),
							(this_or_next|eq, ":number", 322), #prison
							(this_or_next|eq, ":number", 323), #armour smithy
							(this_or_next|eq, ":number", 324), #weapon smithy
							(this_or_next|eq, ":number", 325), #fletchery
							(this_or_next|eq, ":number", 326), #stables
							(eq, ":number", 327), #walls
							(display_message, "@You gain right to rule for building an important building in your regional manor!"),
							(call_script, "script_change_player_right_to_rule", 3),
						(else_try),
							(display_message, "@You gain renown for funding a building in your regional manor"),
							(call_script, "script_change_troop_renown", "trp_player", 1),
						(try_end),
					(try_end),
				(try_end),
				(try_for_range, ":number", 303, 328),
					(party_slot_eq, ":manor_array_localvariable", ":number", 1),
					(store_sub, ":value_2", ":number", 308),
					(val_add, ":value_2", "trp_manor_grain"),
					(assign, ":var_15", 0),
					(assign, ":value_3", -1),
					(assign, ":value_4", -1),
					(troop_get_slot, ":value_2_301", ":value_2", 301),
					(party_get_slot, ":manor_array_localvariable_value_2_301", ":manor_array_localvariable", ":value_2_301"),
					(assign, ":var_20", 0),
					(try_begin),
						(is_between, ":number", 308, 312),
						(try_begin),
							(this_or_next|neq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
							(eq, ":manor_array_localvariable_value_2_301", 0),
							(val_add, ":var_15", 30),
							(val_add, ":var_20", 30),
						(else_try),
							(eq, ":manor_array_localvariable_value_2_301", 1),
							(troop_get_slot, ":value_3", ":value_2", 302),
							(assign, ":value_4", 4),
						(try_end),
					(else_try),
						(this_or_next|eq, ":number", 303),
						(this_or_next|eq, ":number", 304),
						(eq, ":number", 305),
						(val_add, ":var_15", 50),
						(val_add, ":var_20", 50),
					(else_try),
						(is_between, ":number", 312, 322),
						(try_begin),
							(this_or_next|neq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
							(eq, ":manor_array_localvariable_value_2_301", 0),
							(val_add, ":var_15", 80),
							(val_add, ":var_20", 80),
						(else_try),
							(this_or_next|neq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
							(eq, ":manor_array_localvariable_value_2_301", 1),
							(troop_get_slot, ":value_3", ":value_2", 302),
							(assign, ":value_4", 3),
						(try_end),
					(else_try),
						(is_between, ":number", 323, 327),
						(val_add, ":var_15", 100),
					(try_end),
					(try_begin),
						(ge, ":var_15", 1),
						(store_random_in_range, ":random_in_range_-5_5", -5, 5),
						(val_add, ":var_15", ":random_in_range_-5_5"),
						(val_add, ":value", ":var_15"),
						(val_add, ":var_20", ":random_in_range_-5_5"),
					(try_end),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(eq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
						(str_store_troop_name, 1, ":value_2"),
						(assign, reg1, ":var_20"),
						(display_message, "@MANOR troop: {s1} pays {reg1} florins"),
					(try_end),
					(ge, ":value_4", 0),
					(ge, ":value_3", 0),
					(try_begin),
						(eq, ":manor_array_localvariable_341", 1),
						(val_div, ":value_4", 2),
					(else_try),
						(eq, ":manor_array_localvariable_341", -1),
						(val_mul, ":value_4", 3),
						(val_div, ":value_4", 2),
					(try_end),
					(troop_ensure_inventory_space, "trp_manor_array", ":value_4"),
					(troop_add_items, "trp_manor_array", ":value_3", ":value_4"),
				(try_end),
				(try_begin),
					(party_slot_eq, ":manor_array_localvariable", 327, 1),
					(val_sub, ":value", 500),
					(lt, ":value", 0),
					(assign, ":value", 0),
				(try_end),
				(val_add, ":value", ":manor_array_localvariable_342"),
				(try_begin),
					(party_slot_eq, ":manor_array_localvariable", 302, 0),
					(val_clamp, ":manor_array_localvariable_342", 20, 200),
				(else_try),
					(party_slot_eq, ":manor_array_localvariable", 302, 1),
					(val_clamp, ":manor_array_localvariable_342", 20, 760),
				(else_try),
					(party_slot_eq, ":manor_array_localvariable", 302, 2),
					(val_clamp, ":manor_array_localvariable_342", 20, 1000),
				(try_end),
				(store_random_in_range, ":random_in_range_-5_5", -5, 6),
				(val_add, ":manor_array_localvariable_342", ":random_in_range_-5_5"),
				(try_begin),
					(eq, ":manor_array_localvariable_341", 1),
					(val_sub, ":var_12", 3),
					(val_add, ":manor_array_localvariable_342", 15),
					(val_mul, ":value", 3),
					(val_div, ":value", 2),
				(else_try),
					(eq, ":manor_array_localvariable_341", 0),
					(val_add, ":var_12", 1),
					(val_add, ":manor_array_localvariable_342", 40),
				(else_try),
					(eq, ":manor_array_localvariable_341", -1),
					(val_add, ":var_12", 2),
					(val_add, ":manor_array_localvariable_342", 50),
					(val_div, ":value", 2),
				(try_end),
				(val_clamp, ":var_12", 0, 100),
				(try_begin),
					(assign, ":var_22", ":manor_array_localvariable_town_prosperity"),
					(val_clamp, ":var_22", 5, 100),
					(val_mul, ":value", ":var_22"),
					(val_div, ":value", 100),
				(try_end),
				(try_begin),
					(party_set_slot, ":manor_array_localvariable", 344, -1),
					(party_slot_eq, ":manor_array_localvariable", 303, 1),
					(ge, ":manor_array_localvariable_town_prosperity", 50),
					(ge, ":manor_array_localvariable_342", 700),
					(store_random_in_range, ":random_in_range_manor_trader_silk_temp_lord", "trp_manor_trader_silk", "trp_temp_lord"),
					(party_set_slot, ":manor_array_localvariable", 344, ":random_in_range_manor_trader_silk_temp_lord"),
					(troop_get_slot, ":random_in_range_manor_trader_silk_temp_lord_302", ":random_in_range_manor_trader_silk_temp_lord", 302),
					(troop_clear_inventory, ":random_in_range_manor_trader_silk_temp_lord"),
					(store_random_in_range, ":random_in_range_-5_5", 5, 10),
					(troop_add_items, ":random_in_range_manor_trader_silk_temp_lord", ":random_in_range_manor_trader_silk_temp_lord_302", ":random_in_range_-5_5"),
					(store_troop_gold, ":troop_gold_random_in_range_manor_trader_silk_temp_lord", ":random_in_range_manor_trader_silk_temp_lord"),
					(troop_remove_gold, ":random_in_range_manor_trader_silk_temp_lord", ":troop_gold_random_in_range_manor_trader_silk_temp_lord"),
					(store_random_in_range, ":troop_gold_random_in_range_manor_trader_silk_temp_lord", 200, 800),
					(troop_add_gold, ":random_in_range_manor_trader_silk_temp_lord", ":troop_gold_random_in_range_manor_trader_silk_temp_lord"),
				(try_end),
				(try_begin),
					(party_slot_eq, ":manor_array_localvariable", 340, 1),
					(store_random_in_range, ":random_in_range_book_tactics_spice", "itm_book_tactics", "itm_spice"),
					(troop_clear_inventory, "trp_manor_trader_book"),
					(troop_add_items, "trp_manor_trader_book", ":random_in_range_book_tactics_spice", 1),
					(store_troop_gold, ":troop_gold_random_in_range_manor_trader_silk_temp_lord", "trp_manor_trader_book"),
					(troop_remove_gold, "trp_manor_trader_book", ":troop_gold_random_in_range_manor_trader_silk_temp_lord"),
					(store_random_in_range, ":troop_gold_random_in_range_manor_trader_silk_temp_lord", 200, 300),
					(troop_add_gold, "trp_manor_trader_book", ":troop_gold_random_in_range_manor_trader_silk_temp_lord"),
				(try_end),
				(val_add, ":manor_array_localvariable_367", ":value"),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(eq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
					(assign, reg0, ":value"),
					(assign, reg1, ":manor_array_localvariable_367"),
					(display_message, "@final florins :{reg0}, manor florins: {reg1}"),
				(try_end),
				(val_add, ":var_12", ":manor_array_localvariable_town_prosperity"),
				(val_clamp, ":var_12", 0, 100),
				(party_set_slot, ":manor_array_localvariable", slot_town_prosperity, ":var_12"),
				(party_set_slot, ":manor_array_localvariable", 342, ":manor_array_localvariable_342"),
				(party_set_slot, ":manor_array_localvariable", 343, ":value"),
				(party_set_slot, ":manor_array_localvariable", 367, ":manor_array_localvariable_367"),
			(try_end)
		]),

	(168.0,
		[
			(troop_get_slot, ":manor_array_relations_begin", "trp_manor_array", slot_troop_relations_begin),
			(try_for_range, ":localvariable", 1, ":manor_array_relations_begin"),
				(troop_get_slot, ":manor_array_localvariable", "trp_manor_array", ":localvariable"),
				(party_get_slot, ":manor_array_localvariable_village_bound_center", ":manor_array_localvariable", slot_village_bound_center),
				(party_get_slot, ":manor_array_localvariable_village_bound_center_town_lord", ":manor_array_localvariable_village_bound_center", slot_town_lord),
				(neq, ":manor_array_localvariable_village_bound_center_town_lord", "trp_player"),
				(neg|party_slot_eq, ":manor_array_localvariable_village_bound_center", slot_village_state, 2),
				(party_get_slot, ":manor_array_localvariable_367", ":manor_array_localvariable", 367),
				(ge, ":manor_array_localvariable_367", 2000),
				(try_begin),
					(store_random_in_range, ":random_in_range_308_312", 308, 312),
					(party_slot_eq, ":manor_array_localvariable", ":random_in_range_308_312", 0),
					(party_set_slot, ":manor_array_localvariable", ":random_in_range_308_312", 1),
					(val_sub, ":manor_array_localvariable_367", 2000),
				(else_try),
					(ge, ":manor_array_localvariable_367", 3000),
					(store_random_in_range, ":random_in_range_308_312", 303, 308),
					(party_slot_eq, ":manor_array_localvariable", ":random_in_range_308_312", 0),
					(party_set_slot, ":manor_array_localvariable", ":random_in_range_308_312", 1),
					(val_sub, ":manor_array_localvariable_367", 3000),
				(else_try),
					(ge, ":manor_array_localvariable_367", 6000),
					(store_random_in_range, ":random_in_range_308_312", 303, 308),
					(party_slot_eq, ":manor_array_localvariable", ":random_in_range_308_312", 0),
					(party_set_slot, ":manor_array_localvariable", ":random_in_range_308_312", 1),
					(val_sub, ":manor_array_localvariable_367", 6000),
				(else_try),
					(ge, ":manor_array_localvariable_367", 10000),
					(store_random_in_range, ":random_in_range_308_312", 303, 308),
					(party_slot_eq, ":manor_array_localvariable", ":random_in_range_308_312", 0),
					(party_set_slot, ":manor_array_localvariable", ":random_in_range_308_312", 1),
					(val_sub, ":manor_array_localvariable_367", 10000),
				(try_end),
				(party_set_slot, ":manor_array_localvariable", 367, ":manor_array_localvariable_367"),
			(try_end)
		]),

	(168.0,
		[
			(try_for_parties, ":var_1"),
				(party_get_template_id, ":template_id_var_1", ":var_1"),
				(eq, ":template_id_var_1", "pt_manor"),
				(party_slot_ge, ":var_1", 340, 2),
				(party_set_slot, ":var_1", 709, 1),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_castle_1_1"),
				(try_begin),
					(party_get_slot, ":party_299", ":party", 299),
					(ge, ":party_299", 1),
					(party_get_template_id, ":template_id_party_299", ":party_299"),
					(eq, ":template_id_party_299", "pt_monastery"),
					(party_slot_ge, ":party_299", 340, 2),
					(party_set_slot, ":party_299", 709, 1),
				(try_end),
				(party_set_slot, ":party", 703, 1),
				(party_set_slot, ":party", 706, 1),
				(party_set_slot, ":party", 709, 1),
				(party_set_slot, ":party", 711, 3),
				(party_set_slot, ":party", 712, 2),
				(party_set_slot, ":party", 713, 1),
				(call_script, "script_feudal_lance_manpower_update", ":party", 15),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end),
			(try_for_range, ":party", "p_village_1_1", "p_salt_mine"),
				(call_script, "script_feudal_lance_manpower_update", ":party", 12),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end),
			(try_for_range, ":party", "p_castle_1_1", "p_village_1_1"),
				(call_script, "script_feudal_lance_manpower_update", ":party", 17),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end)
		]),

	(72.0,
		[
			(try_for_range, ":number", 3156, 3177),
				(store_random_in_range, ":random_in_range_town_1_1_castle_1_1", "p_town_1_1", "p_castle_1_1"),
				(troop_set_slot, ":number", slot_troop_cur_center, ":random_in_range_town_1_1_castle_1_1"),
				(troop_clear_inventory, ":number"),
				(try_begin),
					(is_between, ":number", "trp_trader_hat1", "trp_trader_sword1"),
					(try_for_range, reg0, 0, 30),
						(store_random_in_range, ":random_in_range_sarranid_head_cloth_leather_steppe_cap_a", "itm_sarranid_head_cloth", "itm_leather_steppe_cap_a"),
						(troop_add_item, ":number", ":random_in_range_sarranid_head_cloth_leather_steppe_cap_a"),
					(try_end),
				(else_try),
					(is_between, ":number", "trp_trader_sword1", "trp_trader_helmet1"),
					(try_for_range, reg0, 0, 10),
						(store_random_in_range, ":random_in_range_sarranid_head_cloth_leather_steppe_cap_a", "itm_sword_type_xii", "itm_spatha"),
						(troop_add_item, ":number", ":random_in_range_sarranid_head_cloth_leather_steppe_cap_a"),
					(try_end),
				(else_try),
					(is_between, ":number", "trp_trader_helmet1", "trp_trader_spice1"),
					(try_for_range, reg0, 0, 10),
						(store_random_in_range, ":random_in_range_sarranid_head_cloth_leather_steppe_cap_a", "itm_flat_topped_helmet_a", "itm_bill"),
						(troop_add_item, ":number", ":random_in_range_sarranid_head_cloth_leather_steppe_cap_a"),
					(try_end),
				(else_try),
					(is_between, ":number", "trp_trader_spice1", "trp_trader_silk1"),
					(try_for_range, reg0, 0, 5),
						(troop_add_item, ":number", "itm_spice"),
						(troop_add_item, ":number", "itm_salt"),
					(try_end),
				(else_try),
					(is_between, ":number", "trp_trader_silk1", "trp_maid_1"),
					(try_for_range, reg0, 0, 3),
						(troop_add_item, ":number", "itm_raw_silk"),
						(troop_add_item, ":number", "itm_velvet"),
					(try_end),
				(try_end),
				(store_troop_gold, reg6, ":number"),
				(troop_remove_gold, ":number", reg6),
				(store_random_in_range, ":random_in_range_100_200", 100, 200),
				(call_script, "script_troop_add_gold", ":number", ":random_in_range_100_200"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_set_slot, ":faction", 400, 0),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(call_script, "script_check_if_faction_is_at_war", ":faction"),
				(faction_set_slot, ":faction", 400, reg0),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(store_faction_of_party, ":faction_of_party_party", ":party"),
				(faction_get_slot, ":faction_of_party_party_400", ":faction_of_party_party", 400),
				(party_get_slot, ":party_400", ":party", 400),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(party_get_slot, ":party_town_prosperity", ":party", slot_town_prosperity),
				(assign, reg1, ":party_town_prosperity"),
				(try_begin),
					(eq, ":faction_of_party_party_400", 0),
					(call_script, "script_change_center_prosperity", ":party", 20),
				(try_end),
				(call_script, "script_change_center_prosperity", ":party", 5),
				(store_mul, ":value", ":party_400", -1),
				(call_script, "script_change_center_prosperity", ":party", ":value"),
				(val_add, ":party_town_prosperity", ":value"),
				(neq, ":party_town_lord", "trp_player"),
				(try_begin),
					(le, ":party_town_prosperity", 20),
					(gt, ":party_400", -2),
					(val_sub, ":party_400", 1),
					(party_set_slot, ":party", 400, ":party_400"),
				(else_try),
					(ge, ":party_town_prosperity", 99),
					(lt, ":party_400", 2),
					(val_add, ":party_400", 1),
					(party_set_slot, ":party", 400, ":party_400"),
				(else_try),
					(store_random_in_range, ":random_in_range_0_10", 0, 10),
					(eq, ":random_in_range_0_10", 0),
					(store_random_in_range, ":random_in_range_0_10", -2, 3),
					(party_set_slot, ":party", 400, ":random_in_range_0_10"),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(item_set_slot, "itm_bread", slot_item_food_bonus, 8),
			(item_set_slot, "itm_grain", slot_item_food_bonus, 2),
			(item_set_slot, "itm_smoked_fish", slot_item_food_bonus, 4),
			(item_set_slot, "itm_dried_meat", slot_item_food_bonus, 5),
			(item_set_slot, "itm_cheese", slot_item_food_bonus, 5),
			(item_set_slot, "itm_sausages", slot_item_food_bonus, 5),
			(item_set_slot, "itm_butter", slot_item_food_bonus, 4),
			(item_set_slot, "itm_chicken", slot_item_food_bonus, 8),
			(item_set_slot, "itm_cattle_meat", slot_item_food_bonus, 7),
			(item_set_slot, "itm_pork", slot_item_food_bonus, 6),
			(item_set_slot, "itm_raw_olives", slot_item_food_bonus, 1),
			(item_set_slot, "itm_cabbages", slot_item_food_bonus, 2),
			(item_set_slot, "itm_raw_grapes", slot_item_food_bonus, 3),
			(item_set_slot, "itm_apples", slot_item_food_bonus, 4),
			(item_set_slot, "itm_raw_date_fruit", slot_item_food_bonus, 4),
			(item_set_slot, "itm_honey", slot_item_food_bonus, 6),
			(item_set_slot, "itm_wine", slot_item_food_bonus, 5),
			(item_set_slot, "itm_ale", slot_item_food_bonus, 4)
		]),

]