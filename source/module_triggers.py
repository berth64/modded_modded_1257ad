# -*- coding: utf-8 -*-
from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *

from module_constants import *

####################################################################################################################
#  Each trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Delay interval: Time to wait before applying the consequences of the trigger
#    After its conditions have been evaluated as true.
# 3) Re-arm interval. How much time must pass after applying the consequences of the trigger for the trigger to become active again.
#    You can put the constant ti_once here to make sure that the trigger never becomes active again after it fires once.
# 4) Conditions block (list). This must be a valid operation block. See header_operations.py for reference.
#    Every time the trigger is checked, the conditions block will be executed.
#    If the conditions block returns true, the consequences block will be executed.
#    If the conditions block is empty, it is assumed that it always evaluates to true.
# 5) Consequences block (list). This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################

# Some constants for use below
merchant_inventory_space = 30
num_merchandise_goods = 36



triggers = [
	(0.1, 0.0, ti_once,
		[
			(map_free, 0)
		],

		[
			(dialog_box, "str_tutorial_map1")
		]),

	(0.0, 0.0, 168.0,
		[],

		[
			(call_script, "script_refresh_center_inventories")
		]),

	(0.0, 0.0, 168.0,
		[],

		[
			(call_script, "script_refresh_center_armories")
		]),

	(0.0, 0.0, 168.0,
		[],

		[
			(call_script, "script_refresh_center_weaponsmiths")
		]),

	(0.0, 0.0, 168.0,
		[],

		[
			(call_script, "script_refresh_center_stables")
		]),

	(5.7, 0.0, 0.0,
		[],

		[]),

	(1.0, 0.0, 0.0,
		[
			(check_quest_active, "qst_track_down_bandits"),
			(neg|check_quest_failed, "qst_track_down_bandits"),
			(neg|check_quest_succeeded, "qst_track_down_bandits")
		],

		[
			(quest_get_slot, ":track_down_bandits_target_party", "qst_track_down_bandits", slot_quest_target_party),
			(try_begin),
				(party_is_active, ":track_down_bandits_target_party"),
				(store_faction_of_party, ":faction_of_party_track_down_bandits_target_party", ":track_down_bandits_target_party"),
				(neg|is_between, ":faction_of_party_track_down_bandits_target_party", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(assign, ":value", 8),
				(try_begin),
					(is_currently_night),
					(assign, ":value", 5),
				(try_end),
				(try_for_parties, ":var_4"),
					(gt, ":var_4", "p_spawn_points_end"),
					(store_faction_of_party, ":faction_of_party_var_4", ":var_4"),
					(is_between, ":faction_of_party_var_4", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_4_track_down_bandits_target_party", ":var_4", ":track_down_bandits_target_party"),
					(lt, ":distance_to_party_from_party_var_4_track_down_bandits_target_party", ":value"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(str_store_party_name, 4, ":var_4"),
						(display_message, "@{!}DEBUG -- Wanted bandits spotted by {s4}"),
					(try_end),
					(call_script, "script_get_closest_center", ":track_down_bandits_target_party"),
					(assign, ":var_7", reg0),
					(call_script, "script_add_log_entry", 70, ":var_4", ":var_7", ":track_down_bandits_target_party", -1),
				(try_end),
			(else_try),
				(display_message, "str_bandits_eliminated_by_another"),
				(call_script, "script_abort_quest", "qst_track_down_bandits", 0),
			(try_end)
		]),

	(2.0, 0.0, 0.0,
		[
			(store_random_party_of_template, reg2, "pt_prisoner_train_party"),
			(party_is_in_any_town, reg2)
		],

		[
			(store_faction_of_party, ":faction_of_party_reg2", reg2),
			(call_script, "script_cf_select_random_walled_center_with_faction", ":faction_of_party_reg2", -1),
			(party_set_ai_behavior, reg2, 1),
			(party_set_ai_object, reg2, reg0),
			(party_set_flags, reg2, 65536, 0)
		]),

	(4.0, 0.0, 0.0,
		[
			(eq, "$caravan_escort_state", 1),
			(assign, ":value", 0),
			(try_begin),
				(neg|party_is_active, "$caravan_escort_party_id"),
				(assign, ":value", 1),
			(else_try),
				(get_party_ai_object, ":party_ai_object_caravan_escort_party_id", "$caravan_escort_party_id"),
				(neq, ":party_ai_object_caravan_escort_party_id", "$caravan_escort_destination_town"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1)
		],

		[
			(assign, "$caravan_escort_state", 0)
		]),

	(1.5, 0.0, 0.0,
		[],

		[]),

	(1.0, 0.0, 0.0,
		[],

		[
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(try_begin),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 10),
					(call_script, "script_create_kingdom_party_if_below_limit", ":faction", 7),
				(try_end),
				(try_begin),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 10),
					(call_script, "script_create_kingdom_party_if_below_limit", ":faction", 11),
				(try_end),
				(try_begin),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 10),
					(call_script, "script_create_kingdom_party_if_below_limit", ":faction", 12),
				(try_end),
			(try_end)
		]),

	(0.2, 0.0, 0.0,
		[
			(check_quest_active, "qst_incriminate_loyal_commander"),
			(neg|check_quest_concluded, "qst_incriminate_loyal_commander"),
			(quest_slot_eq, "qst_incriminate_loyal_commander", slot_quest_current_state, 2),
			(quest_get_slot, ":incriminate_loyal_commander_target_center", "qst_incriminate_loyal_commander", slot_quest_target_center),
			(quest_get_slot, ":incriminate_loyal_commander_target_party", "qst_incriminate_loyal_commander", slot_quest_target_party),
			(try_begin),
				(neg|party_is_active, ":incriminate_loyal_commander_target_party"),
				(quest_set_slot, "qst_incriminate_loyal_commander", slot_quest_current_state, 3),
				(call_script, "script_fail_quest", "qst_incriminate_loyal_commander"),
			(else_try),
				(party_is_in_town, ":incriminate_loyal_commander_target_party", ":incriminate_loyal_commander_target_center"),
				(remove_party, ":incriminate_loyal_commander_target_party"),
				(quest_set_slot, "qst_incriminate_loyal_commander", slot_quest_current_state, 3),
				(quest_get_slot, ":incriminate_loyal_commander_object_troop", "qst_incriminate_loyal_commander", slot_quest_object_troop),
				(assign, ":var_4", 0),
				(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(faction_slot_eq, ":faction", slot_faction_state, 0),
					(neq, ":faction", "fac_player_supporters_faction"),
					(neg|quest_slot_eq, "qst_incriminate_loyal_commander", slot_quest_target_faction, ":faction"),
					(val_add, ":var_4", 1),
				(try_end),
				(try_begin),
					(gt, ":var_4", 0),
					(store_random_in_range, ":random_in_range_0_var_4", 0, ":var_4"),
					(assign, ":value", -1),
					(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(eq, ":value", -1),
						(faction_slot_eq, ":faction", slot_faction_state, 0),
						(neq, ":faction", "fac_player_supporters_faction"),
						(neg|quest_slot_eq, "qst_incriminate_loyal_commander", slot_quest_target_faction, ":faction"),
						(val_sub, ":random_in_range_0_var_4", 1),
						(lt, ":random_in_range_0_var_4", 0),
						(assign, ":value", ":faction"),
					(try_end),
				(try_end),
				(try_begin),
					(gt, ":value", 0),
					(call_script, "script_change_troop_faction", ":incriminate_loyal_commander_object_troop", ":value"),
				(else_try),
					(call_script, "script_change_troop_faction", ":incriminate_loyal_commander_object_troop", "fac_robber_knights"),
				(try_end),
				(call_script, "script_succeed_quest", "qst_incriminate_loyal_commander"),
			(try_end)
		],

		[]),

	(0.2, 0.0, 0.0,
		[
			(check_quest_active, "qst_bring_back_runaway_serfs"),
			(neg|check_quest_concluded, "qst_bring_back_runaway_serfs"),
			(quest_get_slot, ":bring_back_runaway_serfs_object_center", "qst_bring_back_runaway_serfs", slot_quest_object_center),
			(quest_get_slot, ":bring_back_runaway_serfs_target_center", "qst_bring_back_runaway_serfs", slot_quest_target_center),
			(try_begin),
				(party_is_active, "$qst_bring_back_runaway_serfs_party_1"),
				(try_begin),
					(party_is_in_town, "$qst_bring_back_runaway_serfs_party_1", ":bring_back_runaway_serfs_target_center"),
					(remove_party, "$qst_bring_back_runaway_serfs_party_1"),
					(val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
				(else_try),
					(party_is_in_town, "$qst_bring_back_runaway_serfs_party_1", ":bring_back_runaway_serfs_object_center"),
					(remove_party, "$qst_bring_back_runaway_serfs_party_1"),
					(val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
				(else_try),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_qst_bring_back_runaway_serfs_party_1", "p_main_party", "$qst_bring_back_runaway_serfs_party_1"),
					(gt, ":distance_to_party_from_party_main_party_qst_bring_back_runaway_serfs_party_1", 3),
					(party_set_ai_object, "$qst_bring_back_runaway_serfs_party_1", ":bring_back_runaway_serfs_target_center"),
				(try_end),
			(try_end),
			(try_begin),
				(party_is_active, "$qst_bring_back_runaway_serfs_party_2"),
				(try_begin),
					(party_is_in_town, "$qst_bring_back_runaway_serfs_party_2", ":bring_back_runaway_serfs_target_center"),
					(remove_party, "$qst_bring_back_runaway_serfs_party_2"),
					(val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
				(else_try),
					(party_is_in_town, "$qst_bring_back_runaway_serfs_party_2", ":bring_back_runaway_serfs_object_center"),
					(remove_party, "$qst_bring_back_runaway_serfs_party_2"),
					(val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
				(else_try),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_qst_bring_back_runaway_serfs_party_1", "p_main_party", "$qst_bring_back_runaway_serfs_party_2"),
					(gt, ":distance_to_party_from_party_main_party_qst_bring_back_runaway_serfs_party_1", 3),
					(party_set_ai_object, "$qst_bring_back_runaway_serfs_party_2", ":bring_back_runaway_serfs_target_center"),
				(try_end),
			(try_end),
			(try_begin),
				(party_is_active, "$qst_bring_back_runaway_serfs_party_3"),
				(try_begin),
					(party_is_in_town, "$qst_bring_back_runaway_serfs_party_3", ":bring_back_runaway_serfs_target_center"),
					(remove_party, "$qst_bring_back_runaway_serfs_party_3"),
					(val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
				(else_try),
					(party_is_in_town, "$qst_bring_back_runaway_serfs_party_3", ":bring_back_runaway_serfs_object_center"),
					(remove_party, "$qst_bring_back_runaway_serfs_party_3"),
					(val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
				(else_try),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_qst_bring_back_runaway_serfs_party_1", "p_main_party", "$qst_bring_back_runaway_serfs_party_3"),
					(gt, ":distance_to_party_from_party_main_party_qst_bring_back_runaway_serfs_party_1", 3),
					(party_set_ai_object, "$qst_bring_back_runaway_serfs_party_3", ":bring_back_runaway_serfs_target_center"),
				(try_end),
			(try_end),
			(assign, ":var_4", "$qst_bring_back_runaway_serfs_num_parties_returned"),
			(val_add, ":var_4", "$qst_bring_back_runaway_serfs_num_parties_fleed"),
			(ge, ":var_4", 3),
			(try_begin),
				(ge, "$qst_bring_back_runaway_serfs_num_parties_returned", 3),
				(call_script, "script_succeed_quest", "qst_bring_back_runaway_serfs"),
			(else_try),
				(eq, "$qst_bring_back_runaway_serfs_num_parties_returned", 0),
				(call_script, "script_fail_quest", "qst_bring_back_runaway_serfs"),
			(else_try),
				(call_script, "script_conclude_quest", "qst_bring_back_runaway_serfs"),
			(try_end)
		],

		[]),

	(0.5, 0.0, 0.0,
		[
			(check_quest_active, "qst_follow_spy"),
			(eq, "$qst_follow_spy_no_active_parties", 0),
			(quest_get_slot, ":follow_spy_giver_center", "qst_follow_spy", slot_quest_giver_center),
			(quest_get_slot, ":follow_spy_object_center", "qst_follow_spy", slot_quest_object_center),
			(assign, ":value", 0),
			(try_begin),
				(this_or_next|ge, "$qst_follow_spy_run_away", 2),
				(this_or_next|neg|party_is_active, "$qst_follow_spy_spy_party"),
				(neg|party_is_active, "$qst_follow_spy_spy_partners_party"),
			(else_try),
				(eq, "$qst_follow_spy_meeting_state", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_qst_follow_spy_spy_party", "p_main_party", "$qst_follow_spy_spy_party"),
				(try_begin),
					(assign, ":value_2", 3),
					(try_begin),
						(is_currently_night),
						(assign, ":value_2", 1),
					(try_end),
					(le, ":distance_to_party_from_party_main_party_qst_follow_spy_spy_party", ":value_2"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_follow_spy_giver_center", "p_main_party", ":follow_spy_giver_center"),
					(gt, ":distance_to_party_from_party_main_party_follow_spy_giver_center", 1),
					(val_add, "$qst_follow_spy_run_away", 1),
					(try_begin),
						(eq, "$qst_follow_spy_run_away", 2),
						(assign, ":value", 1),
						(display_message, "str_qst_follow_spy_noticed_you"),
					(try_end),
				(else_try),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_qst_follow_spy_spy_party", "$qst_follow_spy_spy_partners_party", "$qst_follow_spy_spy_party"),
					(le, ":distance_to_party_from_party_main_party_qst_follow_spy_spy_party", 1),
					(party_attach_to_party, "$qst_follow_spy_spy_party", "$qst_follow_spy_spy_partners_party"),
					(assign, "$qst_follow_spy_meeting_state", 1),
					(assign, "$qst_follow_spy_meeting_counter", 0),
				(try_end),
			(else_try),
				(eq, "$qst_follow_spy_meeting_state", 1),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_qst_follow_spy_spy_party", "p_main_party", "$qst_follow_spy_spy_partners_party"),
				(try_begin),
					(le, ":distance_to_party_from_party_main_party_qst_follow_spy_spy_party", 1),
					(party_detach, "$qst_follow_spy_spy_party"),
					(val_add, "$qst_follow_spy_run_away", 1),
					(try_begin),
						(eq, "$qst_follow_spy_run_away", 2),
						(assign, ":value", 1),
						(display_message, "str_qst_follow_spy_noticed_you"),
					(try_end),
				(else_try),
					(val_add, "$qst_follow_spy_meeting_counter", 1),
					(gt, "$qst_follow_spy_meeting_counter", 4),
					(party_detach, "$qst_follow_spy_spy_party"),
					(assign, ":value", 1),
					(assign, "$qst_follow_spy_meeting_state", 2),
				(try_end),
			(try_end),
			(try_begin),
				(eq, ":value", 1),
				(party_set_ai_object, "$qst_follow_spy_spy_party", ":follow_spy_giver_center"),
				(party_set_ai_object, "$qst_follow_spy_spy_partners_party", ":follow_spy_object_center"),
				(party_set_ai_behavior, "$qst_follow_spy_spy_party", 1),
				(party_set_ai_behavior, "$qst_follow_spy_spy_partners_party", 1),
				(party_set_flags, "$qst_follow_spy_spy_party", 65536, 0),
				(party_set_flags, "$qst_follow_spy_spy_partners_party", 65536, 0),
			(try_end),
			(assign, ":var_7", 0),
			(try_begin),
				(party_is_active, "$qst_follow_spy_spy_party"),
				(val_add, ":var_7", 1),
				(party_is_in_town, "$qst_follow_spy_spy_party", ":follow_spy_giver_center"),
				(remove_party, "$qst_follow_spy_spy_party"),
				(assign, "$qst_follow_spy_spy_back_in_town", 1),
				(val_sub, ":var_7", 1),
			(try_end),
			(try_begin),
				(party_is_active, "$qst_follow_spy_spy_partners_party"),
				(val_add, ":var_7", 1),
				(party_is_in_town, "$qst_follow_spy_spy_partners_party", ":follow_spy_object_center"),
				(remove_party, "$qst_follow_spy_spy_partners_party"),
				(assign, "$qst_follow_spy_partner_back_in_town", 1),
				(val_sub, ":var_7", 1),
			(try_end),
			(try_begin),
				(eq, "$qst_follow_spy_partner_back_in_town", 1),
				(eq, "$qst_follow_spy_spy_back_in_town", 1),
				(call_script, "script_fail_quest", "qst_follow_spy"),
			(try_end),
			(try_begin),
				(eq, ":var_7", 0),
				(assign, "$qst_follow_spy_no_active_parties", 1),
				(party_count_prisoners_of_type, ":var_8", "p_main_party", "trp_spy"),
				(party_count_prisoners_of_type, ":var_9", "p_main_party", "trp_spy_partner"),
				(gt, ":var_8", 0),
				(gt, ":var_9", 0),
				(call_script, "script_succeed_quest", "qst_follow_spy"),
			(try_end)
		],

		[]),

	(168.0, 0.0, 0.0,
		[],

		[
			(val_mul, "$debt_to_merchants_guild", 101),
			(val_div, "$debt_to_merchants_guild", 100)
		]),

	(0.1, 0.0, 0.1,
		[
			(check_quest_active, "qst_escort_merchant_caravan"),
			(eq, "$escort_merchant_caravan_mode", 1)
		],

		[
			(quest_get_slot, ":escort_merchant_caravan_target_party", "qst_escort_merchant_caravan", slot_quest_target_party),
			(try_begin),
				(party_is_active, ":escort_merchant_caravan_target_party"),
				(party_set_ai_behavior, ":escort_merchant_caravan_target_party", 0),
				(party_set_flags, ":escort_merchant_caravan_target_party", 65536, 0),
			(try_end)
		]),

	(0.1, 0.0, 0.1,
		[
			(check_quest_active, "qst_escort_merchant_caravan"),
			(eq, "$escort_merchant_caravan_mode", 0)
		],

		[
			(quest_get_slot, ":escort_merchant_caravan_target_party", "qst_escort_merchant_caravan", slot_quest_target_party),
			(try_begin),
				(party_is_active, ":escort_merchant_caravan_target_party"),
				(party_set_ai_behavior, ":escort_merchant_caravan_target_party", 10),
				(party_set_flags, ":escort_merchant_caravan_target_party", 65536, 0),
				(party_set_ai_object, ":escort_merchant_caravan_target_party", "p_main_party"),
			(try_end)
		]),

	(0.1, 0.0, 0.0,
		[
			(check_quest_active, "qst_escort_merchant_caravan"),
			(quest_get_slot, ":escort_merchant_caravan_target_party", "qst_escort_merchant_caravan", slot_quest_target_party),
			(neg|party_is_active, ":escort_merchant_caravan_target_party")
		],

		[
			(call_script, "script_abort_quest", "qst_escort_merchant_caravan", 2)
		]),

	(0.3, 0.0, 1.1,
		[
			(check_quest_active, "qst_troublesome_bandits"),
			(neg|check_quest_failed, "qst_troublesome_bandits"),
			(store_num_parties_destroyed, ":num_parties_destroyed_troublesome_bandits", "pt_troublesome_bandits"),
			(lt, "$qst_troublesome_bandits_eliminated", ":num_parties_destroyed_troublesome_bandits"),
			(store_num_parties_destroyed_by_player, ":num_parties_destroyed_by_player_troublesome_bandits", "pt_troublesome_bandits"),
			(eq, ":num_parties_destroyed_by_player_troublesome_bandits", "$qst_troublesome_bandits_eliminated_by_player")
		],

		[
			(display_message, "str_bandits_eliminated_by_another"),
			(call_script, "script_abort_quest", "qst_troublesome_bandits", 2)
		]),

	(0.3, 0.0, 1.1,
		[
			(check_quest_active, "qst_troublesome_bandits"),
			(neg|check_quest_succeeded, "qst_troublesome_bandits"),
			(store_num_parties_destroyed, ":num_parties_destroyed_troublesome_bandits", "pt_troublesome_bandits"),
			(lt, "$qst_troublesome_bandits_eliminated", ":num_parties_destroyed_troublesome_bandits"),
			(store_num_parties_destroyed_by_player, ":num_parties_destroyed_by_player_troublesome_bandits", "pt_troublesome_bandits"),
			(neq, ":num_parties_destroyed_by_player_troublesome_bandits", "$qst_troublesome_bandits_eliminated_by_player")
		],

		[
			(call_script, "script_succeed_quest", "qst_troublesome_bandits")
		]),

	(1.0, 0.0, 0.0,
		[
			(check_quest_active, "qst_kidnapped_girl"),
			(quest_get_slot, ":kidnapped_girl_target_party", "qst_kidnapped_girl", slot_quest_target_party),
			(party_is_active, ":kidnapped_girl_target_party"),
			(party_is_in_any_town, ":kidnapped_girl_target_party"),
			(remove_party, ":kidnapped_girl_target_party")
		],

		[]),

	(0.0, 0.0, 336.0,
		[
			(try_for_range, ":troop", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
				(troop_set_slot, ":troop", slot_troop_cur_center, 0),
				(neq, ":troop", "$supported_pretender"),
				(troop_get_slot, ":troop_original_faction", ":troop", slot_troop_original_faction),
				(faction_slot_eq, ":troop_original_faction", slot_faction_state, 0),
				(faction_slot_eq, ":troop_original_faction", slot_faction_has_rebellion_chance, 1),
				(neg|troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(try_for_range, ":unused", 0, 30),
					(troop_slot_eq, ":troop", slot_troop_cur_center, 0),
					(store_random_in_range, ":random_in_range_town_1_1_castle_1_1", "p_town_1_1", "p_castle_1_1"),
					(store_faction_of_party, ":faction_of_party_random_in_range_town_1_1_castle_1_1", ":random_in_range_town_1_1_castle_1_1"),
					(store_relation, ":relation_faction_of_party_random_in_range_town_1_1_castle_1_1_troop_original_faction", ":faction_of_party_random_in_range_town_1_1_castle_1_1", ":troop_original_faction"),
					(le, ":relation_faction_of_party_random_in_range_town_1_1_castle_1_1_troop_original_faction", 0),
					(troop_set_slot, ":troop", slot_troop_cur_center, ":random_in_range_town_1_1_castle_1_1"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(str_store_troop_name, 4, ":troop"),
						(str_store_party_name, 5, ":random_in_range_town_1_1_castle_1_1"),
						(display_message, "@{!}{s4} is in {s5}"),
					(try_end),
				(try_end),
			(try_end)
		],

		[]),

	(360.0, 0.0, 0.0,
		[
			(call_script, "script_update_companion_candidates_in_taverns")
		],

		[]),

	(0.0, 0.0, 24.0,
		[],

		[
			(assign, ":var_1", 0),
			(assign, ":var_2", 100),
			(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
				(main_party_has_troop, ":troop"),
				(val_add, ":var_1", 1),
			(try_end),
			(val_sub, ":var_2", ":var_1"),
			(store_skill_level, ":skill_level_persuasion_player", "skl_persuasion", "trp_player"),
			(val_add, ":var_2", ":skill_level_persuasion_player"),
			(assign, reg7, ":var_2"),
			(try_begin),
				(gt, "$personality_clash_after_24_hrs", 0),
				(eq, "$disable_npc_complaints", 0),
				(try_begin),
					(troop_get_slot, ":personality_clash_after_24_hrs_personalityclash_object", "$personality_clash_after_24_hrs", slot_troop_personalityclash_object),
					(main_party_has_troop, "$personality_clash_after_24_hrs"),
					(main_party_has_troop, ":personality_clash_after_24_hrs_personalityclash_object"),
					(assign, "$npc_with_personality_clash", "$personality_clash_after_24_hrs"),
				(try_end),
				(assign, "$personality_clash_after_24_hrs", 0),
			(try_end),
			(try_for_range, ":troop_2", "trp_npc1", "trp_kingdom_1_lord"),
				(troop_set_slot, ":troop_2", slot_troop_turned_down_twice, 0),
				(try_begin),
					(troop_slot_eq, ":troop_2", slot_troop_met, 1),
					(troop_set_slot, ":troop_2", slot_troop_met_previously, 1),
				(try_end),
				(troop_get_slot, ":troop_2_occupation", ":troop_2", slot_troop_occupation),
				(try_begin),
					(eq, ":troop_2_occupation", 11),
					(troop_get_slot, ":troop_2_return_renown", ":troop_2", slot_troop_return_renown),
					(str_store_troop_name, 31, ":troop_2"),
					(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
					(assign, reg4, ":player_renown"),
					(assign, reg5, ":troop_2_return_renown"),
					(gt, ":player_renown", ":troop_2_return_renown"),
					(troop_set_slot, ":troop_2", slot_troop_personalityclash_penalties, 0),
					(troop_set_slot, ":troop_2", slot_troop_morality_penalties, 0),
					(troop_set_slot, ":troop_2", slot_troop_occupation, 0),
				(try_end),
				(try_begin),
					(troop_slot_ge, ":troop_2", 151, 5),
					(troop_slot_eq, ":troop_2", slot_troop_mission_object, 1),
					(troop_get_slot, ":personality_clash_after_24_hrs_personalityclash_object", ":troop_2", slot_troop_kingsupport_opponent),
					(troop_slot_eq, ":personality_clash_after_24_hrs_personalityclash_object", slot_troop_kingsupport_objection_state, 0),
					(troop_set_slot, ":personality_clash_after_24_hrs_personalityclash_object", slot_troop_kingsupport_objection_state, 1),
					(str_store_troop_name, 3, ":troop_2"),
					(str_store_troop_name, 4, ":personality_clash_after_24_hrs_personalityclash_object"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(display_message, "str_s4_ready_to_voice_objection_to_s3s_mission_if_in_party"),
					(try_end),
				(try_end),
				(try_begin),
					(main_party_has_troop, ":troop_2"),
					(eq, "$disable_npc_complaints", 0),
					(call_script, "script_npc_morale", ":troop_2"),
					(assign, ":var_10", reg0),
					(try_begin),
						(lt, ":var_10", 20),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(val_add, ":var_10", ":random_in_range_0_100"),
						(lt, ":var_10", 20),
						(assign, "$npc_is_quitting", ":troop_2"),
					(try_end),
					(troop_get_slot, ":troop_2_personalityclash_penalties", ":troop_2", slot_troop_personalityclash_penalties),
					(val_mul, ":troop_2_personalityclash_penalties", 90),
					(val_div, ":troop_2_personalityclash_penalties", ":var_2"),
					(troop_set_slot, ":troop_2", slot_troop_personalityclash_penalties, ":troop_2_personalityclash_penalties"),
					(troop_get_slot, ":troop_2_personalityclash_penalties", ":troop_2", slot_troop_morality_penalties),
					(val_mul, ":troop_2_personalityclash_penalties", 90),
					(val_div, ":troop_2_personalityclash_penalties", ":var_2"),
					(troop_set_slot, ":troop_2", slot_troop_morality_penalties, ":troop_2_personalityclash_penalties"),
					(try_begin),
						(this_or_next|troop_slot_ge, ":troop_2", 72, 1),
						(eq, "$disable_npc_complaints", 1),
						(troop_get_slot, ":troop_2_personalityclash_object", ":troop_2", slot_troop_personalityclash_object),
						(main_party_has_troop, ":troop_2_personalityclash_object"),
						(call_script, "script_reduce_companion_morale_for_clash", ":troop_2", ":troop_2_personalityclash_object", 72),
					(try_end),
					(try_begin),
						(this_or_next|troop_slot_ge, ":troop_2", 74, 1),
						(eq, "$disable_npc_complaints", 1),
						(troop_get_slot, ":troop_2_personalityclash_object", ":troop_2", slot_troop_personalityclash2_object),
						(main_party_has_troop, ":troop_2_personalityclash_object"),
						(call_script, "script_reduce_companion_morale_for_clash", ":troop_2", ":troop_2_personalityclash_object", 74),
					(try_end),
					(try_begin),
						(this_or_next|troop_slot_ge, ":troop_2", 76, 1),
						(eq, "$disable_npc_complaints", 1),
						(troop_get_slot, ":troop_2_personalityclash_object", ":troop_2", slot_troop_personalitymatch_object),
						(main_party_has_troop, ":troop_2_personalityclash_object"),
						(troop_get_slot, ":troop_2_personalityclash_penalties", ":troop_2", slot_troop_personalityclash_penalties),
						(val_mul, ":troop_2_personalityclash_penalties", 9),
						(val_div, ":troop_2_personalityclash_penalties", 10),
						(troop_set_slot, ":troop_2", slot_troop_personalityclash_penalties, ":troop_2_personalityclash_penalties"),
					(try_end),
					(try_begin),
						(eq, "$disable_npc_complaints", 0),
						(eq, "$npc_with_personality_clash", 0),
						(eq, "$npc_with_personality_clash_2", 0),
						(eq, "$personality_clash_after_24_hrs", 0),
						(troop_slot_eq, ":troop_2", slot_troop_personalityclash_state, 0),
						(troop_get_slot, ":personality_clash_after_24_hrs_personalityclash_object", ":troop_2", slot_troop_personalityclash_object),
						(main_party_has_troop, ":personality_clash_after_24_hrs_personalityclash_object"),
						(assign, "$personality_clash_after_24_hrs", ":troop_2"),
					(try_end),
					(try_begin),
						(eq, "$npc_with_political_grievance", 0),
						(troop_slot_eq, ":troop_2", slot_troop_kingsupport_objection_state, 1),
						(assign, "$npc_with_political_grievance", ":troop_2"),
					(try_end),
				(else_try),
					(neg|main_party_has_troop, ":troop_2"),
					(eq, ":troop_2_occupation", 5),
					(troop_get_slot, ":troop_2_current_mission", ":troop_2", slot_troop_current_mission),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(str_store_troop_name, 10, ":troop_2"),
						(assign, reg0, ":troop_2_current_mission"),
						(display_message, "@Checking rejoin of {s10} days on mission: {reg0}"),
					(try_end),
					(try_begin),
						(gt, ":troop_2_current_mission", 0),
						(val_sub, ":troop_2_current_mission", 1),
						(troop_set_slot, ":troop_2", slot_troop_current_mission, ":troop_2_current_mission"),
					(else_try),
						(troop_slot_eq, ":troop_2", slot_troop_mission_object, 11),
						(troop_slot_ge, ":troop_2", 162, 1),
						(troop_set_slot, "trp_merc_euro_spearman", slot_troop_recent_offense_time, ":troop_2"),
						(assign, "$npc_to_rejoin_party", "trp_merc_euro_spearman"),
					(else_try),
						(troop_slot_ge, ":troop_2", 152, 1),
						(this_or_next|neg|troop_slot_eq, ":troop_2", slot_troop_mission_object, 8),
						(hero_can_join, ":troop_2"),
						(assign, "$npc_to_rejoin_party", ":troop_2"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(0.5, 0.0, 0.0,
		[
			(eq, "$tom_use_longships", 1)
		],

		[
			(try_for_parties, ":var_1"),
				(neg|is_between, "p_town_1_1", "p_salt_mine"),
				(party_get_template_id, ":template_id_var_1", ":var_1"),
				(neq, ":template_id_var_1", "pt_manor"),
				(gt, ":template_id_var_1", 0),
				(party_get_icon, ":icon_var_1", ":var_1"),
				(try_begin),
					(call_script, "script_cf_is_party_on_water", ":var_1"),
					(neg|is_between, ":icon_var_1", "icon_longship", "icon_bandit_marker"),
					(try_begin),
						(party_slot_eq, ":var_1", 600, 0),
						(party_set_slot, ":var_1", 600, ":icon_var_1"),
					(try_end),
					(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
					(try_begin),
						(eq, ":faction_of_party_var_1", "fac_kingdom_5"),
						(party_set_icon, ":var_1", "icon_longship_poland"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_1"),
						(party_set_icon, ":var_1", "icon_longship_teu"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_2"),
						(party_set_icon, ":var_1", "icon_longship_lithuania"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_3"),
						(party_set_icon, ":var_1", "icon_longship_mongol"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_4"),
						(party_set_icon, ":var_1", "icon_longship_denmark"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_6"),
						(party_set_icon, ":var_1", "icon_longship_hre"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_7"),
						(party_set_icon, ":var_1", "icon_longship_hungary"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_8"),
						(party_set_icon, ":var_1", "icon_longship_novgorod"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_9"),
						(party_set_icon, ":var_1", "icon_longship_england"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_10"),
						(party_set_icon, ":var_1", "icon_longship_france"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_11"),
						(party_set_icon, ":var_1", "icon_longship_norway"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_12"),
						(party_set_icon, ":var_1", "icon_longship_scotland"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_13"),
						(party_set_icon, ":var_1", "icon_longship_ireland"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_14"),
						(party_set_icon, ":var_1", "icon_longship_sweden"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_15"),
						(party_set_icon, ":var_1", "icon_longship_galicia"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_16"),
						(party_set_icon, ":var_1", "icon_longship_portugal"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_17"),
						(party_set_icon, ":var_1", "icon_longship_aragon"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_18"),
						(party_set_icon, ":var_1", "icon_longship_castile"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_19"),
						(party_set_icon, ":var_1", "icon_longship_navarra"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_20"),
						(party_set_icon, ":var_1", "icon_longship_granada"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_papacy"),
						(party_set_icon, ":var_1", "icon_longship_papal"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_22"),
						(party_set_icon, ":var_1", "icon_longship_byzantine"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_23"),
						(party_set_icon, ":var_1", "icon_longship_jerusalem"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_24"),
						(party_set_icon, ":var_1", "icon_longship_sicily"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_25"),
						(party_set_icon, ":var_1", "icon_longship_mamluke"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_26"),
						(party_set_icon, ":var_1", "icon_longship_latin"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_27"),
						(party_set_icon, ":var_1", "icon_longship_ilkhanate"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_28"),
						(party_set_icon, ":var_1", "icon_longship_hafsid"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_29"),
						(party_set_icon, ":var_1", "icon_longship_serbia"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_30"),
						(party_set_icon, ":var_1", "icon_longship_bulgaria"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_kingdom_31"),
						(party_set_icon, ":var_1", "icon_longship_marinid"),
					(else_try),
						(eq, ":faction_of_party_var_1", "fac_outlaws"),
						(party_set_icon, ":var_1", "icon_longship_pirate"),
					(else_try),
						(party_set_icon, ":var_1", "icon_longship"),
					(try_end),
				(else_try),
					(eq, reg0, 0),
					(is_between, ":icon_var_1", "icon_longship", "icon_bandit_marker"),
					(neg|party_slot_eq, ":var_1", 600, 0),
					(party_get_slot, ":icon_var_1", ":var_1", 600),
					(party_set_icon, ":var_1", ":icon_var_1"),
				(try_end),
			(try_end)
		]),

	(24.0, 0.0, 288.0,
		[],

		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(try_begin),
				(eq, "$cheat_mode", 1),
				(assign, reg0, "$g_player_chamberlain"),
				(display_message, "@{!}DEBUG : chamberlain: {reg0}"),
			(try_end),
			(assign, ":value_2", 0),
			(try_begin),
				(eq, "$g_player_chamberlain", 0),
				(assign, ":value_2", 1),
			(else_try),
				(neq, "$g_player_chamberlain", -1),
				(neq, "$g_player_chamberlain", "trp_dplmc_chamberlain"),
				(assign, ":value_2", 1),
			(try_end),
			(try_begin),
				(eq, ":value_2", 1),
				(call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_chamberlain", 0, 0),
			(try_end)
		]),

	(24.0, 0.0, 312.0,
		[],

		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(try_begin),
				(eq, "$cheat_mode", 1),
				(assign, reg0, "$g_player_constable"),
				(display_message, "@{!}DEBUG : constable: {reg0}"),
			(try_end),
			(assign, ":value_2", 0),
			(try_begin),
				(eq, "$g_player_constable", 0),
				(assign, ":value_2", 1),
			(else_try),
				(neq, "$g_player_constable", -1),
				(neq, "$g_player_constable", "trp_dplmc_constable"),
				(assign, ":value_2", 1),
			(try_end),
			(try_begin),
				(eq, ":value_2", 1),
				(call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_constable", 0, 0),
			(try_end)
		]),

	(24.0, 0.0, 336.0,
		[],

		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1_1", "p_castle_1_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(try_begin),
				(eq, "$cheat_mode", 1),
				(assign, reg0, "$g_player_chancellor"),
				(display_message, "@{!}DEBUG : chancellor: {reg0}"),
			(try_end),
			(assign, ":value_2", 0),
			(try_begin),
				(eq, "$g_player_chancellor", 0),
				(assign, ":value_2", 1),
			(else_try),
				(neq, "$g_player_chancellor", -1),
				(neq, "$g_player_chancellor", "trp_dplmc_chancellor"),
				(assign, ":value_2", 1),
			(try_end),
			(try_begin),
				(eq, ":value_2", 1),
				(call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_chancellor", 0, 0),
			(try_end)
		]),

	(0.0, 0.0, 0.0,
		[
			(eq, "$freelancer_state", 1),
			(gt, "$enlisted_party", 0),
			(neg|party_is_active, "$enlisted_party")
		],

		[
			(assign, "$freelancer_state", 0),
			(call_script, "script_freelancer_detach_party"),
			(call_script, "script_party_restore"),
			(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
			(try_for_range_backwards, ":var_2", 0, ":num_companion_stacks_main_party"),
				(party_stack_get_troop_id, ":party_stack_troop_id_main_party_var_2", "p_main_party", ":var_2"),
				(neg|troop_is_hero, ":party_stack_troop_id_main_party_var_2"),
				(party_stack_get_size, ":party_stack_size_main_party_var_2", "p_main_party", ":var_2"),
				(party_remove_members, "p_main_party", ":party_stack_troop_id_main_party_var_2", ":party_stack_size_main_party_var_2"),
			(try_end),
			(store_faction_of_troop, ":faction_of_troop_enlisted_lord", "$enlisted_lord"),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, ":faction_of_troop_enlisted_lord", ":faction"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(call_script, "script_set_player_relation_with_faction", ":faction", 0),
			(try_end),
			(assign, "$g_encountered_party", "$g_enemy_party"),
			(jump_to_menu, "mnu_captivity_start_wilderness")
		]),

	(0.0, 0.0, 0.0,
		[
			(eq, "$freelancer_state", 1),
			(try_begin),
				(party_slot_ge, "p_freelancer_party_backup", 68, 1),
				(map_free),
				(party_set_slot, "p_freelancer_party_backup", slot_party_last_in_combat, 0),
				(party_get_num_attached_parties, ":num_attached_parties_main_party", "p_main_party"),
				(try_for_range_backwards, ":var_2", 0, ":num_attached_parties_main_party"),
					(party_get_attached_party_with_rank, ":attached_party_with_rank_main_party_var_2", "p_main_party", ":var_2"),
					(party_detach, ":attached_party_with_rank_main_party_var_2"),
				(try_end),
			(try_end),
			(party_get_battle_opponent, ":battle_opponent_l_enlisted_party", "$enlisted_party"),
			(gt, ":battle_opponent_l_enlisted_party", 0),
			(store_troop_health, ":troop_health_player", "trp_player"),
			(ge, ":troop_health_player", 50)
		],

		[
			(jump_to_menu, "mnu_world_map_soldier")
		]),

	(1.0, 0.0, 0.0,
		[
			(eq, "$freelancer_state", 0),
			(gt, "$enlisted_party", 0),
			(neg|party_is_active, "$enlisted_party"),
			(store_faction_of_troop, ":faction_of_troop_enlisted_lord", "$enlisted_lord"),
			(store_relation, ":relation_player_supporters_faction_faction_of_troop_enlisted_lord", "fac_player_supporters_faction", ":faction_of_troop_enlisted_lord"),
			(lt, ":relation_player_supporters_faction_faction_of_troop_enlisted_lord", 0),
			(party_get_attached_party_with_rank, ":attached_party_with_rank_main_party_0", "p_main_party", 0),
			(eq, "p_temp_party_2", ":attached_party_with_rank_main_party_0")
		],

		[
			(assign, "$enlisted_party", -1),
			(party_detach, "p_temp_party_2"),
			(store_skill_level, ":skill_level_leadership_player", "skl_leadership", "trp_player"),
			(store_skill_level, ":skill_level_persuasion_player", "skl_persuasion", "trp_player"),
			(store_add, ":value", ":skill_level_persuasion_player", ":skill_level_leadership_player"),
			(val_add, ":value", 10),
			(store_random_in_range, ":random_in_range_0_value", 0, ":value"),
			(try_begin),
				(is_between, ":random_in_range_0_value", 0, 5),
				(call_script, "script_party_calculate_strength", "p_main_party", 0),
				(assign, ":var_5", reg0),
				(call_script, "script_party_calculate_strength", "p_temp_party_2", 0),
				(assign, ":var_6", reg0),
				(ge, ":var_6", ":var_5"),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_temp_party_2", "p_temp_party_2"),
				(try_for_range, ":localvariable", 0, ":num_prisoner_stacks_temp_party_2"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_temp_party_2_localvariable", "p_temp_party_2", ":localvariable"),
					(party_prisoner_stack_get_size, ":party_prisoner_stack_size_temp_party_2_localvariable", "p_temp_party_2", ":localvariable"),
					(party_remove_prisoners, "p_temp_party_2", ":party_prisoner_stack_troop_id_temp_party_2_localvariable", ":party_prisoner_stack_size_temp_party_2_localvariable"),
				(try_end),
				(dialog_box, "@The released prisoners were not be trusted and they are preparing to attack you!", "@Warning!"),
				(start_encounter, "p_temp_party_2"),
				(change_screen_map),
			(else_try),
				(is_between, ":random_in_range_0_value", 5, 10),
				(dialog_box, "@The released prisoners scattered as soon as the battle finished. You will not be seeing them again.", "@Notice!"),
				(party_clear, "p_temp_party_2"),
			(else_try),
				(dialog_box, "@The released prisoners have remained loyal and will join your party", "@Notice!"),
				(party_get_num_companion_stacks, ":num_prisoner_stacks_temp_party_2", "p_temp_party_2"),
				(try_for_range, ":localvariable", 0, ":num_prisoner_stacks_temp_party_2"),
					(party_stack_get_troop_id, ":party_prisoner_stack_troop_id_temp_party_2_localvariable", "p_temp_party_2", ":localvariable"),
					(party_stack_get_size, ":party_prisoner_stack_size_temp_party_2_localvariable", "p_temp_party_2", ":localvariable"),
					(party_add_members, "p_main_party", ":party_prisoner_stack_troop_id_temp_party_2_localvariable", ":party_prisoner_stack_size_temp_party_2_localvariable"),
				(try_end),
				(party_clear, "p_temp_party_2"),
			(try_end)
		]),

	(0.0, 0.0, 0.0,
		[
			(eq, "$freelancer_state", 1),
			(key_clicked, 224),
			(set_fixed_point_multiplier, 1000),
			(mouse_get_position, 0),
			(position_get_y, ":position_y_0", 0),
			(gt, ":position_y_0", 50)
		],

		[
			(jump_to_menu, "mnu_world_map_soldier"),
			(rest_for_hours_interactive, 9999, 4, 0)
		]),

	(24.0, 0.0, 0.0,
		[
			(eq, "$freelancer_state", 2)
		],

		[
			(troop_get_slot, ":player_current_mission", "trp_player", slot_troop_current_mission),
			(try_begin),
				(gt, ":player_current_mission", 5),
				(val_sub, ":player_current_mission", 1),
				(troop_set_slot, "trp_player", slot_troop_current_mission, ":player_current_mission"),
			(else_try),
				(is_between, ":player_current_mission", 1, 5),
				(assign, reg0, ":player_current_mission"),
				(display_message, "@You have {reg0} days left till you are declared as a deserter!"),
				(val_sub, ":player_current_mission", 1),
				(troop_set_slot, "trp_player", slot_troop_current_mission, ":player_current_mission"),
			(else_try),
				(eq, ":player_current_mission", 0),
				(call_script, "script_event_player_deserts"),
				(display_message, "@You have now been declared as a deserter!"),
				(call_script, "script_desert_order"),
			(try_end)
		]),

	(1.0, 96.0, 0.0,
		[
			(eq, "$crusader_state", 0),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "$crusader_faction", "$crusade_target_faction", 1),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, ":faction", "$crusader_faction"),
				(try_begin),
					(this_or_next|faction_slot_eq, ":faction", 102, 0),
					(faction_slot_eq, ":faction", 102, 1),
					(set_relation, ":faction", "fac_crusade", 10),
				(else_try),
					(set_relation, ":faction", "fac_crusade", -50),
				(try_end),
			(try_end),
			(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
				(store_faction_of_party, ":faction", ":party"),
				(eq, "$crusader_faction", ":faction"),
				(assign, "$crusade_start", ":party"),
				(store_num_parties_of_template, ":num_parties_of_template_crusaders", "pt_crusaders"),
				(lt, ":num_parties_of_template_crusaders", 1),
				(set_spawn_radius, 5),
				(spawn_around_party, "$crusade_start", "pt_crusaders"),
				(assign, ":var_4", reg0),
				(assign, "$crusader_party_id", reg0),
				(party_set_ai_behavior, ":var_4", 0),
				(str_store_party_name, 1, ":party"),
				(str_store_faction_name, 2, "$crusade_target_faction"),
				(display_message, "@Crusaders are going to gather near {s1} the start their crusade against {s2}."),
				(assign, ":party", -1),
			(try_end)
		],

		[
			(try_begin),
				(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(eq, ":faction_of_party_party", "$crusade_target_faction"),
					(assign, "$crusade_target", ":party"),
				(try_end),
				(str_store_faction_name, 1, "$crusade_target_faction"),
				(display_message, "@Crusade against {s1} has started!"),
				(assign, "$crusader_state", 1),
				(call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
			(try_end)
		]),

	(1.0, 0.0, 0.0,
		[
			(eq, "$crusader_state", 0),
			(neq, "$crusader_party_id", -1)
		],

		[
			(try_begin),
				(eq, "$crusader_faction", "fac_player_supporters_faction"),
				(party_get_slot, ":crusade_start_center_original_faction", "$crusade_start", slot_center_original_faction),
				(faction_get_slot, ":crusade_start_center_original_faction_reinforcements_a", ":crusade_start_center_original_faction", slot_faction_reinforcements_a),
				(faction_get_slot, ":crusade_start_center_original_faction_reinforcements_b", ":crusade_start_center_original_faction", slot_faction_reinforcements_b),
				(faction_get_slot, ":crusade_start_center_original_faction_reinforcements_b_2", ":crusade_start_center_original_faction", slot_faction_reinforcements_b),
			(else_try),
				(faction_get_slot, ":crusade_start_center_original_faction_reinforcements_a", "$crusader_faction", slot_faction_reinforcements_a),
				(faction_get_slot, ":crusade_start_center_original_faction_reinforcements_b", "$crusader_faction", slot_faction_reinforcements_b),
				(faction_get_slot, ":crusade_start_center_original_faction_reinforcements_b_2", "$crusader_faction", slot_faction_reinforcements_b),
			(try_end),
			(store_random_in_range, ":random_in_range_0_4", 0, 4),
			(try_begin),
				(eq, ":random_in_range_0_4", 0),
				(party_add_template, "$crusader_party_id", ":crusade_start_center_original_faction_reinforcements_a"),
			(else_try),
				(eq, ":random_in_range_0_4", 1),
				(party_add_template, "$crusader_party_id", ":crusade_start_center_original_faction_reinforcements_b"),
			(else_try),
				(eq, ":random_in_range_0_4", 2),
				(party_add_template, "$crusader_party_id", ":crusade_start_center_original_faction_reinforcements_b_2"),
			(else_try),
				(store_random_in_range, ":random_in_range_0_4", 0, 3),
				(try_begin),
					(eq, ":random_in_range_0_4", 0),
					(party_add_template, "$crusader_party_id", "pt_teutonic_reinforcements_c"),
				(else_try),
					(eq, ":random_in_range_0_4", 1),
					(party_add_template, "$crusader_party_id", "pt_templar_reinforcements_c"),
				(else_try),
					(party_add_template, "$crusader_party_id", "pt_hospitaller_reinforcements_c"),
				(try_end),
			(try_end)
		]),

	(1.0, 0.0, 0.0,
		[
			(eq, "$crusader_state", 1)
		],

		[
			(try_begin),
				(store_num_parties_of_template, ":num_parties_of_template_crusaders", "pt_crusaders"),
				(lt, ":num_parties_of_template_crusaders", 1),
				(assign, "$crusader_faction", -5),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusade_start", 0),
				(assign, "$crusade_target", 0),
				(assign, "$crusade_target_faction", 0),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusader_state", -1),
				(display_message, "@Crusaders have been defeated!"),
			(else_try),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_crusader_party_id_crusade_target", "$crusader_party_id", "$crusade_target"),
				(lt, ":distance_to_party_from_party_crusader_party_id_crusade_target", 3),
				(store_current_hours, ":current_hours"),
				(party_set_slot, "$crusade_target", slot_center_is_besieged_by, "$crusader_party_id"),
				(party_set_slot, "$crusade_target", slot_center_siege_begin_hours, ":current_hours"),
				(call_script, "script_update_faction_notes", "$crusade_target_faction"),
				(display_message, "@Crusaders have reached their target!"),
				(assign, "$crusader_state", 2),
			(else_try),
				(ge, ":distance_to_party_from_party_crusader_party_id_crusade_target", 3),
				(call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
			(try_end)
		]),

	(1.0, 24.0, 0.0,
		[
			(eq, "$crusader_state", 2)
		],

		[
			(try_begin),
				(store_num_parties_of_template, ":num_parties_of_template_crusaders", "pt_crusaders"),
				(lt, ":num_parties_of_template_crusaders", 1),
				(assign, "$crusader_faction", -5),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusade_start", 0),
				(assign, "$crusade_target", 0),
				(assign, "$crusade_target_faction", 0),
				(assign, "$crusader_state", -1),
				(display_message, "@Crusaders have been defeated!"),
			(else_try),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_crusader_party_id_crusade_target", "$crusader_party_id", "$crusade_target"),
				(lt, ":distance_to_party_from_party_crusader_party_id_crusade_target", 5),
				(call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
				(party_set_ai_behavior, "$crusader_party_id", 4),
				(party_set_ai_object, "$crusader_party_id", "$crusade_target"),
				(party_set_flags, "$crusader_party_id", 65536, 1),
				(party_set_slot, "$crusader_party_id", slot_party_ai_substate, 1),
				(display_message, "@Crusaders have besieged their target!"),
				(assign, "$crusader_state", 3),
			(else_try),
				(assign, "$crusader_state", 1),
				(party_set_slot, "$crusade_target", slot_center_is_besieged_by, "$crusader_party_id"),
				(party_get_slot, ":crusade_target_center_is_besieged_by", "$crusade_target", slot_center_is_besieged_by),
				(eq, ":crusade_target_center_is_besieged_by", "$crusader_party_id"),
				(party_set_slot, "$crusade_target", slot_center_is_besieged_by, -1),
			(try_end)
		]),

	(1.0, 0.0, 0.0,
		[
			(eq, "$crusader_state", 3)
		],

		[
			(try_begin),
				(store_num_parties_of_template, ":num_parties_of_template_crusaders", "pt_crusaders"),
				(lt, ":num_parties_of_template_crusaders", 1),
				(assign, "$crusader_faction", -5),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusade_start", 0),
				(assign, "$crusade_target", 0),
				(assign, "$crusade_target_faction", 0),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusader_state", -1),
				(display_message, "@Crusaders have been defeated!"),
			(else_try),
				(assign, ":value", 0),
				(try_for_range, ":party", "p_town_1_1", "p_village_1_1"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(eq, ":faction_of_party_party", "fac_crusade"),
					(try_begin),
						(eq, ":party", "p_town_21_1"),
						(call_script, "script_give_center_to_faction_aux", "p_town_21_1", "fac_papacy"),
						(faction_set_slot, "fac_papacy", slot_faction_state, 0),
						(faction_set_slot, "fac_papacy", slot_faction_leader, "trp_pope"),
						(call_script, "script_give_center_to_lord", "p_town_21_1", "trp_pope", 1),
						(party_set_slot, "p_town_21_1", 255, 0),
						(assign, ":value", 1),
					(else_try),
						(eq, ":party", "p_town_25_5"),
						(call_script, "script_give_center_to_faction_aux", "p_town_25_5", "fac_kingdom_23"),
						(faction_set_slot, "fac_kingdom_23", slot_faction_state, 0),
						(faction_set_slot, "fac_kingdom_23", slot_faction_leader, "trp_kingdom_23_lord"),
						(call_script, "script_give_center_to_lord", "p_town_25_5", "trp_kingdom_23_lord", 1),
						(party_set_slot, "p_town_25_5", 255, 0),
						(assign, ":value", 1),
					(else_try),
						(call_script, "script_give_center_to_faction_aux", ":party", "$crusader_faction"),
						(try_begin),
							(eq, "$players_kingdom", "$crusader_faction"),
							(call_script, "script_give_center_to_lord", ":party", "trp_player", 1),
						(else_try),
							(call_script, "script_cf_get_random_lord_except_king_with_faction", "$crusader_faction"),
							(gt, reg0, -1),
							(call_script, "script_give_center_to_lord", ":party", reg0, 1),
						(try_end),
						(assign, ":value", 1),
					(try_end),
				(try_end),
				(eq, ":value", 1),
				(party_leave_cur_battle, "$crusader_party_id"),
				(remove_party, "$crusader_party_id"),
				(assign, "$crusader_faction", -5),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusade_start", 0),
				(assign, "$crusade_target", 0),
				(assign, "$crusade_target_faction", 0),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusader_state", -1),
				(display_message, "@Crusade ended succesfully!"),
			(else_try),
				(neq, "$crusader_party_id", -1),
				(store_faction_of_party, ":faction_of_party_party", "$crusade_target"),
				(neq, ":faction_of_party_party", "$crusade_target_faction"),
				(display_message, "@Crusaders disperse, because someone else conquered the center..."),
				(party_leave_cur_battle, "$crusader_party_id"),
				(remove_party, "$crusader_party_id"),
				(assign, "$crusader_faction", -5),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusade_start", 0),
				(assign, "$crusade_target", 0),
				(assign, "$crusade_target_faction", 0),
				(assign, "$crusader_party_id", -1),
				(assign, "$crusader_state", -1),
			(else_try),
				(call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
			(try_end)
		]),

	(24.0, 0.0, 0.0,
		[
			(eq, "$crusader_state", -1),
			(store_random_in_range, reg0, 0, 100),
			(eq, reg0, 0)
		],

		[
			(try_for_range, ":number", 0, 40),
				(troop_set_slot, "trp_temp_lord", ":number", -1),
			(try_end),
			(assign, reg0, 0),
			(try_for_range, ":number", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, ":number", "fac_player_supporters_faction"),
				(faction_slot_eq, ":number", slot_faction_state, 0),
				(faction_slot_eq, ":number", 102, 0),
				(troop_set_slot, "trp_temp_lord", reg0, ":number"),
				(val_add, reg0, 1),
			(try_end),
			(gt, reg0, 0),
			(store_random_in_range, ":random_in_range_0_reg0", 0, reg0),
			(troop_get_slot, ":number", "trp_temp_lord", ":random_in_range_0_reg0"),
			(assign, "$crusader_state", 0),
			(assign, "$crusader_faction", ":number"),
			(try_for_range, ":number", 0, 40),
				(troop_set_slot, "trp_temp_lord", ":number", -1),
			(try_end),
			(assign, reg0, 0),
			(try_for_range, ":number", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":number", slot_faction_state, 0),
				(neg|faction_slot_eq, ":number", 102, 0),
				(neg|faction_slot_eq, ":number", 102, 1),
				(troop_set_slot, "trp_temp_lord", reg0, ":number"),
				(val_add, reg0, 1),
			(try_end),
			(gt, reg0, 0),
			(store_random_in_range, ":random_in_range_0_reg0", 0, reg0),
			(troop_get_slot, ":number", "trp_temp_lord", ":random_in_range_0_reg0"),
			(assign, "$crusade_target_faction", ":number")
		]),

	(1.0, 0.0, 0.0,
		[
			(eq, 0, 1),
			(eq, "$g_camp_mode", 1),
			(is_currently_night)
		],

		[]),

	(1.0, 0.0, 0.0,
		[
			(store_num_parties_of_template, ":num_parties_of_template_merc_party", "pt_merc_party"),
			(ge, ":num_parties_of_template_merc_party", 1)
		],

		[
			(try_for_parties, ":var_1"),
				(party_get_template_id, ":template_id_var_1", ":var_1"),
				(eq, ":template_id_var_1", "pt_merc_party"),
				(party_set_faction, ":var_1", "$players_kingdom"),
				(party_get_slot, ":var_1_ai_state", ":var_1", slot_party_ai_state),
				(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
				(try_begin),
					(eq, ":var_1_ai_state", 2),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
					(try_begin),
						(gt, ":distance_to_party_from_party_var_1_var_1_ai_object", 10),
						(party_set_ai_behavior, ":var_1", 6),
						(party_get_position, 5, ":var_1_ai_object"),
						(party_set_ai_target_position, ":var_1", 5),
					(else_try),
						(party_set_ai_behavior, ":var_1", 2),
						(party_set_ai_object, ":var_1", ":var_1_ai_object"),
						(party_set_ai_patrol_radius, ":var_1", 5),
					(try_end),
				(else_try),
					(eq, ":var_1_ai_object", "p_main_party"),
					(party_set_ai_behavior, ":var_1", 10),
					(party_set_ai_object, ":var_1", "p_main_party"),
				(try_end),
				(store_party_size_wo_prisoners, ":party_size_wo_prisoners_var_1", ":var_1"),
				(try_begin),
					(le, ":party_size_wo_prisoners_var_1", 10),
					(remove_party, ":var_1"),
				(try_end),
			(try_end)
		]),

	(168.0, 0.0, 0.0,
		[
			(store_num_parties_of_template, ":num_parties_of_template_merc_party", "pt_merc_party"),
			(ge, ":num_parties_of_template_merc_party", 1)
		],

		[
			(assign, ":value", -1),
			(assign, ":value_2", 0),
			(try_for_parties, ":var_3"),
				(party_get_template_id, ":template_id_var_3", ":var_3"),
				(eq, ":template_id_var_3", "pt_merc_party"),
				(party_get_num_companion_stacks, ":num_companion_stacks_var_3", ":var_3"),
				(try_for_range, ":localvariable", 0, ":num_companion_stacks_var_3"),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_3_localvariable", ":var_3", ":localvariable"),
					(party_stack_get_size, ":party_stack_size_var_3_localvariable", ":var_3", ":localvariable"),
					(call_script, "script_game_get_troop_wage", ":party_stack_troop_id_var_3_localvariable", 0),
					(val_mul, reg0, ":party_stack_size_var_3_localvariable"),
					(val_add, ":value_2", reg0),
				(try_end),
				(assign, ":value", ":var_3"),
			(try_end),
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(assign, ":value_3", 0),
			(try_begin),
				(lt, ":troop_gold_player", ":value_2"),
				(assign, ":value_3", 1),
				(assign, ":value_2", ":troop_gold_player"),
				(display_message, "@you do not have enough florins to pay your forces!"),
			(try_end),
			(try_begin),
				(eq, ":value_3", 1),
				(neq, ":value", -1),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(lt, ":random_in_range_0_100", 30),
				(set_spawn_radius, 1),
				(spawn_around_party, ":value", "pt_deserters"),
				(assign, ":var_12", reg0),
				(party_clear, ":var_12"),
				(party_get_num_companion_stacks, ":num_companion_stacks_var_3", ":var_3"),
				(try_for_range, ":localvariable", 0, ":num_companion_stacks_var_3"),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_3_localvariable", ":value", ":localvariable"),
					(party_stack_get_size, ":party_stack_size_var_3_localvariable", ":value", ":localvariable"),
					(party_add_members, ":var_12", ":party_stack_troop_id_var_3_localvariable", ":party_stack_size_var_3_localvariable"),
				(try_end),
				(remove_party, ":value"),
				(party_set_ai_behavior, ":var_12", 4),
				(party_set_ai_object, ":var_12", "p_main_party"),
				(display_message, "@One of your armies has deserted you!"),
			(try_end),
			(troop_remove_gold, "trp_player", ":value_2")
		]),

	(168.0, 0.0, 0.0,
		[],

		[
			(try_for_range, ":party", "p_town_1_1", "p_salt_mine"),
				(party_get_slot, ":party_298", ":party", 298),
				(this_or_next|eq, ":party_298", 0),
				(neg|party_is_active, ":party_298"),
				(party_set_slot, ":party", 298, -1),
				(store_faction_of_party, ":faction_of_party_party", ":party"),
				(this_or_next|eq, ":faction_of_party_party", "fac_kingdom_3"),
				(eq, ":faction_of_party_party", "fac_kingdom_27"),
				(set_spawn_radius, 5),
				(spawn_around_party, ":party", "pt_mongolian_camp"),
				(assign, ":value", reg0),
				(party_set_ai_behavior, ":value", 2),
				(party_set_ai_object, ":value", ":party"),
				(party_set_slot, ":value", slot_party_ai_object, ":party"),
				(party_set_ai_patrol_radius, ":value", 10),
				(party_set_slot, ":value", 299, ":party"),
				(party_set_slot, ":party", 298, ":value"),
				(party_set_faction, ":value", ":faction_of_party_party"),
				(party_set_slot, ":value", slot_town_center, "scn_village_mongol"),
				(party_set_slot, ":value", slot_center_volunteer_troop_amount, 1),
				(party_set_slot, ":value", slot_center_culture, "fac_culture_mongol"),
				(party_set_slot, ":value", 301, 1),
				(party_set_slot, ":value", slot_town_prosperity, 50),
				(party_set_slot, ":value", slot_party_type, 31),
				(party_set_icon, ":value", "icon_camp"),
			(try_end),
			(try_begin),
				(assign, ":party", "p_town_3_1"),
				(party_get_slot, ":party_298", ":party", 298),
				(le, ":party_298", 0),
				(store_faction_of_party, ":faction_of_party_party", ":party"),
				(set_spawn_radius, 5),
				(spawn_around_party, ":party", "pt_mongolian_camp"),
				(assign, ":value", reg0),
				(party_set_ai_behavior, ":value", 2),
				(party_set_ai_object, ":value", ":party"),
				(party_set_slot, ":value", slot_party_ai_object, ":party"),
				(party_set_ai_patrol_radius, ":value", 10),
				(party_set_slot, ":value", 299, ":party"),
				(party_set_slot, ":party", 298, ":value"),
				(party_set_faction, ":value", ":faction_of_party_party"),
				(party_set_slot, ":value", slot_town_center, "scn_village_mongol"),
				(party_set_slot, ":value", slot_center_volunteer_troop_amount, 1),
				(party_set_slot, ":value", slot_center_culture, "fac_culture_mongol"),
				(party_set_slot, ":value", 301, 1),
				(party_set_slot, ":value", slot_town_prosperity, 50),
				(party_set_slot, ":value", slot_party_type, 31),
				(party_set_icon, ":value", "icon_camp"),
			(try_end)
		]),

	(48.0, 0.0, 0.0,
		[
			(store_num_parties_of_template, ":num_parties_of_template_mongolian_camp", "pt_mongolian_camp"),
			(gt, ":num_parties_of_template_mongolian_camp", 0)
		],

		[
			(try_for_parties, ":var_1"),
				(party_get_template_id, ":template_id_var_1", ":var_1"),
				(eq, ":template_id_var_1", "pt_mongolian_camp"),
				(party_is_active, ":var_1"),
				(party_get_slot, ":var_1_301", ":var_1", 301),
				(try_begin),
					(eq, ":var_1_301", 1),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(le, ":random_in_range_0_100", 50),
					(party_set_slot, ":var_1", 301, 0),
					(party_set_icon, ":var_1", "icon_khergit"),
					(party_get_slot, ":var_1_299", ":var_1", 299),
					(party_set_ai_behavior, ":var_1", 2),
					(party_set_ai_object, ":var_1", ":var_1_299"),
					(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_299"),
					(party_set_ai_patrol_radius, ":var_1", 10),
				(else_try),
					(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
					(party_get_slot, ":var_1_299", ":var_1", 299),
					(store_faction_of_party, ":faction_of_party_var_1_299", ":var_1_299"),
					(eq, ":faction_of_party_var_1_299", ":faction_of_party_var_1"),
					(party_set_slot, ":var_1", 301, 1),
					(party_set_icon, ":var_1", "icon_camp"),
				(try_end),
				(try_begin),
					(store_party_size_wo_prisoners, ":party_size_wo_prisoners_var_1", ":var_1"),
					(le, ":party_size_wo_prisoners_var_1", 100),
					(store_random_in_range, ":random_in_range_0_100", 1, 101),
					(try_begin),
						(le, ":random_in_range_0_100", 25),
						(assign, ":value", "pt_kingdom_mongol_reinforcements_c"),
					(else_try),
						(ge, ":random_in_range_0_100", 75),
						(assign, ":value", "pt_kingdom_mongol_reinforcements_b"),
					(else_try),
						(assign, ":value", "pt_kingdom_mongol_reinforcements_a"),
					(try_end),
					(party_add_template, ":var_1", ":value"),
					(party_get_slot, ":var_1_center_volunteer_troop_amount", ":var_1", slot_center_volunteer_troop_amount),
					(lt, ":var_1_center_volunteer_troop_amount", 6),
					(val_add, ":var_1_center_volunteer_troop_amount", 1),
					(party_set_slot, ":var_1", slot_center_volunteer_troop_amount, ":var_1_center_volunteer_troop_amount"),
				(try_end),
			(try_end)
		]),

]